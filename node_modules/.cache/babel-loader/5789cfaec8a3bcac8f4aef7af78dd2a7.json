{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\src\\\\components\\\\core\\\\CodeView.js\";\nimport React from 'react';\nimport Ace from 'react-ace';\nimport brace from 'brace'; // Define available languages\n\nvar languages = ['javascript']; // Terminal: Dark Theme\n// Tomorrow: Light Theme\n\nvar themes = ['terminal', 'tomorrow'];\nthemes.forEach(function (theme) {\n  require(\"brace/theme/\".concat(theme));\n});\nvar defaultValue = 'TESTDEFAULS';\n\nfunction onChange(newValue) {\n  console.log('change', newValue);\n}\n\nvar CodeView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CodeView, _React$Component);\n\n  function CodeView(props) {\n    var _this;\n\n    _classCallCheck(this, CodeView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CodeView).call(this, props));\n    _this.state = {\n      value: defaultValue,\n      theme: 'terminal',\n      mode: 'javascript',\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      fontSize: 14,\n      showGutter: true,\n      showPrintMargin: true,\n      highlightActiveLine: true,\n      enableSnippets: false,\n      showLineNumbers: true\n    };\n    return _this;\n  }\n\n  _createClass(CodeView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Ace, {\n        mode: this.state.mode,\n        value: this.state.defaultValue,\n        editorProps: {\n          $blockScrolling: true\n        },\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CodeView;\n}(React.Component);\n\nexport default CodeView;","map":{"version":3,"sources":["C:\\Users\\ihand\\GitHub\\fyp18053\\src\\components\\core\\CodeView.js"],"names":["React","Ace","brace","languages","themes","forEach","theme","require","defaultValue","onChange","newValue","console","log","CodeView","props","state","value","mode","enableBasicAutocompletion","enableLiveAutocompletion","fontSize","showGutter","showPrintMargin","highlightActiveLine","enableSnippets","showLineNumbers","$blockScrolling","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,CACd,YADc,CAAlB,C,CAIA;AACA;;AACA,IAAMC,MAAM,GAAG,CACX,UADW,EAEX,UAFW,CAAf;AAKAA,MAAM,CAACC,OAAP,CAAe,UAAAC,KAAK,EAAG;AACnBC,EAAAA,OAAO,uBAAgBD,KAAhB,EAAP;AACH,CAFD;AAIA,IAAME,YAAY,GAAG,aAArB;;AAEA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;AACH;;IAGKG,Q;;;;;AACE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAER,YADE;AAETF,MAAAA,KAAK,EAAE,UAFE;AAGTW,MAAAA,IAAI,EAAE,YAHG;AAITC,MAAAA,yBAAyB,EAAE,KAJlB;AAKTC,MAAAA,wBAAwB,EAAE,KALjB;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,UAAU,EAAE,IAPH;AAQTC,MAAAA,eAAe,EAAE,IARR;AASTC,MAAAA,mBAAmB,EAAE,IATZ;AAUTC,MAAAA,cAAc,EAAE,KAVP;AAWTC,MAAAA,eAAe,EAAE;AAXR,KAAb;AAFe;AAetB;;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,IAAI,EAAG,KAAKV,KAAL,CAAWE,IADtB;AAEI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWP,YAFtB;AAGI,QAAA,WAAW,EACP;AACIkB,UAAAA,eAAe,EAAE;AADrB,SAJR;AAQI,QAAA,QAAQ,EAAEjB,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH;;;;EAjCkBT,KAAK,CAAC2B,S;;AAwC7B,eAAed,QAAf","sourcesContent":["import React from 'react';\r\nimport Ace from 'react-ace';\r\nimport brace from 'brace';\r\n\r\n// Define available languages\r\nconst languages = [\r\n    'javascript'\r\n]\r\n\r\n// Terminal: Dark Theme\r\n// Tomorrow: Light Theme\r\nconst themes = [\r\n    'terminal',\r\n    'tomorrow'\r\n]\r\n\r\nthemes.forEach(theme =>{\r\n    require(`brace/theme/${theme}`);\r\n});\r\n\r\nconst defaultValue = 'TESTDEFAULS'\r\n\r\nfunction onChange(newValue) {\r\n    console.log('change', newValue);\r\n}\r\n\r\n\r\nclass CodeView extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                value: defaultValue,\r\n                theme: 'terminal',\r\n                mode: 'javascript',\r\n                enableBasicAutocompletion: false,\r\n                enableLiveAutocompletion: false,\r\n                fontSize: 14,\r\n                showGutter: true,\r\n                showPrintMargin: true,\r\n                highlightActiveLine: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Ace\r\n                    mode= {this.state.mode}\r\n                    value={this.state.defaultValue}\r\n                    editorProps = {\r\n                        {\r\n                            $blockScrolling: true\r\n                        }\r\n                    }\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CodeView;"]},"metadata":{},"sourceType":"module"}