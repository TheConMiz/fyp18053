{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\src\\\\components\\\\core\\\\CodeView.js\";\nimport React from 'react';\nimport Ace from 'react-ace';\nimport brace from 'brace'; // Define available languages\n\nvar languages = ['javascript']; // Define available themes\n\nvar themes = ['solarized_dark', 'solarized_light'];\nthemes.forEach(function (theme) {\n  require(\"brace/theme/\".concat(theme));\n});\n\nvar CodeView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CodeView, _React$Component);\n\n  function CodeView() {\n    _classCallCheck(this, CodeView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CodeView).apply(this, arguments));\n  }\n\n  _createClass(CodeView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Ace, {\n        theme: \"solarized_dark\",\n        defaultValue: \"// Type something here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CodeView;\n}(React.Component);\n\nexport default CodeView;","map":{"version":3,"sources":["C:\\Users\\ihand\\GitHub\\fyp18053\\src\\components\\core\\CodeView.js"],"names":["React","Ace","brace","languages","themes","forEach","theme","require","CodeView","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,CACd,YADc,CAAlB,C,CAIA;;AACA,IAAMC,MAAM,GAAG,CACX,gBADW,EAEX,iBAFW,CAAf;AAKAA,MAAM,CAACC,OAAP,CAAe,UAAAC,KAAK,EAAG;AACnBC,EAAAA,OAAO,uBAAgBD,KAAhB,EAAP;AACH,CAFD;;IAKME,Q;;;;;;;;;;;;;6BAEM;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,KAAK,EAAE,gBADX;AAEI,QAAA,YAAY,EAAC,wBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AASH;;;;EAZkBR,KAAK,CAACS,S;;AAmB7B,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport Ace from 'react-ace';\r\nimport brace from 'brace';\r\n\r\n// Define available languages\r\nconst languages = [\r\n    'javascript'\r\n]\r\n\r\n// Define available themes\r\nconst themes = [\r\n    'solarized_dark',\r\n    'solarized_light'\r\n]\r\n\r\nthemes.forEach(theme =>{\r\n    require(`brace/theme/${theme}`);\r\n});\r\n\r\n\r\nclass CodeView extends React.Component{ \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <Ace\r\n                    theme= 'solarized_dark'\r\n                    defaultValue='// Type something here'\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CodeView;"]},"metadata":{},"sourceType":"module"}