{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\ihand\\\\GitHub\\\\fyp18053\\\\src\\\\components\\\\AppDrawer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LightOn from '@material-ui/icons/WbIncandescent';\nimport LightOff from '@material-ui/icons/WbIncandescentOutlined'; // give each thing a class name later\n\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    menuButton: {\n      marginRight: 20,\n      marginLeft: -12\n    },\n    appBar: {\n      marginLeft: drawerWidth\n    },\n    typography: {\n      marginRight: 20\n    },\n    accountCircle: {\n      marginRight: -12\n    },\n    lights: {},\n    appDrawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  };\n};\n\nvar AppDrawer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppDrawer, _React$Component);\n\n  function AppDrawer(props) {\n    var _this;\n\n    _classCallCheck(this, AppDrawer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppDrawer).call(this, props));\n\n    _this.handleLightChange = function () {\n      _this.setState(function (state) {\n        return {\n          light: !_this.state.light\n        };\n      }); //console.log(this.state.light)\n\n    };\n\n    _this.handleMenuOpen = function () {\n      _this.setState(function (state) {\n        return {\n          drawer: !_this.state.drawer\n        };\n      }); //console.log(this.state.drawer)\n\n    };\n\n    _this.state = {\n      light: true,\n      drawer: false\n    };\n    return _this;\n  }\n\n  _createClass(AppDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var appDrawer = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.appDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        className: classes.menuButton,\n        \"aria-label\": \"Open Menu\",\n        onClick: this.handleMenuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        className: classes.typography,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"FYP18053\"), React.createElement(IconButton, {\n        color: \"inherit\",\n        className: classes.lights,\n        onClick: this.handleLightChange,\n        \"aria-label\": \"Toggle Lights\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, !this.state.light ? React.createElement(LightOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : React.createElement(LightOn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        color: \"inherit\",\n        className: classes.accountCircle,\n        \"aria-label\": \"My Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AppDrawer;\n}(React.Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(AppDrawer);","map":{"version":3,"sources":["c:\\Users\\ihand\\GitHub\\fyp18053\\src\\components\\AppDrawer.js"],"names":["React","PropTypes","Drawer","AppBar","Divider","List","ListItem","ListItemIcon","ListItemText","IconButton","Toolbar","MenuIcon","Typography","withStyles","AccountCircle","LightOn","LightOff","drawerWidth","styles","theme","root","display","menuButton","marginRight","marginLeft","appBar","typography","accountCircle","lights","appDrawer","width","flexShrink","AppDrawer","props","handleLightChange","setState","state","light","handleMenuOpen","drawer","classes","Component","withTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,2CAArB,C,CACA;;AAEA,IAAMC,WAAW,GAAG,GAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiB;AAKvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVC,MAAAA,UAAU,EAAE,CAAC;AAFH,KALW;AAUvBC,IAAAA,MAAM,EAAE;AACND,MAAAA,UAAU,EAAEP;AADN,KAVe;AAcvBS,IAAAA,UAAU,EAAE;AACVH,MAAAA,WAAW,EAAE;AADH,KAdW;AAkBvBI,IAAAA,aAAa,EAAE;AACbJ,MAAAA,WAAW,EAAE,CAAC;AADD,KAlBQ;AAsBvBK,IAAAA,MAAM,EAAE,EAtBe;AA0BvBC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAEb,WADA;AAEPc,MAAAA,UAAU,EAAE;AAFL;AA1BY,GAAL;AAAA,CAApB;;IAoCMC,S;;;;;AAEJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,UASlBC,iBATkB,GASE,YAAK;AACvB,YAAKC,QAAL,CAAc,UAAAC,KAAK;AAAA,eAAK;AAACC,UAAAA,KAAK,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAApB,SAAL;AAAA,OAAnB,EADuB,CAEvB;;AACD,KAZiB;;AAAA,UAclBC,cAdkB,GAcD,YAAK;AACpB,YAAKH,QAAL,CAAc,UAAAC,KAAK;AAAA,eAAK;AAACG,UAAAA,MAAM,EAAE,CAAC,MAAKH,KAAL,CAAWG;AAArB,SAAL;AAAA,OAAnB,EADoB,CAEpB;;AACD,KAjBiB;;AAGhB,UAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXE,MAAAA,MAAM,EAAE;AAFG,KAAb;AAHgB;AAQjB;;;;6BAWO;AAAA,wBACmB,KAAKN,KADxB;AAAA,UACCO,OADD,eACCA,OADD;AAAA,UACUrB,KADV,eACUA,KADV;AAGN,UAAMU,SAAS,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEW,OAAO,CAACX,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQA,aACE;AAAK,QAAA,SAAS,EAAIW,OAAO,CAACpB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEoB,OAAO,CAACf,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEe,OAAO,CAAClB,UAA/C;AAA2D,sBAAW,WAAtE;AAAkF,QAAA,OAAO,EAAE,KAAKgB,cAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAyC,QAAA,MAAM,MAA/C;AAAgD,QAAA,SAAS,EAAEE,OAAO,CAACd,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAOE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEc,OAAO,CAACZ,MAA/C;AAAuD,QAAA,OAAO,EAAE,KAAKM,iBAArE;AAAwF,sBAAW,eAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,CAAC,KAAKE,KAAL,CAAWC,KAAb,GAAqB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAkC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrC,CAPF,EAUE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEG,OAAO,CAACb,aAA/C;AAA8D,sBAAW,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF,CADF,CADF;AAoBD;;;;EApDqB3B,KAAK,CAACyC,S;;AAuD9B,eAAe5B,UAAU,CAACK,MAAD,EAAS;AAACwB,EAAAA,SAAS,EAAE;AAAZ,CAAT,CAAV,CAAsCV,SAAtC,CAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Drawer from '@material-ui/core/Drawer/Drawer'\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport LightOn from '@material-ui/icons/WbIncandescent'\r\nimport LightOff from '@material-ui/icons/WbIncandescentOutlined'\r\n// give each thing a class name later\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 20,\r\n    marginLeft: -12,\r\n  },\r\n\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n  },\r\n\r\n  typography: {\r\n    marginRight: 20,\r\n  },\r\n\r\n  accountCircle: {\r\n    marginRight: -12\r\n  },\r\n\r\n  lights: {\r\n\r\n  },\r\n\r\n  appDrawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n  },\r\n\r\n\r\n\r\n\r\n})\r\n\r\nclass AppDrawer extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = { \r\n      light: true,\r\n      drawer: false,\r\n\r\n    }\r\n  }\r\n  handleLightChange = () =>{\r\n    this.setState(state => ({light: !this.state.light}))\r\n    //console.log(this.state.light)\r\n  }\r\n\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n    //console.log(this.state.drawer)\r\n  }\r\n\r\n  render(){\r\n    const {classes, theme} = this.props\r\n\r\n    const appDrawer = (\r\n      <div>\r\n        <div className={classes.appDrawer}>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" className={classes.menuButton} aria-label=\"Open Menu\" onClick={this.handleMenuOpen}>\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.typography}>\r\n              FYP18053\r\n            </Typography>\r\n            <IconButton color=\"inherit\" className={classes.lights} onClick={this.handleLightChange} aria-label=\"Toggle Lights\">\r\n              {(!this.state.light)? <LightOff/>: <LightOn/>}\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" className={classes.accountCircle} aria-label=\"My Account\">\r\n              <AccountCircle/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(AppDrawer) "]},"metadata":{},"sourceType":"module"}