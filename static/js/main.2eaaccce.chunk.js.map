{"version":3,"sources":["components/AppDrawer/assets/LightSwitch.js","components/AppDrawer/AppDrawer.js","components/MainViews/turing/TuringControls.js","components/MainViews/turing/CodeView.js","components/MainViews/turing/TuringTape.js","components/MainViews/turing/Turing.js","components/MainViews/TuringView.js","components/MainViews/VonNeumannView.js","components/MainViews/sorting/ScriptMenu.js","components/MainViews/sorting/SortControls.js","components/MainViews/sorting/CodeView.js","components/MainViews/sorting/SortD3.js","components/MainViews/SortingView.js","components/MainViews/MainPage.js","components/App.js","components/themes.js","index.js"],"names":["LightSwitch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","snackbar","classes","react_default","a","createElement","Tooltip_default","title","placement","IconButton_default","color","className","lights","onClick","handleLightChange","aria-label","light","WbSunnyOutlined_default","WbSunny_default","React","Component","withStyles","theme","margin","spacing","unit","withTheme","AppDrawer","handleMenuOpen","setState","drawer","handleAboutOpen","about","modes","_this2","_this$props","appDrawer","MenuList_default","subheader","ListSubheader_default","component","Divider_default","map","text","index","MenuItem_default","menuItem","button","key","Link","to","replace","toLowerCase","ListItemText_default","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","nestedItem","target","href","go","inset","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","menuButton","Menu_default","Typography_default","variant","noWrap","typography","assets_LightSwitch","Hidden_default","smUp","implementation","SwipeableDrawer_default","container","anchor","open","onOpen","onClose","compose","display","marginRight","marginLeft","flexGrow","align","settingsIcon","paddingLeft","&:focus","backgroundColor","palette","main","& $primary, & $icon","common","white","defineProperty","breakpoints","up","width","flexShrink","withRouter","TuringControls","scriptMenuOpen","scriptMenu","stateMenuOpen","stateMenu","instructionsMenuOpen","instructionsMenu","Paper_default","controlPaper","elevation","core_IconButton_default","setPlay","startMachine","disabled","play","core_Tooltip_default","PlayArrow_default","Stop_default","Refresh_default","Button_default","index_es","Dialog_default","dialog","FormControl_default","formControl","RadioGroup_default","name","radio","value","currentScript","onChange","event","setScript","scriptList","FormControlLabel_default","control","Radio_default","label","scroll","stateList","ListItem_default","addStates","length","removeStates","instructions","object","id","react","InputLabel_default","shrink","Select_default","currentState","setInstruction","input","Input_default","ifRead","dataList","write","goTo","moveTape","moveList","addInstruction","removeInstruction","padding","textField","statePaper","CodeView","Paper_Paper_default","lib_default","height","wrapEnabled","onLoad","mode","fontSize","highlightActiveLine","editorProps","$blockScrolling","Infinity","readOnly","setAutoScrollEditorIntoView","setUseWrapMode","indentedSoftWrap","TuringTape","tapePaper","tapeArray","tapePosition","console","log","changeCell","maxWidth","Turing","tempStates","slice","push","pop","newScript","endless10Setter","incrementOneSetter","divisibleByThreeSetter","palindromeSetter","tempInstructions","newObject","cellId","tempTape","startState","currentInstruction","find","element","Grid_default","direction","justify","alignItems","turing_TuringTape","item","turing_CodeView","turing_TuringControls","addData","removeData","style","marginTop","gutterBottom","TuringView","svgWidth","svgHeight","turing_Turing","VonNeumannView","ScriptMenu","SortControls","selection","bubbleSort","insertionSort","selectionSort","quickSort","stopLoop","shuffleBarChart","scripts","TextField_default","type","InputLabelProps","speed","setSpeed","helperText","dataSize","setDataSize","simView","bubbleValue","insertionValue","quickValue","selectionValue","tabSize","SortD3","loop","xScale","yScale","setScales","data","d3","domain","range","paddingInner","clearInterval","selectAll","attr","newDataSize","newSpeed","initBarChart","initData","enter","append","d","i","bandwidth","transition","duration","randomData","values","remove","currentData","currentPos","iteration","setInterval","_ref","bubbleSortLoop","classed","complete","resetTest","_ref2","insertionSortLoop","sorted","min","reset","_ref3","selectionSortLoop","sorting","pivot","l","r","toSort","quickSortLoop","shift","Math","floor","random","undefined","_ref4","concat","every","_ref5","_ref6","slicedToArray","isCompleted","bind","assertThisInitialized","sorting_CodeView","sorting_SortControls","mergeSort","codeView","SortingView","MainViews_sorting_SortD3","MainPage","typingDone","Typist_default","avgTypingSpeed","startDelay","onTypingDone","Backspace","count","delay","Delay","ms","lTheme","createMuiTheme","secondary","useNextVariants","dTheme","App","localStorage","getItem","JSON","parse","nextProps","nextState","setItem","stringify","core_styles","components_AppDrawer_AppDrawer","Switch","Route","exact","path","render","MainViews_SortingView","MainViews_TuringView","MainViews_VonNeumannView","MainViews_MainPage","ReactDOM","HashRouter","basename","components_App","document","getElementById"],"mappings":"wjBAiBMA,cAEF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAU,GAHER,wEAOV,IACGS,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAASG,MAAM,gBAAgBC,UAAU,UACzCL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,MAAM,YAAYC,UAAWT,EAAQU,OAAQC,QAASjB,KAAKJ,MAAMsB,kBAAmBC,aAAW,iBACtGnB,KAAKJ,MAAMwB,MAAoBb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,MAAZD,EAAAC,EAAAC,cAACa,EAAAd,EAAD,eAdVe,IAAMC,WAqBjBC,uBA3BA,SAAAC,GAAK,MAAK,CACrBV,OAAQ,CACNW,OAAQD,EAAME,QAAQC,QAyBM,CAACC,WAAW,GAA/BL,CAAsC9B,yFC0C/CoC,eACJ,SAAAA,EAAYnC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IAChBlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KAQRoC,eAAiB,WACfnC,EAAKoC,SAAS,SAAA7B,GAAK,MAAK,CAAC8B,QAASrC,EAAKO,MAAM8B,WAV7BrC,EAalBsC,gBAAkB,WAChBtC,EAAKoC,SAAS,SAAA7B,GAAK,MAAK,CAACgC,OAAQvC,EAAKO,MAAMgC,UAZ5CvC,EAAKO,MAAQ,CACX8B,QAAQ,EACRG,MAAOxC,EAAKD,MAAMyC,MAClBD,OAAO,GALOvC,wEAiBV,IAAAyC,EAAAtC,KAAAuC,EACmBvC,KAAKJ,MAAvBU,EADDiC,EACCjC,QAAS+B,EADVE,EACUF,MAGVG,EACJjC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQkC,WAEtBjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAUkC,UAAWnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAeoC,UAAU,OAAzB,WAEnBrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAIC6B,EAAMS,IAAI,SAACC,EAAMC,GAAP,OAETzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CACEO,UAAWT,EAAQ4C,SACnBC,QAAM,EAACC,IAAOL,EACd9B,QAAS,WACPqB,EAAKN,kBAEPY,UAAWS,KACXC,GAAIP,EAAKQ,QAAQ,MAAM,KAAKC,eAE1BjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAckD,QAASX,QAO/BxC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAEAD,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CACIO,UAAWT,EAAQ4C,SACnBC,QAAM,EACNlC,QAAS,WAAOqB,EAAKH,oBAEnB5B,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAckD,QAAQ,UAErB1D,KAAKI,MAAMgC,MAAQ7B,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,MAAiBD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,OAK3CD,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CAAUsD,GAAI9D,KAAKI,MAAMgC,MAAO2B,QAAQ,OAAOC,eAAa,GAC1DzD,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CACEO,UAAWT,EAAQ2D,WACnBrB,UAAU,IAAIsB,OAAO,SAASC,KAAK,yCACjC5D,EAAAC,EAAAC,cAAC2D,GAAA,EAAD,MACA7D,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAckD,QAAQ,kBAAkBW,OAAK,UAS7D,OACE9D,EAAAC,EAAAC,cAAA,OAAKM,UAAaT,EAAQgE,MACxB/D,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,MACAD,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAQO,UAAWT,EAAQmE,QAEzBlE,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,KACED,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAASG,MAAM,YAAYC,UAAY,UACrCL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,MAAM,YAAYC,UAAWT,EAAQqE,WAAY1D,QAASjB,KAAKgC,gBACzEzB,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,SAKND,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYsE,QAAQ,KAAKhE,MAAM,YAAYiE,QAAM,EAAChE,UAAWT,EAAQ0E,YAArE,UAIAzE,EAAAC,EAAAC,cAACwE,EAAD,CAAa7D,MAAOpB,KAAKJ,MAAMwB,MAAOF,kBAAmBlB,KAAKJ,MAAMsB,sBAKxEX,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQkC,WACtBjC,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQ2E,MAAI,EAACC,eAAe,OAC1B7E,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CAAiB8E,UAAWtF,KAAKJ,MAAM0F,UAAWC,OAAO,OAAOC,KAAMxF,KAAKI,MAAM8B,OAAQuD,OAAQzF,KAAKgC,eAAgB0D,QAAS1F,KAAKgC,gBACjIQ,aA3GSjB,IAAMC,WAqHfmE,eACblE,qBAnKa,SAAAC,GAAK,MAAK,CACrB4C,KAAM,CACJsB,QAAS,QAGXjB,WAAY,CACVkB,YAAa,GACbC,YAAa,IAGfrB,OAAQ,CACNqB,WAbc,KAgBhBd,WAAY,CACVa,YAAa,GACbE,SAAU,EACVC,MAAO,UAGTC,aAAc,CACZJ,aAAc,IAGhB5B,WAAY,CACViC,YAAaxE,EAAME,QAAQC,MAG7BqB,SAAU,CACRiD,UAAW,CACTC,gBAAiB1E,EAAM2E,QAAQ3C,QAAQ4C,KACvCC,sBAAuB,CACrBzF,MAAOY,EAAM2E,QAAQG,OAAOC,SAKlCjE,UAAU1C,OAAA4G,EAAA,EAAA5G,CAAA,GACP4B,EAAMiF,YAAYC,GAAG,MAAQ,CAC5BC,MAzCY,IA0CZC,WAAY,MA2HC,CAAChF,WAAW,IAC/BiF,KAFapB,CAGZ5D,mWCvIGiF,eAEF,SAAAA,EAAYpH,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgH,IACdnH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkH,GAAA7G,KAAAH,KAAMJ,KASVqH,eAAiB,WACbpH,EAAKoC,SAAS,CAACiF,YAAarH,EAAKO,MAAM8G,cAXzBrH,EAclBsH,cAAgB,WACZtH,EAAKoC,SAAS,CAACmF,WAAYvH,EAAKO,MAAMgH,aAfxBvH,EAkBlBwH,qBAAuB,WACnBxH,EAAKoC,SAAS,CAACqF,kBAAmBzH,EAAKO,MAAMkH,oBAhB7CzH,EAAKO,MAAQ,CACT8G,YAAY,EACZE,WAAW,EACXE,kBAAkB,GANRzH,wEAsBV,IAAAyC,EAAAtC,KACGM,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACIO,UAAWT,EAAQkH,aACnBC,UAAW,GAEXlH,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,YACNG,QAAS,WACLqB,EAAK1C,MAAM+H,UACXrF,EAAK1C,MAAMgI,gBAEfC,SAAU7H,KAAKJ,MAAMkI,MACrBvH,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,SACbJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,QAIRD,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,YACN+G,UAAW7H,KAAKJ,MAAMkI,KACtB7G,QAASjB,KAAKJ,MAAM+H,SACpBpH,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,QACbJ,EAAAC,EAAAC,cAACwH,GAAAzH,EAAD,QAIRD,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,aACNP,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,SACbJ,EAAAC,EAAAC,cAACyH,GAAA1H,EAAD,QAIRD,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBrC,MAAM,UACNgE,QAAQ,YACR7D,QAASjB,KAAKiH,gBAEd1G,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CAAYtH,MAAM,aAAlB,YAKJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBrC,MAAM,UACNgE,QAAQ,YACR7D,QAASjB,KAAKmH,eAEd5G,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CAAYtH,MAAM,aAAlB,mBAKJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBrC,MAAM,UACNgE,QAAQ,YACR7D,QAASjB,KAAKqH,sBAEd9G,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CAAYtH,MAAM,aAAlB,iBAKJP,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACIgF,KAAMxF,KAAKI,MAAM8G,WACjBnG,UAAWT,EAAQgI,QAEnB/H,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CACIoC,UAAU,WACV7B,UAAWT,EAAQkI,aACfjI,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACIrH,UAAWT,EAAQ0E,WACnBF,QAAQ,KACRhE,MAAM,YACNkF,MAAM,UAJV,iBAQAzF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAEAD,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,CACIkI,KAAK,cACL3H,UAAWT,EAAQqI,MACnBC,MAAO5I,KAAKJ,MAAMiJ,cAClBC,SAAU,SAACC,GAAD,OAAWzG,EAAK1C,MAAMoJ,UAAUD,EAAM7E,OAAO0E,SAClD5I,KAAKJ,MAAMqJ,WAAWnG,IAAI,SAACC,EAAMC,GAAP,OACvBzC,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,CAAkBoI,MAAO7F,EAAMK,IAAKJ,EAAOmG,QAAS5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAOM,MAAM,cAAeuI,MAAOtG,QAK3GxC,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBlC,QAASjB,KAAKiH,eACdnC,QAAQ,YACRhE,MAAM,WACNP,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,aAORP,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACIgF,KAAMxF,KAAKI,MAAMgH,UACjBrG,UAAWT,EAAQgI,OACnBgB,OAAO,QAEP/I,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CACIoC,UAAU,WACV7B,UAAWT,EAAQkI,aACfjI,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACIrH,UAAWT,EAAQ0E,WACnBF,QAAQ,KACRhE,MAAM,YACNkF,MAAM,UAJV,UAQAzF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAECR,KAAKJ,MAAM2J,UAAUzG,IAAI,SAACC,EAAMC,GAAP,OACtBzC,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAAD,CAAW4C,IAAKL,GACZxC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAckD,QAASX,QAMvCxC,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnB2B,QAAQ,YACRhE,MAAM,UACNG,QAASjB,KAAKJ,MAAM6J,WACpBlJ,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,cAMJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnB2B,QAAQ,YACRhE,MAAM,UACN+G,SAAwC,IAA9B7H,KAAKJ,MAAM2J,UAAUG,OAC/BzI,QAASjB,KAAKJ,MAAM+J,cACpBpJ,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,iBAMJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBlC,QAASjB,KAAKmH,cACdrC,QAAQ,YACRhE,MAAM,WACNP,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,aAORP,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACIgF,KAAMxF,KAAKI,MAAMkH,iBACjBvG,UAAWT,EAAQgI,OACnBgB,OAAO,QAEP/I,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CACIoC,UAAU,WACV7B,UAAWT,EAAQkI,aACfjI,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACIrH,UAAWT,EAAQ0E,WACnBF,QAAQ,KACRhE,MAAM,YACNkF,MAAM,UAJV,gBAQAzF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAECR,KAAKJ,MAAMgK,aAAa9G,IAAI,SAAC+G,EAAQC,GAAT,OACzBvJ,EAAAC,EAAAC,cAACsJ,EAAA,SAAD,CAAW3G,IAAK0G,GACZvJ,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACIrH,UAAWT,EAAQ0E,WACnBF,QAAQ,KACRhE,MAAM,YACNkF,MAAM,UAJV,eAKqB8D,GAGrBvJ,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CAEIO,UAAWT,EAAQkI,aACnBjI,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAYyJ,QAAM,GAAlB,SAIA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CACIoI,MAAOiB,EAAOM,aACdrB,SAAU,SAACC,GACPc,EAAOM,aAAepB,EAAM7E,OAAO0E,MACnCtG,EAAK1C,MAAMwK,eAAeP,EAAQC,IACtCO,MAAO9J,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAOkI,KAAK,QAAQoB,GAAG,WAGjCxH,EAAK1C,MAAM2J,UAAUzG,IAAI,SAACC,EAAM+G,GAAP,OACtBvJ,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU4C,IAAK0G,EAAIlB,MAAO7F,GACrBA,OAObxC,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CAAaO,UAAWT,EAAQkI,aAC5BjI,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAYyJ,QAAM,GAAlB,WAIA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CACIoI,MAAOiB,EAAOU,OACdzB,SAAU,SAACC,GACPc,EAAOU,OAASxB,EAAM7E,OAAO0E,MAC7BtG,EAAK1C,MAAMwK,eAAeP,EAAQC,IACtCO,MAAO9J,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAOkI,KAAK,SAASoB,GAAG,YAG9BxH,EAAK1C,MAAM4K,SAAS1H,IAAI,SAACC,EAAM+G,GAAP,OACrBvJ,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU4C,IAAK0G,EAAIlB,MAAO7F,GACrBA,OAOjBxC,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CAAaO,UAAWT,EAAQkI,aAC5BjI,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAYyJ,QAAM,GAAlB,SAIA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CACIoI,MAAOiB,EAAOY,MACd3B,SAAU,SAACC,GACPc,EAAOY,MAAQ1B,EAAM7E,OAAO0E,MAC5BtG,EAAK1C,MAAMwK,eAAeP,EAAQC,IACtCO,MAAO9J,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAOkI,KAAK,QAAQoB,GAAG,WAG7BxH,EAAK1C,MAAM4K,SAAS1H,IAAI,SAACC,EAAM+G,GAAP,OACrBvJ,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU4C,IAAK0G,EAAIlB,MAAO7F,GACrBA,OAOjBxC,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CAAaO,UAAWT,EAAQkI,aAC5BjI,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAYyJ,QAAM,GAAlB,cAIA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CACIoI,MAAOiB,EAAOa,KACd5B,SAAU,SAACC,GACPc,EAAOa,KAAO3B,EAAM7E,OAAO0E,MAC3BtG,EAAK1C,MAAMwK,eAAeP,EAAQC,IACtCO,MAAO9J,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAOkI,KAAK,YAAYoB,GAAG,eAGjCxH,EAAK1C,MAAM2J,UAAUzG,IAAI,SAACC,EAAM+G,GAAP,OACtBvJ,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU4C,IAAK0G,EAAIlB,MAAO7F,GACrBA,OAOjBxC,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CACIO,UAAWT,EAAQkI,aAEnBjI,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAYyJ,QAAM,GAAlB,aAIA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CACIoI,MAAOiB,EAAOc,SACd7B,SAAU,SAACC,GACPc,EAAOc,SAAW5B,EAAM7E,OAAO0E,MAC/BtG,EAAK1C,MAAMwK,eAAeP,EAAQC,IACtCO,MAAO9J,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,CAAOkI,KAAK,WAAWoB,GAAG,cAGhCxH,EAAK1C,MAAMgL,SAAS9H,IAAI,SAACC,EAAM+G,GAAP,OACrBvJ,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAU4C,IAAK0G,EAAIlB,MAAO7F,GACrBA,WAWjCxC,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnB2B,QAAQ,YACRhE,MAAM,UACNG,QAASjB,KAAKJ,MAAMiL,gBACpBtK,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,oBAMJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnB2B,QAAQ,YACRhE,MAAM,UACN+G,SAA2C,IAAjC7H,KAAKJ,MAAMgK,aAAaF,OAClCzI,QAASjB,KAAKJ,MAAMkL,mBACpBvK,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,uBAMJP,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBlC,QAASjB,KAAKqH,qBACdvC,QAAQ,YACRhE,MAAM,WACNP,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,qBA/WKS,IAAMC,WA2YpBC,wBA9aA,SAAAC,GAAK,MAAK,CACrB8F,aAAc,CACVX,MAAQ,IACRd,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3BsB,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,MAE1BmD,WAAY,CACR+F,QAASrJ,EAAME,QAAQC,MAE3ByG,OAAQ,CACJvC,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAE3B8G,MAAO,CACHoC,QAA8B,EAArBrJ,EAAME,QAAQC,MAE3BmJ,UAAW,CACPrJ,OAAQD,EAAME,QAAQC,KACtBgF,MAAO,KAEXoE,WAAY,CACRpE,MAAO,IACPkE,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3B2G,YAAa,CACT7G,OAAQD,EAAME,QAAQC,KACtBkE,SAAU,KA+YgB,CAACjE,WAAW,GAA/BL,CAAsCuF,oECzb/CkE,eACF,SAAAA,EAAYtL,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkL,IACdrL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoL,GAAA/K,KAAAH,KAAMJ,KAEDQ,MAAQ,GAHCP,wEAQV,IACGS,EAAWN,KAAKJ,MAAhBU,QAEP,OACIC,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CAAOO,UAAWT,EAAQgE,KAAMmD,UAAW,GACvClH,EAAAC,EAAAC,cAAC2K,GAAA5K,EAAD,CACIqG,MAAM,QACNwE,OAAO,QACPC,aAAa,EACbC,OAAQvL,KAAKuL,OACbzC,SAAU9I,KAAK8I,SACf0C,KAAK,aACLC,SAAU,GACV/J,MAAS1B,KAAKJ,MAAMwB,MAA0B,SAAlB,iBAC5BsK,qBAAqB,EACrBC,YAAa,CAACC,gBAAiBC,KAC/BC,UAAU,EAEVC,6BAA6B,EAC7BC,gBAAgB,EAChBC,kBAAkB,YA7Bf1K,IAAMC,WAqCdC,wBAhDA,SAAAC,GAAK,MAAK,CAErB4C,KAAM,CACFyB,SAAU,EACVc,MAAO,IACPwE,OAAQ,IACRN,QAASrJ,EAAME,QAAQC,QA0CG,CAACC,WAAW,GAA/BL,CAAsCyJ,ICnC/CgB,eACF,SAAAA,EAAYtM,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkM,IACdrM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoM,GAAA/L,KAAAH,KAAMJ,KAMVU,QAAUT,EAAKD,MALXC,EAAKO,MAAQ,GAFCP,wEASV,IAAAyC,EAAAtC,KACGM,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CAAOO,UAAWT,EAAQ6L,WACtB5L,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MACCR,KAAKJ,MAAMwM,UAAUtJ,IAAI,SAACC,EAAM+G,GAAP,OACtBvJ,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBC,IAAK0G,EACLhJ,MAAOgJ,IAAOxH,EAAK1C,MAAMyM,aAAe,UAAW,YACnDvH,QAAQ,YACR7D,QAAS,kBAAOqB,EAAK1C,MAAMkI,KAAkCwE,QAAQC,IAAI,eAAvCjK,EAAK1C,MAAM4M,WAAW1C,KAC1C,UAAT/G,EAAmB,GAAKA,KAGrCxC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,cAzBSe,IAAMC,WA+BhBC,wBA7CA,SAAAC,GAAK,MAAK,CACrByK,UAAW,CACPM,SAAU,IACV1B,QAA8B,IAArBrJ,EAAME,QAAQC,KACvBkE,SAAU,GAEd5C,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,KACtBgF,MAAO,GACPwE,OAAQ,MAoCkB,CAACvJ,WAAW,GAA/BL,CAAsCyK,IC7B/CQ,eACF,SAAAA,EAAY9M,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACd7M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4M,GAAAvM,KAAAH,KAAMJ,KA8BV6J,UAAY,WACR,IAAIkD,EAAa9M,EAAKO,MAAMmJ,UAAUqD,QACtCD,EAAWE,KAAK,IAAMF,EAAWjD,QACjC7J,EAAKoC,SAAS,CAACsH,UAAWoD,IAC1BL,QAAQC,IAAI1M,EAAKO,MAAMmJ,YAnCT1J,EAsClB8J,aAAe,WACX,IAAIgD,EAAa9M,EAAKO,MAAMmJ,UAAUqD,QACtCD,EAAWG,MACXjN,EAAKoC,SAAS,CAACsH,UAAWoD,IAC1BL,QAAQC,IAAI1M,EAAKO,MAAMmJ,YA1CT1J,EA6ClBmJ,UAAY,SAAC+D,GAGK,iBAAdA,EAA+BlN,EAAKmN,kBACtB,mBAAdD,EAAiClN,EAAKoN,qBACxB,mBAAdF,EAAiClN,EAAKqN,yBACxB,yBAAdH,EAAuClN,EAAKsN,mBAE5Cb,QAAQC,IAAI,iBAEZ1M,EAAKoC,SAAS,CAAC4G,cAAekE,IAE9BT,QAAQC,IAAI1M,EAAKO,MAAMyI,gBAzDThJ,EA4DlBgL,eAAiB,WACb,IAAIuC,EAAmBvN,EAAKO,MAAMwJ,aAAagD,QAS/CQ,EAAiBP,KARE,CACf1C,aAAgB,KAChBI,OAAU,QACVE,MAAS,IACTC,KAAQ,KACRC,SAAY,UAIhB9K,EAAKoC,SAAS,CAAC2H,aAAcwD,KAvEfvN,EA0ElBiL,kBAAoB,WAChB,IAAIsC,EAAmBvN,EAAKO,MAAMwJ,aAAagD,QAC/CQ,EAAiBN,MACjBR,QAAQC,IAAIa,GACZvN,EAAKoC,SAAS,CAAC2H,aAAcwD,KA9EfvN,EAiFlBuK,eAAiB,SAACiD,EAAWvD,GACzB,IAAIsD,EAAmBvN,EAAKO,MAAMwJ,aAAagD,QAC/CQ,EAAiBtD,GAAMuD,EACvBxN,EAAKoC,SAAS,CAAC2H,aAAcwD,KApFfvN,EAwFlB2M,WAAa,SAACc,GACVhB,QAAQC,IAAIe,GACZ,IAAIC,EAAW1N,EAAKO,MAAMgM,UAAUQ,QAEf,MAArBW,EAASD,GAAkBC,EAASD,GAAU,IACzB,MAArBC,EAASD,GAAkBC,EAASD,GAAU,QAC9CC,EAASD,GAAU,IAEnBzN,EAAKoC,SAAS,CAACmK,UAAWmB,KAhGZ1N,EAmGlB8H,QAAU,WACN9H,EAAKoC,SAAS,CAAC6F,MAAOjI,EAAKO,MAAM0H,QApGnBjI,EAuGlBmN,gBAAkB,WACdnN,EAAKoC,SAAS,CAACsH,UAAW,CAAC,KAAM,KAAM,KAAM,QAC7C1J,EAAKoC,SAAS,CAAC2H,aAAc,CACzB,CACIO,aAAgB,KAChBI,OAAU,QACVE,MAAS,IACTC,KAAQ,KACRC,SAAY,QAEhB,CACIR,aAAgB,KAChBI,OAAU,QACVE,MAAS,QACTC,KAAQ,KACRC,SAAY,SAEhB,CACIR,aAAgB,KAChBI,OAAU,QACVE,MAAS,IACTC,KAAQ,KACRC,SAAY,SAEhB,CACIR,aAAgB,KAChBI,OAAU,QACVE,MAAS,QACTC,KAAQ,KACRC,SAAY,YAGpB9K,EAAKoC,SAAS,CAACmK,UAAW,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,WAEnGvM,EAAKoC,SAAS,CAACuL,WAAY,OAC3B3N,EAAKoC,SAAS,CAACkI,aAAc,QA1IftK,EA8IlBoN,mBAAqB,WACjBpN,EAAKoC,SAAS,CAACsH,UAAW,CAAC,KAAM,KAAM,KAAM,SA/I/B1J,EAkJlBqN,uBAAyB,aAlJPrN,EAsJlBsN,iBAAmB,aAtJDtN,EA0JlB+H,aAAe,WAEX,IAEI6F,EAFO5N,EAAKO,MAAMwJ,aAAagD,QAELc,KAAK,SAACC,GAAD,OAAaA,EAAQxD,eAAiBtK,EAAKO,MAAM+J,eAEhFsD,EAAmBlD,SAAW1K,EAAKO,MAAMgM,UAAUvM,EAAKO,MAAMiM,gBAEnDxM,EAAKO,MAAMgM,UAAUQ,QAE3B/M,EAAKO,MAAMiM,cAAgBoB,EAAmBhD,MAEnD5K,EAAKoC,SAAS,CAACkI,aAAcsD,EAAmB/C,SApKpD7K,EAAKO,MAAQ,CACT6I,WAAY,CAAC,iBAAkB,eAAgB,iBAAkB,wBACjEJ,cAAe,iBAEf+B,SAAU,CAAC,QAAS,QAEpBhB,aAAc,CACV,CACIO,aAAgB,KAChBI,OAAU,IACVE,MAAS,IACTC,KAAQ,KACRC,SAAY,UAIpBH,SAAU,CAAC,IAAK,IAAK,SAErBjB,UAAW,CAAC,KAAM,MAClBiE,WAAY,KAEZrD,aAAc,KAEdiC,UAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAChDC,aAAc,EACdvE,MAAM,GA3BIjI,wEA6KV,IACGS,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI8E,WAAS,EACTuI,UAAU,MACVC,QAAQ,eACRC,WAAW,SACXnM,QAAS,IAETrB,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,KACID,EAAAC,EAAAC,cAACuN,GAAD,CACIxD,SAAUxK,KAAKI,MAAMoK,SACrBZ,aAAc5J,KAAKI,MAAMwJ,aACzBf,cAAe7I,KAAKI,MAAMyI,cAC1B+B,SAAU5K,KAAKI,MAAMwK,SACrBwB,UAAWpM,KAAKI,MAAMgM,UACtBI,WAAYxM,KAAKwM,WACjBH,aAAcrM,KAAKI,MAAMiM,aACzBvE,KAAM9H,KAAKI,MAAM0H,QAGzBvH,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GAEN1N,EAAAC,EAAAC,cAACyN,GAAD,CACI9M,MAAOpB,KAAKJ,MAAMwB,MAClByH,cAAe7I,KAAKI,MAAMyI,iBAGlCtI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0N,GAAD,CACI3D,SAAUxK,KAAKI,MAAMoK,SACrB4D,QAASpO,KAAKoO,QACdC,WAAYrO,KAAKqO,WAEjBpF,WAAYjJ,KAAKI,MAAM6I,WACvBJ,cAAe7I,KAAKI,MAAMyI,cAC1BG,UAAWhJ,KAAKgJ,UAEhBO,UAAWvJ,KAAKI,MAAMmJ,UACtBE,UAAWzJ,KAAKyJ,UAChBE,aAAc3J,KAAK2J,aAEnBiB,SAAU5K,KAAKI,MAAMwK,SACrBhB,aAAc5J,KAAKI,MAAMwJ,aACzBiB,eAAgB7K,KAAK6K,eACrBC,kBAAmB9K,KAAK8K,kBACxBV,eAAgBpK,KAAKoK,eAErB4C,gBAAiBhN,KAAKgN,gBACtBC,mBAAoBjN,KAAKiN,mBACzBC,uBAAwBlN,KAAKkN,uBAC7BC,iBAAkBnN,KAAKmN,iBAEvBxF,QAAS3H,KAAK2H,QACdG,KAAM9H,KAAKI,MAAM0H,KACjBF,aAAc5H,KAAK4H,eAEvBrH,EAAAC,EAAAC,cAAA,OAAK6N,MAAO,CAACC,UAAW,UAExBhO,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACIO,UAAWT,EAAQkH,aACnBC,UAAW,GAEXlH,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYM,MAAM,YAAYgE,QAAQ,KAAK0J,cAAY,GAAvD,cAIAjO,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYoC,UAAU,IAAIsB,OAAO,SAASC,KAAK,0BAA/C,gCAnPP5C,IAAMC,WA+PZC,wBA3QA,SAAAC,GAAK,MAAK,CACrB8F,aAAc,CACVX,MAAQ,IACRd,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3BsB,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,QAmQI,CAACC,WAAW,GAA/BL,CAAsCiL,IC/PtC+B,eAlBX,SAAAA,EAAY7O,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyO,IACd5O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2O,GAAAtO,KAAAH,KAAMJ,KACDQ,MAAQ,CACTsO,SAAgB,IAChBC,UAAgB,KAJN9O,wEASd,OACIU,EAAAC,EAAAC,cAACmO,GAAD,CACI/H,MAAO7G,KAAKI,MAAMsO,SAClBrD,OAAQrL,KAAKI,MAAMuO,UACnBvN,MAAOpB,KAAKJ,MAAMwB,eAdTG,IAAMC,WCWhBqN,eAZX,SAAAA,EAAYjP,GAAO,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6O,GAAA/O,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+O,GAAA1O,KAAAH,KACTJ,0EAKN,OACIW,EAAAC,EAAAC,cAAA,iCARiBc,IAAMC,wDCwBpBsN,ICqCTC,eAEF,SAAAA,EAAYnP,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+O,IACdlP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiP,GAAA5O,KAAAH,KAAMJ,KAQVqH,eAAiB,WACbpH,EAAKoC,SAAS,CAACiF,YAAarH,EAAKO,MAAM8G,cAPvCrH,EAAKO,MAAQ,CACT8G,YAAY,EACZ8H,UAAW,IALDnP,wEAaV,IAAAyC,EAAAtC,KACGM,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACIO,UAAWT,EAAQkH,aACnBC,UAAW,GAEXlH,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,YACNG,QAAS,WACwB,WAA7BqB,EAAK1C,MAAMiJ,cAA6BvG,EAAK1C,MAAMqP,aACtB,cAA7B3M,EAAK1C,MAAMiJ,cAAgCvG,EAAK1C,MAAMsP,gBACzB,cAA7B5M,EAAK1C,MAAMiJ,cAAgCvG,EAAK1C,MAAMuP,gBACzB,UAA7B7M,EAAK1C,MAAMiJ,cAA4BvG,EAAK1C,MAAMwP,YAClD9C,QAAQC,IAAI,sBAEZjK,EAAK1C,MAAM+H,WAEfE,SAAU7H,KAAKJ,MAAMkI,MACrBvH,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,SACbJ,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,QAIRD,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,YACN+G,UAAW7H,KAAKJ,MAAMkI,KACtB7G,QAAU,WACNqB,EAAK1C,MAAMyP,WACX/M,EAAK1C,MAAM+H,YAEfpH,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,QACbJ,EAAAC,EAAAC,cAACwH,GAAAzH,EAAD,QAIRD,EAAAC,EAAAC,cAACiH,GAAAlH,EAAD,CACIM,MAAM,YACNC,UAAWT,EAAQ6C,OACnB0E,SAAU7H,KAAKJ,MAAMkI,KACrB7G,QAASjB,KAAKJ,MAAM0P,iBACpB/O,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAASG,MAAQ,SACbJ,EAAAC,EAAAC,cAACyH,GAAA1H,EAAD,QAIRD,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBrC,MAAM,UACNgE,QAAQ,YACR7D,QAASjB,KAAKiH,eACdY,SAAU7H,KAAKJ,MAAMkI,MAErBvH,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CAAYtH,MAAM,aAAlB,YAMJP,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACIgF,KAAMxF,KAAKI,MAAM8G,WACjBnG,UAAWT,EAAQgI,QAEnB/H,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,CACIoC,UAAU,WACV7B,UAAWT,EAAQkI,aACfjI,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACIrH,UAAWT,EAAQ0E,WACnBF,QAAQ,KACRhE,MAAM,YACNkF,MAAM,UAJV,iBAQAzF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MAEAD,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,CACIkI,KAAK,cACL3H,UAAWT,EAAQqI,MACnBC,MAAO5I,KAAKJ,MAAMiJ,cAClBC,SAAU,SAACC,GAAD,OAAWzG,EAAK1C,MAAMoJ,UAAUD,EAAM7E,OAAO0E,SAClD5I,KAAKJ,MAAM2P,QAAQzM,IAAI,SAACC,EAAMC,GAAP,OACpBzC,EAAAC,EAAAC,cAACyI,GAAA1I,EAAD,CAAkBoI,MAAO7F,EAAMK,IAAKJ,EAAOmG,QAAS5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAOM,MAAM,cAAeuI,MAAOtG,EAAO,cAI9GxC,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CACIO,UAAWT,EAAQ6C,OACnBlC,QAASjB,KAAKiH,eACdnC,QAAQ,YACRhE,MAAM,WACNP,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CACItH,MAAM,aADV,aAOZP,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CACIsJ,GAAG,QACHT,MAAM,eACNoG,KAAK,SACL1O,UAAWT,EAAQ0K,UACnB0E,gBAAiB,CACbzF,QAAQ,GAEZrB,MAAO5I,KAAKJ,MAAM+P,MAClBhO,OAAO,SACPmD,QAAQ,WACRgE,SAAU,SAACC,GAAD,OAAWzG,EAAK1C,MAAMgQ,SAAS7G,EAAM7E,OAAO0E,QACtDf,SAAU7H,KAAKJ,MAAMkI,KACrB+H,WAAW,8BAGftP,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CACIsJ,GAAG,WACHT,MAAM,gBACNoG,KAAK,SACL1O,UAAWT,EAAQ0K,UACnB0E,gBAAiB,CACbzF,QAAQ,GAEZrB,MAAO5I,KAAKJ,MAAMkQ,SAClBnO,OAAO,SACPmD,QAAQ,WACR+C,SAAU7H,KAAKJ,MAAMkI,KACrBgB,SAAU,SAACC,GAAD,OAAWzG,EAAK1C,MAAMmQ,YAAYhH,EAAM7E,OAAO0E,QACzDiH,WAAW,wCA9IJtO,IAAMC,WAsJlBC,wBA1LA,SAAAC,GAAK,MAAK,CACrBsO,QAAS,CACLnJ,MAAQ,IACRkE,QAASrJ,EAAME,QAAQC,KACvBkE,SAAU,GAGdyB,aAAc,CACVX,MAAQ,IACRd,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3BsB,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,MAG1BmD,WAAY,CACR+F,QAASrJ,EAAME,QAAQC,MAG3ByG,OAAQ,CACJvC,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3B8G,MAAO,CACHoC,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3BmJ,UAAW,CACPrJ,OAAQD,EAAME,QAAQC,KACtBgF,MAAO,OA0JmB,CAAC/E,WAAW,GAA/BL,CAAsCsN,IClM/C7D,eACF,SAAAA,EAAYtL,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkL,IACdrL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoL,GAAA/K,KAAAH,KAAMJ,KAEDQ,MAAQ,CAErB6P,YAAW,ilBAkBXC,eAAc,gUAgBdC,WAAU,yFAMVC,eAAc,kGA7CQvQ,wEAuDV,IACGS,EAAWN,KAAKJ,MAAhBU,QAEP,OACIC,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CAAOO,UAAWT,EAAQgE,KAAMmD,UAAW,GACvClH,EAAAC,EAAAC,cAAC2K,GAAA5K,EAAD,CACIqG,MAAM,QACNwE,OAAO,QACPC,aAAa,EACbC,OAAQvL,KAAKuL,OACbzC,SAAU9I,KAAK8I,SACf0C,KAAK,aACLC,SAAU,GACV4E,QAAS,EACT3O,MAAS1B,KAAKJ,MAAMwB,MAA0B,SAAlB,iBAC5BsK,qBAAqB,EACrBC,YAAa,CAACC,gBAAiBC,KAC/BC,UAAU,EACVlD,MACqC,WAA7B5I,KAAKJ,MAAMiJ,cAA6B7I,KAAKI,MAAM6P,YACtB,cAA7BjQ,KAAKJ,MAAMiJ,cAAgC7I,KAAKI,MAAM8P,eACzB,UAA7BlQ,KAAKJ,MAAMiJ,cAA4B7I,KAAKI,MAAM+P,WACrB,cAA7BnQ,KAAKJ,MAAMiJ,cAAgC7I,KAAKI,MAAMgQ,eACtD,2BAERrE,6BAA6B,EAC7BC,gBAAgB,EAChBC,kBAAkB,YAnFf1K,IAAMC,WA2FdC,wBAtGA,SAAAC,GAAK,MAAK,CAErB4C,KAAM,CACFyB,SAAU,EACVc,MAAO,IACPwE,OAAQ,IACRN,QAASrJ,EAAME,QAAQC,QAgGG,CAACC,WAAW,GAA/BL,CAAsCyJ,IClE/CoF,uBACF,SAAAA,EAAY1Q,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsQ,IACdzQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwQ,GAAAnQ,KAAAH,KAAMJ,KAoBN2Q,KAAO,GArBO1Q,EAsBd2Q,OAAS,GAtBK3Q,EAuBd4Q,OAAS,GAvBK5Q,EA0BlB6Q,UAAY,SAACC,GACT9Q,EAAK4Q,OAASG,OACTC,OAAO,CAAC,EAAGD,KAAOD,KAClBG,MAAM,CAAC,EAAGjR,EAAKD,MAAMyL,OAAS,KAEnCxL,EAAK2Q,OAASI,OACTC,OAAOD,KAAS,EAAGD,EAAKjH,SACxBoH,MAAM,CAAC,EAAGjR,EAAKD,MAAMiH,QACrBkK,aAAa,KAlCJlR,EAqClBwP,SAAW,WAEP2B,cAAcnR,EAAK0Q,MAGnB1Q,EAAK0Q,KAAO,GAEZK,KAAU,aAAaK,UAAU,QAAQC,KAAK,QAAS,KA5CzCrR,EA+ClB8H,QAAU,WACN9H,EAAKoC,SAAS,CAAC6F,MAAOjI,EAAKO,MAAM0H,QAhDnBjI,EAmDlBmJ,UAAY,SAAC+D,GACTlN,EAAKoC,SAAS,CAAC4G,cAAekE,IAC9BT,QAAQC,IAAI1M,EAAKO,MAAMyI,gBArDThJ,EAwDlBkQ,YAAc,SAACoB,GACXtR,EAAKoC,SAAS,CAAC6N,SAAUqB,IACzB7E,QAAQC,IAAI1M,EAAKO,MAAM0P,WA1DTjQ,EA6DlB+P,SAAW,SAACwB,GACRvR,EAAKoC,SAAS,CAAC0N,MAAOyB,IACtB9E,QAAQC,IAAI1M,EAAKO,MAAMuP,QA/DT9P,EAkElBwR,aAAe,SAACC,GAEZzR,EAAK6Q,UAAUY,GAEfV,KAAU,aAAaK,UAAU,QAAQN,KAAKW,GAAUC,QAAQC,OAAO,QAElEN,KAAK,IAAK,SAACO,EAAEC,GAAH,OAAS7R,EAAK2Q,OAAOkB,KAC/BR,KAAK,IAAK,SAACO,EAAEC,GAAH,OAAS7R,EAAKD,MAAMyL,OAASxL,EAAK4Q,OAAOgB,KACnDP,KAAK,QAASrR,EAAK2Q,OAAOmB,aAE1BC,aACAC,SAAShS,EAAKO,MAAMuP,OAEpBuB,KAAK,SAAU,SAACO,EAAEC,GAAH,OAAS7R,EAAK4Q,OAAOgB,KACpCP,KAAK,KAAM,SAACO,EAAGC,GAAJ,MAAU,QAAUA,IAEpCd,KAAU,aAAaK,UAAU,QAAQN,KAAKW,GAAUC,QAAQC,OAAO,QAClEN,KAAK,IAAK,SAACO,EAAEC,GAAH,OAAS7R,EAAK2Q,OAAOkB,GAAK7R,EAAK2Q,OAAOmB,YAAc,IAC9DT,KAAK,IAAK,SAACO,EAAEC,GAAH,OAAS7R,EAAKD,MAAMyL,OAASxL,EAAK4Q,OAAOgB,GAAK,KACxDP,KAAK,KAAM,OACXA,KAAK,UAAW,IAChBA,KAAK,KAAM,SAACO,EAAGC,GAAJ,MAAU,SAAWA,IAChC3O,KAAK,SAAC0O,GAAO,OAAOA,IAEzB5R,EAAKoC,SAAS,CAAC0O,KAAMW,KA1FPzR,EA6FlByP,gBAAkB,WAEd,IAAMwC,EAAalB,KAAWA,KAAS/Q,EAAKO,MAAM0P,WAAWhN,IAAI,SAAAiP,GAAM,OAAIA,EAAS,IAEpFlS,EAAK6Q,UAAUoB,GAEflB,KAAU,aAAaK,UAAU,QAAQe,SACzCpB,KAAU,aAAaK,UAAU,QAAQe,SAEzCnS,EAAKwR,aAAaS,IAtGJjS,EAyGlBoP,WAAa,WACT,IAAIgD,EAAcpS,EAAKO,MAAMuQ,KAAK/D,QAElC/M,EAAK6Q,UAAUuB,GACf,IAAIC,EAAa,EACbC,EAAY,EAmBhBtS,EAAK0Q,KAAO6B,YAAY,YAjBD,WACnB,KAAID,GAAaF,EAAYvI,OAAS,GAAtC,CASA,GALIwI,IAAeD,EAAYvI,OAAS,EAAIyI,IACxCD,EAAa,IACXC,GAGFF,EAAYC,GAAcD,EAAYC,EAAa,GAAI,KAAAG,EACE,CAACJ,EAAYC,EAAa,GAAID,EAAYC,IAAlGD,EAAYC,GAD0CG,EAAA,GAC7BJ,EAAYC,EAAa,GADIG,EAAA,KAIzDH,GAKFI,GAEA1B,KAAU,aAAaK,UAAU,QAC5BN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IACzBc,QAAQ,eAAgB,SAACd,EAAGC,GAAJ,OAAUA,IAAMQ,GAAcR,EAAI,IAAMQ,IAChEK,QAAQ,kBAAmB,SAACd,EAAGC,GAAJ,OAAUA,GAAKO,EAAYvI,OAASyI,IAC/DP,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,KAErCd,KAAU,aAAaK,UAAU,QAAQN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IAC7DG,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,GAAK7R,EAAK2Q,OAAOmB,YAAc,KAErE9R,EAAKO,MAAMuP,OAEd9P,EAAKoC,SAAS,CAAC0O,KAAMsB,KApJPpS,EAuJlBqP,cAAgB,WAEZ,IAAI+C,EAAcpS,EAAKO,MAAMuQ,KAAK/D,QAElC/M,EAAK6Q,UAAUuB,GAEf,IAAIC,EAAa,EACbM,EAAW,EAEXC,GAAY,EA2BhB5S,EAAK0Q,KAAO6B,YAAY,YAzBE,WAOtB,IALIK,GAA4B,IAAfP,KACbA,EAAaM,EACbC,GAAY,KAGZD,EAAWP,EAAYvI,QAA3B,CAIA,GAAIuI,EAAYC,GAAcD,EAAYC,EAAa,GAAI,KAAAQ,EACE,CAACT,EAAYC,EAAa,GAAID,EAAYC,IAAlGD,EAAYC,GAD0CQ,EAAA,GAC7BT,EAAYC,EAAa,GADIQ,EAAA,QAKvDD,GAAY,EAGZP,IAAeM,KACbA,IAEJN,GAKFS,GAEA/B,KAAU,aAAaK,UAAU,QAC5BN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IACzBc,QAAQ,kBAAmB,SAACd,EAAGC,GAAJ,OAAUc,GAAYP,EAAYvI,SAAWgI,IAAMQ,EAAa,GAAKR,IAAMQ,KACtGK,QAAQ,qBAAsB,SAACd,EAAGC,GAAJ,OAAUA,EAAIc,IAC5CZ,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,KAErCd,KAAU,aAAaK,UAAU,QAAQN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IAC7DG,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,GAAK7R,EAAK2Q,OAAOmB,YAAc,KACrE9R,EAAKO,MAAMuP,OAEd9P,EAAKoC,SAAS,CAAC0O,KAAMsB,KA7MPpS,EAgNlBsP,cAAgB,WACZ,IAAI8C,EAAcpS,EAAKO,MAAMuQ,KAAK/D,QAElC/M,EAAK6Q,UAAUuB,GAEf,IAAIW,EAAS,EACTV,EAAa,EACbW,EAAM,EACNC,GAAQ,EA+BZjT,EAAK0Q,KAAO6B,YAAY,YA7BE,WAEtB,GAAIQ,IAAWX,EAAYvI,OAA3B,CAeA,GAXIoJ,IACAA,GAAQ,EACRD,EAAMX,EAAaU,GAKnBX,IAFFC,GAE4BD,EAAYY,KACtCA,EAAMX,GAGNA,IAAeD,EAAYvI,OAAS,EAAG,KAAAqJ,EACG,CAACd,EAAYY,GAAMZ,EAAYW,IAAxEX,EAAYW,GAD0BG,EAAA,GACjBd,EAAYY,GADKE,EAAA,KAGrCH,EACFE,GAAQ,EAGRF,IAAWX,EAAYvI,OAAS,KAC9BkJ,GAMNI,GAEApC,KAAU,aAAaK,UAAU,QAC5BN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IACzBc,QAAQ,kBAAmB,SAACd,EAAGC,GAAJ,OAAUkB,IAAWX,EAAYvI,SAAWgI,IAAMQ,GAAcR,IAAMmB,KACjGN,QAAQ,qBAAsB,SAACd,EAAGC,GAAJ,OAAUA,EAAIkB,IAC5ChB,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,KAErCd,KAAU,aAAaK,UAAU,QAAQN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IAC7DG,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,GAAK7R,EAAK2Q,OAAOmB,YAAc,KAErE9R,EAAKO,MAAMuP,OAEd9P,EAAKoC,SAAS,CAAC0O,KAAMsB,KA1QPpS,EA6QlBuP,UAAY,WAER,IAAI6C,EAAcpS,EAAKO,MAAMuQ,KAAK/D,QAElC/M,EAAK6Q,UAAUuB,GAEf,IACIgB,EACAC,EAEAC,EAAGC,EAJHC,EAAS,CAAC,CAAC,EAAGpB,EAAYvI,OAAS,IAwDvC7J,EAAK0Q,KAAO6B,YAAa,YAlDH,SAAhBkB,IACF,IAAKL,EAAS,CACV,IAAKI,EAAO3J,OACR,OAGJuJ,EAAUI,EAAOE,QACjBL,EAAQD,EAAQ,GAAKO,KAAKC,OAAOR,EAAQ,GAAKA,EAAQ,IAAMO,KAAKE,UAEjEP,EAAIF,EAAQ,GACZG,EAAIH,EAAQ,GAGhB,GAAIE,IAAMC,EAYN,OAXIF,EAAQ,EAAID,EAAQ,GAAK,GACzBI,EAAOxG,KAAK,CAACoG,EAAQ,GAAIC,EAAQ,IAGjCD,EAAQ,IAAMC,EAAQ,GAAK,GAC3BG,EAAOxG,KAAK,CAACqG,EAAQ,EAAGD,EAAQ,KAGpCE,EAAIC,EAAIH,EAAUC,OAAQS,OAE1BL,IAIJ,GAAIrB,EAAYkB,GAAKlB,EAAYiB,KAC3BC,OAIN,GAAIlB,EAAYmB,GAAKnB,EAAYiB,KAC3BE,MADN,CAjCwB,IAAAQ,EAsCW,CAAC3B,EAAYmB,GAAInB,EAAYkB,IAA/DlB,EAAYkB,GAtCWS,EAAA,GAsCP3B,EAAYmB,GAtCLQ,EAAA,GAwCpBV,IAAUC,EAEVD,EAAQE,EAGHF,IAAUE,IACfF,EAAQC,IAKZG,GAEA1C,KAAU,aAAaK,UAAU,QAC5BN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IACzBc,QAAQ,cAAe,SAACd,EAAGC,GAAJ,OAAUuB,GAAYvB,GAAKuB,EAAQ,IAAMvB,GAAKuB,EAAQ,KAC7EV,QAAQ,aAAc,SAACd,EAAGC,GAAJ,OAAUA,IAAMwB,IACtCX,QAAQ,iBAAkB,SAACd,EAAGC,GAAJ,OAAUA,IAAM0B,GAAK1B,IAAMyB,IACrDZ,QAAQ,iBAAkB,SAACd,EAAGC,GAAJ,OAW/B,SAAqBA,GAEjB,IAAKuB,IAAYI,EAAO3J,OACpB,OAAO,EAGX,MAAO,CAACuJ,GAASY,OAAOR,GAAQS,MAAM,SAAAC,GAAA,IAAAC,EAAAlU,OAAAmU,GAAA,EAAAnU,CAAAiU,EAAA,GAAEZ,EAAFa,EAAA,GAAKZ,EAALY,EAAA,UAAYtC,EAAIyB,GAAKC,EAAI1B,IAjB1BwC,CAAYxC,KAChDE,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,KAErCd,KAAU,aAAaK,UAAU,QAAQN,KAAKsB,EAAa,SAACR,GAAD,OAAOA,IAC7DG,aACAC,SAAShS,EAAKO,MAAMuP,OACpBuB,KAAK,IAAK,SAACO,EAAGC,GAAJ,OAAU7R,EAAK2Q,OAAOkB,GAAK7R,EAAK2Q,OAAOmB,YAAc,KACjE9R,EAAKO,MAAMuP,OAWd9P,EAAKoC,SAAS,CAAC0O,KAAMsB,KArWzBpS,EAAKO,MAAQ,CACTuQ,KAAM,GACNb,SAAU,GACVhI,MAAM,EACN6H,MAAO,IACP9G,cAAe,SACf0G,QAAS,CAAC,SAAU,YAAa,QAAS,cAG9C1P,EAAKO,MAAMuQ,KAAOC,KAAWA,KAAS/Q,EAAKO,MAAM0P,WAAWhN,IAAI,SAAAiP,GAAM,OAAIA,EAAS,IACnFlS,EAAKmJ,UAAYnJ,EAAKmJ,UAAUmL,KAAfrU,OAAAsU,EAAA,EAAAtU,QAAAsU,EAAA,EAAAtU,CAAAD,KAZHA,mFAiBdG,KAAKqR,aAAarR,KAAKI,MAAMuQ,KAAK/D,0CAyV7B,IACEtM,EAAWN,KAAKJ,MAAhBU,QACP,OACIC,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CACI8E,WAAS,EACTuI,UAAU,MACVC,QAAQ,eACRC,WAAW,SACXnM,QAAS,IAETrB,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACIO,UAAWT,EAAQ0P,QACnBvI,UAAW,GAEXlH,EAAAC,EAAAC,cAAA,OACIoG,MAAU7G,KAAKJ,MAAMiH,MACrBwE,OAAUrL,KAAKJ,MAAMyL,QAErB9K,EAAAC,EAAAC,cAAA,KAAGM,UAAU,cAIjBR,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,QAIRD,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAAC4T,GAAD,CACIjT,MAAOpB,KAAKJ,MAAMwB,MAClByH,cAAe7I,KAAKI,MAAMyI,iBAGlCtI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAAC6T,GAAD,CACIjF,SAAUrP,KAAKqP,SACfC,gBAAiBtP,KAAKsP,gBAEtBxH,KAAM9H,KAAKI,MAAM0H,KACjBH,QAAS3H,KAAK2H,QAEdgI,MAAO3P,KAAKI,MAAMuP,MAClBG,SAAU9P,KAAKI,MAAM0P,SACrBF,SAAU5P,KAAK4P,SACfG,YAAa/P,KAAK+P,YAElBd,WAAYjP,KAAKiP,WACjBC,cAAelP,KAAKkP,cACpBqF,UAAWvU,KAAKuU,UAChBpF,cAAenP,KAAKmP,cACpBC,UAAWpP,KAAKoP,UAGhBG,QAASvP,KAAKI,MAAMmP,QACpB1G,cAAe7I,KAAKI,MAAMyI,cAC1BG,UAAWhJ,KAAKgJ,aAGxBzI,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACIO,UAAWT,EAAQkH,aACnBC,UAAW,GAEXlH,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYM,MAAM,YAAYgE,QAAQ,KAAK0J,cAAY,GAAvD,cAIAjO,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CAAYoC,UAAU,IAAIsB,OAAO,SAASC,KAAK,0BAA/C,+BA9aH5C,IAAMC,YAybZC,wBAjdA,SAAAC,GAAK,MAAK,CACrBsO,QAAS,CACLnJ,MAAQ,IACRkE,QAASrJ,EAAME,QAAQC,KACvBkE,SAAU,GAGdyB,aAAc,CACVX,MAAQ,IACRd,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3B2S,SAAU,CACN3N,MAAO,IACPd,SAAU,EACVgF,QAA8B,EAArBrJ,EAAME,QAAQC,MAG3BsB,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,QA6bI,CAACC,WAAW,GAA/BL,CAAsC6O,IC7ctCmE,eAnBX,SAAAA,EAAY7U,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyU,IACd5U,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2U,GAAAtU,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTsO,SAAgB,IAChBC,UAAgB,KALN9O,wEAUd,OACIU,EAAAC,EAAAC,cAACiU,GAAD,CACI7N,MAAO7G,KAAKI,MAAMsO,SAClBrD,OAAQrL,KAAKI,MAAMuO,UACnBvN,MAAOpB,KAAKJ,MAAMwB,eAhBRG,IAAMC,gCCgB1BmT,uBACF,SAAAA,EAAY/U,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2U,IACd9U,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6U,GAAAxU,KAAAH,KAAMJ,KAMVgV,WAAa,WACT/U,EAAKoC,SAAS,CAAC2S,YAAa/U,EAAKO,MAAMwU,aACvCtI,QAAQC,IAAI,UAPZ1M,EAAKO,MAAM,CACPwU,YAAY,GAHF/U,wEAaIG,KAAKJ,MAAhBU,QACX,OACIC,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAM8E,WAAS,EAACuI,UAAU,SAASC,QAAQ,SAASC,WAAW,SAASnM,QAAS,IAC7ErB,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GAAC1N,EAAAC,EAAAC,cAAA,OAAK6N,MAAO,CAACC,UAAW,YACnChO,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACN1N,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,CACIO,UAAU,gBACV+T,eAAgB,GAChBC,WAAY,IACZC,aAAchV,KAAK4U,YAEnBrU,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAACoU,GAAArU,EAAOyU,UAAR,CAAkBC,MAAO,EAAGC,MAAO,MAEnC5U,EAAAC,EAAAC,cAACoU,GAAArU,EAAO4U,MAAR,CAAcC,GAAI,MAClB9U,EAAAC,EAAAC,cAAA,mBAIRF,EAAAC,EAAAC,cAACmN,GAAApN,EAAD,CAAMyN,MAAI,GACF1N,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAQM,MAAM,UAAUgE,QAAQ,YAAYlC,UAAWS,KAAMC,GAAG,mBAC5D/C,EAAAC,EAAAC,cAAC2H,GAAA,EAAD,CAAYtH,MAAM,aAAlB,4BApCDS,IAAMC,YA6CdC,wBApDA,SAAAC,GAAK,MAAK,CACrByB,OAAQ,CACJxB,OAAQD,EAAME,QAAQC,KACtBmE,MAAO,YAiDAvE,CAAmBkT,wBC9C5BW,GAASC,yBCFI,CACflP,QAAS,CACLoJ,KAAM,QACN/L,QAAS,CACL4C,KAAM,WAEVkP,UAAW,CACPlP,KAAM,YAIdtB,WAAY,CACRyQ,iBAAiB,KDTnBC,GAASH,yBCnBG,CACdlP,QAAS,CACLoJ,KAAM,OAEN/L,QAAS,CACL4C,KAAM,WAEVkP,UAAW,CACPlP,KAAM,WAEVtB,WAAY,CACRyQ,iBAAiB,MDgBvBE,eAEF,SAAAA,EAAY/V,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2V,IACf9V,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6V,GAAAxV,KAAAH,KAAMJ,KAcVsB,kBAAoB,WAChBrB,EAAKoC,SAAS,SAAA7B,GAAK,MAAK,CAACgB,OAAQvB,EAAKO,MAAMgB,SAC5CkL,QAAQC,IAAI,UAAY1M,EAAKO,MAAMgB,QAdnCvB,EAAKO,MAAQ,CAETgB,OAAO,EAEPiB,MAAO,CAAC,iBAAkB,2BAA4B,uBAI1DxC,EAAKqB,kBAAoBrB,EAAKqB,kBAAkBiT,KAAvBrU,OAAAsU,EAAA,EAAAtU,QAAAsU,EAAA,EAAAtU,CAAAD,KAXVA,oFAqBf+V,aAAaC,QAAQ,UAAY7V,KAAKiC,SAAS,CAC3Cb,MAAO0U,KAAKC,MAAMH,aAAaC,QAAQ,wDAI3BG,EAAWC,GAC3BL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUF,EAAU7U,yCAGlD,IAAAkB,EAAAtC,KAEEM,EAAWN,KAAKJ,MAAhBU,QACP,OAEIC,EAAAC,EAAAC,cAAA,OAAKM,UAAaT,EAAQgE,MAEtB/D,EAAAC,EAAAC,cAAC2V,EAAA,iBAAD,CAAkB1U,MAAS1B,KAAKI,MAAMgB,MAAQkU,GAASI,IAEnDnV,EAAAC,EAAAC,cAAC4V,GAAD,CACInV,kBAAmBlB,KAAKkB,kBACxBE,MAAOpB,KAAKI,MAAMgB,MAClBiB,MAAOrC,KAAKI,MAAMiC,QAGtB9B,EAAAC,EAAAC,cAAA,OAAK6N,MAAO,CAACC,UAAW,UAExBhO,EAAAC,EAAAC,cAAC6V,GAAA,EAAD,KAEI/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,OAAQ,kBAC5CnW,EAAAC,EAAAC,cAACkW,GAAD,CACIvV,MAAOkB,EAAKlC,MAAMgB,WAG1Bb,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,OAAQ,kBACxCnW,EAAAC,EAAAC,cAACmW,GAAD,CACIxV,MAAOkB,EAAKlC,MAAMgB,WAG1Bb,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,OAAQ,kBAClDnW,EAAAC,EAAAC,cAACoW,GAAD,SAGJtW,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC1BnW,EAAAC,EAAAC,cAACqW,GAAD,mBAlEVvV,IAAMC,WA2ETC,wBAjFA,SAAAC,GAAK,MAAK,CACrB4C,KAAM,CACFyB,SAAU,KA+EHtE,CAAmBkU,cEhGlCoB,IAASL,OACLnW,EAAAC,EAAAC,cAACuW,GAAA,EAAD,CAAYC,SAAS,KACjB1W,EAAAC,EAAAC,cAACyW,GAAD,OACWC,SAASC,eAAe","file":"static/js/main.2eaaccce.chunk.js","sourcesContent":["import React from 'react';\r\nimport LightOn from '@material-ui/icons/WbSunny';\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined';\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst styles = theme => ({\r\n    lights: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  })\r\n\r\nclass LightSwitch extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          snackbar: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ToolTip title=\"Toggle Lights\" placement='bottom'>\r\n            <IconButton color=\"secondary\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n              {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n            </IconButton>\r\n          </ToolTip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LightSwitch);","import React from 'react'\r\n//Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\n\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport {compose} from 'recompose';\r\n\r\nimport LightSwitch from './assets/LightSwitch'\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nimport { GoMarkGithub } from 'react-icons/go'\r\n\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  \r\n    menuButton: {\r\n      marginRight: 20,\r\n      marginLeft: -12,\r\n    },\r\n  \r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n  \r\n    typography: {\r\n      marginRight: 20,\r\n      flexGrow: 1,\r\n      align: \"center\",\r\n    },\r\n  \r\n    settingsIcon: {\r\n      marginRight: -12\r\n    },\r\n\r\n    nestedItem: {\r\n      paddingLeft: theme.spacing.unit,\r\n    },\r\n\r\n    menuItem: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& $primary, & $icon': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  \r\n    appDrawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      }\r\n    },\r\n  })\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      drawer: false,\r\n      modes: this.props.modes,\r\n      about: false,\r\n    }\r\n  }\r\n\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n  }\r\n\r\n  handleAboutOpen = () => {\r\n    this.setState(state => ({about: !this.state.about}))\r\n  }\r\n\r\n  render(){\r\n    const {classes, modes} = this.props\r\n    \r\n    // Pre-defined App Drawer\r\n    const appDrawer = (\r\n      <div>\r\n\r\n        <div className={classes.appDrawer}>\r\n          \r\n          <MenuList subheader={<ListSubheader component=\"div\" >Learn+</ListSubheader>}>\r\n            \r\n            <Divider/>\r\n\r\n            {/*Code block for mapping mode props to Menu Item names*/}\r\n            \r\n            {modes.map((text, index) => (\r\n\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                button key = {text}\r\n                onClick={() => {\r\n                  this.handleMenuOpen()\r\n                }} \r\n                component={Link} \r\n                to={text.replace(/\\s/g,'_').toLowerCase()}>\r\n\r\n                  <ListItemText primary={text}/>\r\n              \r\n              </MenuItem>\r\n            ))}\r\n\r\n          </MenuList>\r\n          \r\n          <Divider/>\r\n          \r\n          <MenuList>\r\n            <MenuItem\r\n                className={classes.menuItem}\r\n                button\r\n                onClick={() => {this.handleAboutOpen()}}>\r\n                \r\n                  <ListItemText primary=\"About\"/>\r\n                  \r\n                  {this.state.about ? <ExpandLess /> : <ExpandMore />}\r\n              \r\n              </MenuItem>\r\n\r\n            {/*TODO:ABOUT US STUFF*/}\r\n            <Collapse in={this.state.about} timeout=\"auto\" unmountOnExit>\r\n              <MenuList>\r\n                <MenuItem\r\n                  className={classes.nestedItem}\r\n                  component=\"a\" target=\"_blank\" href=\"https://github.com/TheConMiz/fyp18053\">\r\n                    <GoMarkGithub/>\r\n                    <ListItemText primary=\"View Repository\" inset></ListItemText>\r\n                </MenuItem>\r\n              </MenuList>\r\n          </Collapse>\r\n          </MenuList>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" placement = 'bottom'>\r\n              <div>\r\n                <IconButton color=\"secondary\" className={classes.menuButton} onClick={this.handleMenuOpen}>\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n              </div>\r\n            </ToolTip>\r\n\r\n            <Typography variant=\"h6\" color=\"secondary\" noWrap className={classes.typography}>\r\n              Learn+\r\n            </Typography>\r\n\r\n            <LightSwitch light={this.props.light} handleLightChange={this.props.handleLightChange}/>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withStyles(styles, {withTheme: true}),\r\n  withRouter\r\n) (AppDrawer);","import React, { Fragment } from 'react'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Stop from '@material-ui/icons/Stop'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core'\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport Input from '@material-ui/core/Input'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    },\r\n    statePaper: {\r\n        width: 570,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass TuringControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scriptMenu: false,\r\n            stateMenu: false,\r\n            instructionsMenu: false,\r\n        }\r\n    }\r\n\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n\r\n    stateMenuOpen = () => {\r\n        this.setState({stateMenu: !this.state.stateMenu})\r\n    }\r\n\r\n    instructionsMenuOpen = () => {\r\n        this.setState({instructionsMenu: !this.state.instructionsMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.setPlay()\r\n                        this.props.startMachine()\r\n                    }}\r\n                    disabled={this.props.play}>\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    disabled={!this.props.play}\r\n                    onClick={this.props.setPlay}>\r\n                    <ToolTip title = \"Stop\">\r\n                        <Stop/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                        \r\n                <IconButton\r\n                    color=\"secondary\">\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.stateMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Machine States\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.instructionsMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Instructions\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scriptList.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.scriptMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.stateMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    States\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.stateList.map((text, index) => (\r\n                                <ListItem  key={text}>\r\n                                    <ListItemText primary={text}/>\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.stateList.length===1}\r\n                        onClick={this.props.removeStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.stateMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.instructionsMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Instructions\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.instructions.map((object, id) => (\r\n                                <Fragment  key={id}>\r\n                                    <Typography\r\n                                        className={classes.typography} \r\n                                        variant=\"h6\"\r\n                                        color=\"secondary\"\r\n                                        align=\"center\">\r\n                                            Instruction {id}\r\n                                    </Typography>\r\n                                    \r\n                                    <FormControl\r\n                                      \r\n                                        className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            State\r\n                                        </InputLabel>\r\n\r\n                                        <Select\r\n                                            value={object.currentState}\r\n                                            onChange={(event) => {\r\n                                                object.currentState = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"state\" id=\"state\" />}\r\n                                            >\r\n\r\n                                        {this.props.stateList.map((text, id) => (\r\n                                            <MenuItem key={id} value={text}>\r\n                                                {text}\r\n                                            </MenuItem>\r\n                                        ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel shrink>\r\n                                            If Read\r\n                                        </InputLabel>\r\n                                            \r\n                                        <Select\r\n                                            value={object.ifRead}\r\n                                            onChange={(event) => {\r\n                                                object.ifRead = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"ifRead\" id=\"ifRead\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Write\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.write}\r\n                                            onChange={(event) => {\r\n                                                object.write = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"write\" id=\"write\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Next State\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.goTo}\r\n                                            onChange={(event) => {\r\n                                                object.goTo = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"nextState\" id=\"nextState\" />}\r\n                                            >\r\n\r\n                                            {this.props.stateList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl\r\n                                        className={classes.formControl}\r\n                                        >\r\n                                        <InputLabel shrink>\r\n                                            Tape Move\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.moveTape}\r\n                                            onChange={(event) => {\r\n                                                object.moveTape = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"tapeMove\" id=\"tapeMove\" />}\r\n                                            >\r\n\r\n                                            {this.props.moveList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.instructions.length===1}\r\n                        onClick={this.props.removeInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.instructionsMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                {/* <TextField\r\n                    id=\"speed\"\r\n                    label=\"Set Speed\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.speed}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => this.props.setSpeed(event.target.value)}\r\n                    disabled={this.props.play}\r\n                    helperText=\"The smaller, the quicker!\">\r\n                </TextField> */}\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringControls)","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport javascript from 'brace/mode/javascript'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            // value: \"TURING\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    mode=\"javascript\"\r\n                    fontSize={18}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    // value={\"// \" + \"Turing Machine\"}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","import React from 'react'\r\nimport {withStyles} from '@material-ui/core/'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n    tapePaper: {\r\n        maxWidth: 900,\r\n        padding: theme.spacing.unit * 1.5,\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        width: 10,\r\n        height: 50 \r\n    },\r\n})\r\n\r\n\r\nclass TuringTape extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    classes = this.props\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper className={classes.tapePaper}>\r\n                <Divider/>\r\n                {this.props.tapeArray.map((text, id) => (\r\n                    <Button\r\n                        className={classes.button}\r\n                        key={id}\r\n                        color={id === this.props.tapePosition ? \"primary\": \"secondary\"}\r\n                        variant=\"contained\"\r\n                        onClick={() => !this.props.play ? this.props.changeCell(id): console.log(\"Tape Locked\")}>\r\n                            {text === \"blank\" ? \"\" : text}\r\n                        </Button>\r\n                ))}\r\n                <Divider/>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringTape)","import React from 'react'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TuringControls from './TuringControls'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CodeView from './CodeView'\r\n\r\nimport TuringTape from './TuringTape'\r\n\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass Turing extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            scriptList: [\"Divisible by 3\", \"Endless 1/0s\", \"Increment by 1\", \"Palindrome Detection\"],\r\n            currentScript: \"Divisible by 3\",\r\n\r\n            moveList: [\"right\", \"left\"],\r\n\r\n            instructions: [\r\n                {\r\n                    \"currentState\": \"q0\",\r\n                    \"ifRead\": \"0\",\r\n                    \"write\": \"0\",\r\n                    \"goTo\": \"q0\",\r\n                    \"moveTape\": \"right\"\r\n                },\r\n            ],\r\n\r\n            dataList: [\"0\", \"1\", \"blank\"],\r\n\r\n            stateList: [\"q0\", \"q1\"],\r\n            startState: \"q0\",\r\n            \r\n            currentState: \"q0\",\r\n\r\n            tapeArray: [\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],\r\n            tapePosition: 4,\r\n            play: false,\r\n        }\r\n    }\r\n\r\n    addStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.push(\"q\" + tempStates.length)\r\n        this.setState({stateList: tempStates})\r\n        console.log(this.state.stateList)\r\n    }\r\n\r\n    removeStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.pop()\r\n        this.setState({stateList: tempStates})\r\n        console.log(this.state.stateList)\r\n    }\r\n\r\n    setScript = (newScript) => {\r\n\r\n        \r\n        newScript === \"Endless 1/0s\" ? this.endless10Setter():\r\n        newScript === \"Increment by 1\" ? this.incrementOneSetter():\r\n        newScript === \"Divisible by 3\" ? this.divisibleByThreeSetter():\r\n        newScript === \"Palindrome Detection\" ? this.palindromeSetter():\r\n        \r\n        console.log(\"No Script set\")\r\n\r\n        this.setState({currentScript: newScript})\r\n\r\n        console.log(this.state.currentScript)\r\n    }\r\n\r\n    addInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        let newInstruction={\r\n            \"currentState\": \"q0\",\r\n            \"ifRead\": \"blank\",\r\n            \"write\": \"0\",\r\n            \"goTo\": \"q0\",\r\n            \"moveTape\": \"right\"\r\n        }\r\n        \r\n        tempInstructions.push(newInstruction)   \r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    removeInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions.pop()\r\n        console.log(tempInstructions)\r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    setInstruction = (newObject, id) => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions[id] = newObject\r\n        this.setState({instructions: tempInstructions})\r\n\r\n    }\r\n\r\n    changeCell = (cellId) => {\r\n        console.log(cellId)\r\n        let tempTape = this.state.tapeArray.slice()\r\n        \r\n        tempTape[cellId] === \"0\" ? tempTape[cellId] = \"1\" : \r\n        tempTape[cellId] === \"1\" ? tempTape[cellId] = \"blank\" :\r\n        tempTape[cellId] = \"0\"\r\n\r\n        this.setState({tapeArray: tempTape})\r\n    }\r\n\r\n    setPlay = () => {\r\n        this.setState({play: !this.state.play})\r\n    } \r\n\r\n    endless10Setter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\", \"q3\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"currentState\": \"q0\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n            {\r\n                \"currentState\": \"q1\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q2\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"currentState\": \"q2\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q3\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"currentState\": \"q3\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n        ]})     \r\n        this.setState({tapeArray: [\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\"]})\r\n\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n\r\n    }\r\n\r\n    incrementOneSetter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\", \"q3\"]})\r\n    }\r\n\r\n    divisibleByThreeSetter = () => {\r\n\r\n    }\r\n\r\n    palindromeSetter = () => {\r\n        \r\n    }\r\n\r\n    startMachine = () => {\r\n        \r\n        let temp = this.state.instructions.slice()\r\n        \r\n        let currentInstruction = temp.find((element) => element.currentState === this.state.currentState)\r\n\r\n        if (currentInstruction.ifRead === this.state.tapeArray[this.state.tapePosition]) {\r\n            \r\n            let temp = this.state.tapeArray.slice();\r\n\r\n            temp[this.state.tapePosition] = currentInstruction.write\r\n\r\n            this.setState({currentState: currentInstruction.goTo})\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n                \r\n                <Grid>\r\n                    <TuringTape\r\n                        dataList={this.state.dataList}\r\n                        instructions={this.state.instructions}\r\n                        currentScript={this.state.currentScript}\r\n                        moveList={this.state.moveList}\r\n                        tapeArray={this.state.tapeArray}\r\n                        changeCell={this.changeCell}\r\n                        tapePosition={this.state.tapePosition}\r\n                        play={this.state.play}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    \r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid> \r\n\r\n                <Grid item>\r\n                    <div>\r\n                        <TuringControls\r\n                            dataList={this.state.dataList}\r\n                            addData={this.addData}\r\n                            removeData={this.removeData}\r\n\r\n                            scriptList={this.state.scriptList}\r\n                            currentScript={this.state.currentScript}\r\n                            setScript={this.setScript}\r\n\r\n                            stateList={this.state.stateList}\r\n                            addStates={this.addStates}\r\n                            removeStates={this.removeStates}\r\n\r\n                            moveList={this.state.moveList}\r\n                            instructions={this.state.instructions}\r\n                            addInstruction={this.addInstruction}\r\n                            removeInstruction={this.removeInstruction}\r\n                            setInstruction={this.setInstruction}\r\n                            \r\n                            endless10Setter={this.endless10Setter}\r\n                            incrementOneSetter={this.incrementOneSetter}\r\n                            divisibleByThreeSetter={this.divisibleByThreeSetter}\r\n                            palindromeSetter={this.palindromeSetter}\r\n\r\n                            setPlay={this.setPlay}\r\n                            play={this.state.play}\r\n                            startMachine={this.startMachine}/>\r\n                        \r\n                        <div style={{marginTop: '24px'}}></div>\r\n                    \r\n                        <Paper\r\n                            className={classes.controlPaper}\r\n                            elevation={7}>\r\n\r\n                            <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                                References\r\n                            </Typography>\r\n\r\n                            <Typography component=\"a\" target=\"_blank\" href=\"https://www.google.com\">\r\n                                THIS IS SOME TEXT\r\n                            </Typography>\r\n\r\n                        </Paper>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(Turing)","import React from 'react'\r\n\r\nimport Turing from './turing/Turing'\r\n\r\nclass TuringView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            svgWidth      : 550,\r\n            svgHeight     : 480,\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Turing\r\n                width={this.state.svgWidth}\r\n                height={this.state.svgHeight}\r\n                light={this.props.light}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TuringView","import React from 'react'\r\n\r\nclass VonNeumannView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>VON NEUMANN</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VonNeumannView","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nfunction ScriptMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} open={this.props.ScriptMenuOpen} onClose={handleClose}>\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScriptMenu;","import React from 'react'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Stop from '@material-ui/icons/Stop'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n\r\nimport ScriptMenu from './ScriptMenu'\r\n\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    }\r\n})\r\n\r\nclass SortControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scriptMenu: false,\r\n            selection: \"\"\r\n        }\r\n    }\r\n\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.currentScript === \"Bubble\" ? this.props.bubbleSort(): \r\n                        this.props.currentScript === \"Insertion\" ? this.props.insertionSort(): \r\n                        this.props.currentScript === \"Selection\" ? this.props.selectionSort():\r\n                        this.props.currentScript === \"Quick\" ? this.props.quickSort():\r\n                        console.log(\"No script selected\")\r\n                        \r\n                        this.props.setPlay()\r\n                    }}\r\n                    disabled={this.props.play}>\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    disabled={!this.props.play}\r\n                    onClick={ () => {\r\n                        this.props.stopLoop()\r\n                        this.props.setPlay()\r\n                    }}>\r\n                    <ToolTip title = \"Stop\">\r\n                        <Stop/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                        \r\n                <IconButton\r\n                    color=\"secondary\" \r\n                    className={classes.button}\r\n                    disabled={this.props.play}\r\n                    onClick={this.props.shuffleBarChart}>\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}\r\n                    disabled={this.props.play}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n\r\n                </Button>\r\n\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scripts.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text + \" Sort\"}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Button\r\n                            className={classes.button}\r\n                            onClick={this.scriptMenuOpen}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <Typography\r\n                                color=\"secondary\">\r\n                                    Confirm\r\n                                </Typography>\r\n                        </Button>\r\n                </Dialog>\r\n\r\n                <TextField\r\n                    id=\"speed\"\r\n                    label=\"Set Interval\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.speed}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => this.props.setSpeed(event.target.value)}\r\n                    disabled={this.props.play}\r\n                    helperText=\"The smaller, the quicker!\">\r\n                </TextField>\r\n\r\n                <TextField\r\n                    id=\"dataSize\"\r\n                    label=\"Set Data Size\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.dataSize}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    disabled={this.props.play}\r\n                    onChange={(event) => this.props.setDataSize(event.target.value)}\r\n                    helperText=\"Reset after changing value!\">\r\n                </TextField>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortControls)","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport javascript from 'brace/mode/javascript'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\nbubbleValue:\r\n`// Bubble Sort: Time Complexity of O(n^2)\r\nfunction bubbleSort(arrayOfValues) {    \r\n    // For each value in the arrayOfValues...\r\n    for (var i = 0; i < arrayOfValues.length; ++i) {\r\n\r\n        // Consider only the unsorted arrayOfValues.length - i values\r\n        for (var j = 0; j < arrayOfValues.length - i; ++j) {\r\n            \r\n            // If current value greater than the next value, then swap the two\r\n            if (arrayOfValues[j] > arrayOfValues[j + 1]) {\r\n                \r\n                swap(arrayOfValues[j], arrayOfValues[j + 1]);\r\n            }\r\n        }\r\n    }\r\n}`,\r\n\r\ninsertionValue:\r\n`// Insertion Sort: Time Complexity of O(n^2)\r\nfunction insertionSort(arrayOfValues) {\r\n    var currentKey;\r\n    for (var i = 0; i < arrayOfValues; ++i) {\r\n        currentKey = arrayOfValues[i];\r\n        var j = i - 1;\r\n\r\n        while (j >= 0 && arrayOfValues[j] > currentKey) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n`,\r\n\r\nquickValue:\r\n`// Quick Sort: Time Complexity of O(n^2)\r\nfunction quickSort(arrayOfValues) {\r\n    \r\n}`,\r\n\r\nselectionValue:\r\n`// Selection Sort: Time Complexity of O(n^2)\r\nfunction selectionSort(arrayOfValues) {\r\n    \r\n}`,\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    mode=\"javascript\"\r\n                    fontSize={15}\r\n                    tabSize={4}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    value={ \r\n                        (   this.props.currentScript === \"Bubble\" ? this.state.bubbleValue : \r\n                            this.props.currentScript === \"Insertion\" ? this.state.insertionValue:\r\n                            this.props.currentScript === \"Quick\" ? this.state.quickValue: \r\n                            this.props.currentScript === \"Selection\" ? this.state.selectionValue:\r\n                            \"// No Script selected...\"\r\n                        )}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","//TODO:Credits to Macrae, and the D3 people\r\n\r\nimport React from 'react'\r\nimport * as d3 from 'd3'\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport SortControls from './SortControls'\r\n\r\nimport CodeView from './CodeView'\r\n\r\nimport cssStyles from './SortD3.css'\r\n\r\n// Styling specifications for the Material UI components\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    codeView: {\r\n        width: 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass SortD3 extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataSize: 10,\r\n            play: false,\r\n            speed: 250,\r\n            currentScript: \"Bubble\",\r\n            scripts: [\"Bubble\", \"Insertion\", \"Quick\", \"Selection\"]\r\n        }\r\n        // Randomly initialise dataset \r\n        this.state.data = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n        this.setScript = this.setScript.bind(this)\r\n    }\r\n\r\n    // Initialise a bar chart when the page is opened\r\n    componentDidMount(){\r\n        this.initBarChart(this.state.data.slice())\r\n    }\r\n\r\n    /*Common-use variables*/\r\n        loop = []\r\n        xScale = []\r\n        yScale = []\r\n    /*-------------------*/\r\n    \r\n    setScales = (data) => {\r\n        this.yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(data)])\r\n            .range([0, this.props.height - 20])\r\n        \r\n        this.xScale = d3.scaleBand()\r\n            .domain(d3.range(0, data.length))\r\n            .range([0, this.props.width])\r\n            .paddingInner(0.2)\r\n    }\r\n\r\n    stopLoop = () => {\r\n        // Stop the setInterval() loop invoked to run the simulation\r\n        clearInterval(this.loop)\r\n\r\n        // Reset the loop variable for future use\r\n        this.loop = {}\r\n        // Reset bar chart coloring to its original state\r\n        d3.select('.barChart').selectAll('rect').attr(\"class\", \"\")\r\n    }\r\n\r\n    setPlay = () => {\r\n        this.setState({play: !this.state.play})\r\n    }\r\n\r\n    setScript = (newScript) => {\r\n        this.setState({currentScript: newScript})\r\n        console.log(this.state.currentScript)\r\n    }\r\n    \r\n    setDataSize = (newDataSize) => {\r\n        this.setState({dataSize: newDataSize})\r\n        console.log(this.state.dataSize)\r\n    }\r\n    \r\n    setSpeed = (newSpeed) => {\r\n        this.setState({speed: newSpeed})\r\n        console.log(this.state.speed)\r\n    }\r\n\r\n    initBarChart = (initData) => {\r\n\r\n        this.setScales(initData)\r\n\r\n        d3.select('.barChart').selectAll('rect').data(initData).enter().append('rect')\r\n\r\n            .attr(\"x\", (d,i) => this.xScale(i))            \r\n            .attr('y', (d,i) => this.props.height - this.yScale(d))\r\n            .attr(\"width\", this.xScale.bandwidth())\r\n            \r\n            .transition()\r\n            .duration(this.state.speed)\r\n            \r\n            .attr(\"height\", (d,i) => this.yScale(d))\r\n            .attr(\"id\", (d, i) => \"rect-\" + i)\r\n        \r\n        d3.select('.barChart').selectAll('text').data(initData).enter().append('text')\r\n            .attr(\"x\", (d,i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            .attr('y', (d,i) => this.props.height - this.yScale(d) - 20)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"opacity\", 0.7)\r\n            .attr(\"id\", (d, i) => \"label-\" + i)\r\n            .text((d) => {return d})\r\n        \r\n        this.setState({data: initData})\r\n    }\r\n\r\n    shuffleBarChart = () => {\r\n\r\n        const randomData = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n\r\n        this.setScales(randomData)\r\n\r\n        d3.select('.barChart').selectAll('rect').remove()\r\n        d3.select('.barChart').selectAll('text').remove()\r\n\r\n        this.initBarChart(randomData)\r\n    }\r\n\r\n    bubbleSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n        let currentPos = 0\r\n        let iteration = 0\r\n\r\n        const bubbleSortLoop = () => {\r\n            if (iteration >= currentData.length - 1) {\r\n                return\r\n            }\r\n\r\n            if (currentPos === currentData.length - 1 - iteration) {\r\n                currentPos = 0\r\n                ++iteration\r\n            }\r\n        \r\n            if (currentData[currentPos] > currentData[currentPos + 1]) {\r\n                [currentData[currentPos], currentData[currentPos + 1]] = [currentData[currentPos + 1], currentData[currentPos]]\r\n            }\r\n        \r\n            ++currentPos\r\n        }\r\n\r\n        this.loop = setInterval(() => {\r\n        \r\n            bubbleSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeBubble', (d, i) => i === currentPos || i + 1 === currentPos)\r\n                .classed('completedBubble', (d, i) => i >= currentData.length - iteration)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        \r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    insertionSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let currentPos = 1\r\n        let complete = 1\r\n\r\n        let resetTest = false\r\n\r\n        const insertionSortLoop = () => {\r\n            \r\n            if (resetTest || currentPos === 0) {\r\n                currentPos = complete\r\n                resetTest = false\r\n            }\r\n\r\n            if (complete > currentData.length) {\r\n                return\r\n            }\r\n                    \r\n            if (currentData[currentPos] < currentData[currentPos - 1]) {\r\n                [currentData[currentPos], currentData[currentPos - 1]] = [currentData[currentPos - 1], currentData[currentPos]]\r\n            } \r\n        \r\n            else {\r\n                resetTest = true\r\n            }\r\n        \r\n            if (currentPos === complete) {\r\n                ++complete\r\n            }\r\n            --currentPos\r\n        }\r\n\r\n        this.loop = setInterval(() => {\r\n\r\n            insertionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeInsertion', (d, i) => complete <= currentData.length && (i === currentPos + 1 || i === currentPos))\r\n                .classed('completedInsertion', (d, i) => i < complete)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    selectionSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n\r\n        let sorted = 0\r\n        let currentPos = 0\r\n        let min = 0\r\n        let reset = false\r\n\r\n        const selectionSortLoop = () => {\r\n\r\n            if (sorted === currentData.length) {\r\n                return\r\n            }\r\n            \r\n            if (reset) {\r\n                reset = false\r\n                min = currentPos = sorted\r\n            }\r\n            \r\n            ++currentPos\r\n            \r\n            if (currentData[currentPos] < currentData[min]) {\r\n                min = currentPos\r\n            }\r\n            \r\n            if (currentPos === currentData.length - 1) {\r\n                [currentData[sorted], currentData[min]] = [currentData[min], currentData[sorted]]\r\n                \r\n                ++sorted\r\n                reset = true\r\n            }\r\n\r\n            if (sorted === currentData.length - 1) {\r\n                ++sorted\r\n            }\r\n        }\r\n\r\n        this.loop = setInterval(() => {\r\n\r\n            selectionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeSelection', (d, i) => sorted !== currentData.length && (i === currentPos || i === min))\r\n                .classed('completedSelection', (d, i) => i < sorted)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    quickSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let toSort = [[0, currentData.length - 1]]\r\n        let sorting\r\n        let pivot\r\n\r\n        let l, r\r\n\r\n        const quickSortLoop = () => {\r\n            if (!sorting) {\r\n                if (!toSort.length) {\r\n                    return\r\n                }\r\n                \r\n                sorting = toSort.shift()\r\n                pivot = sorting[0] + Math.floor((sorting[1] - sorting[0]) * Math.random())\r\n                \r\n                l = sorting[0]\r\n                r = sorting[1]\r\n            }\r\n        \r\n            if (l === r) {\r\n                if (pivot - 1 - sorting[0] > 0) {\r\n                    toSort.push([sorting[0], pivot - 1])\r\n                }\r\n                \r\n                if (sorting[1] - (pivot + 1) > 0) {\r\n                    toSort.push([pivot + 1, sorting[1]])\r\n                }\r\n            \r\n                l = r = sorting = pivot = undefined\r\n            \r\n                quickSortLoop()\r\n                return\r\n            }\r\n        \r\n            if (currentData[l] < currentData[pivot]) {\r\n                ++l\r\n                return\r\n            }\r\n        \r\n            if (currentData[r] > currentData[pivot]) {\r\n                --r\r\n                return\r\n            }\r\n        \r\n            [currentData[l], currentData[r]] = [currentData[r], currentData[l]]\r\n        \r\n            if (pivot === l) {\r\n\r\n                pivot = r\r\n            } \r\n            \r\n            else if (pivot === r) {\r\n                pivot = l\r\n            }\r\n        }\r\n\r\n        this.loop = setInterval( () => {\r\n            quickSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeQuick', (d, i) => sorting && (i >= sorting[0] && i <= sorting[1]))\r\n                .classed('pivotQuick', (d, i) => i === pivot)\r\n                .classed('highlightQuick', (d, i) => i === r || i === l)\r\n                .classed('completedQuick', (d, i) => isCompleted(i))\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            }, this.state.speed)\r\n\r\n            function isCompleted(i) {\r\n\r\n                if (!sorting && !toSort.length) {\r\n                    return true\r\n                }\r\n\r\n                return [sorting].concat(toSort).every(([l, r]) => i < l || r < i)\r\n            }\r\n\r\n            this.setState({data: currentData})\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.simView}\r\n                        elevation={7}>\r\n\r\n                        <svg\r\n                            width  = {this.props.width}\r\n                            height = {this.props.height}>\r\n\r\n                            <g className=\"barChart\"/>\r\n                    \r\n                        </svg>\r\n                    \r\n                        <Divider/>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <SortControls\r\n                        stopLoop={this.stopLoop}\r\n                        shuffleBarChart={this.shuffleBarChart}\r\n                        \r\n                        play={this.state.play}\r\n                        setPlay={this.setPlay}\r\n\r\n                        speed={this.state.speed}\r\n                        dataSize={this.state.dataSize}\r\n                        setSpeed={this.setSpeed}\r\n                        setDataSize={this.setDataSize}\r\n\r\n                        bubbleSort={this.bubbleSort}\r\n                        insertionSort={this.insertionSort}\r\n                        mergeSort={this.mergeSort}\r\n                        selectionSort={this.selectionSort}\r\n                        quickSort={this.quickSort}\r\n\r\n\r\n                        scripts={this.state.scripts}\r\n                        currentScript={this.state.currentScript}\r\n                        setScript={this.setScript}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.controlPaper}\r\n                        elevation={7}>\r\n\r\n                        <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                            References\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" target=\"_blank\" href=\"https://www.google.com\">\r\n                            THIS IS SOME TEXT\r\n                        </Typography>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortD3)","import React from 'react'\r\n\r\nimport SortD3 from './sorting/SortD3'\r\nclass SortingView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            svgWidth      : 550,\r\n            svgHeight     : 480,\r\n        }\r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <SortD3\r\n                width={this.state.svgWidth}\r\n                height={this.state.svgHeight}\r\n                light={this.props.light}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SortingView","import React from 'react'\r\nimport Typist from 'react-typist'\r\nimport './mainPage/MainPage.scss'\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        align: 'center'\r\n    },\r\n})\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            typingDone: false\r\n        }\r\n    }\r\n\r\n    typingDone = () => {\r\n        this.setState({typingDone: !this.state.typingDone})\r\n        console.log(\" DONE\")\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={48}>\r\n            <Grid item><div style={{marginTop: '240px'}}></div></Grid>\r\n            <Grid item>\r\n                <Typist\r\n                    className=\"Typist-header\"\r\n                    avgTypingSpeed={40}\r\n                    startDelay={1000}\r\n                    onTypingDone={this.typingDone}>\r\n\r\n                    <span>Learnt</span>\r\n\r\n                    <Typist.Backspace count={1} delay={700}/>\r\n                \r\n                    <Typist.Delay ms={250}/>\r\n                    <span>+</span>\r\n                </Typist>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                    <Button color=\"primary\" variant=\"contained\" component={Link} to=\"/turing_machine\">\r\n                        <Typography color=\"secondary\">Click to Begin</Typography>\r\n                    </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(MainPage)","import React from 'react'\r\n\r\n// Self-generated components\r\nimport AppDrawer from './AppDrawer/AppDrawer'\r\nimport TuringView from './MainViews/TuringView'\r\nimport VonNeumannView from './MainViews/VonNeumannView'\r\nimport SortingView from './MainViews/SortingView'\r\n\r\nimport MainPage from './MainViews/MainPage'\r\n\r\n\r\n// Material UI Components\r\nimport { MuiThemeProvider, createMuiTheme, withStyles} from '@material-ui/core/styles'\r\n\r\n// Base Theme settings\r\nimport {lightTheme, darkTheme} from './themes'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nconst lTheme = createMuiTheme(lightTheme)\r\nconst dTheme = createMuiTheme(darkTheme)\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass App extends React.Component {\r\n    // Constructor for the Base App\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // Prop for handling changes from Light theme to Dark theme, and vice versa\r\n            light: true,            \r\n            // Prop for list of pages\r\n            modes: [\"Turing Machine\", \"von Neumann Architecture\", \"Sorting Algorithms\"],\r\n        }\r\n\r\n        // Bind handlers to the App Component\r\n        this.handleLightChange = this.handleLightChange.bind(this)\r\n    }\r\n\r\n    // Handles change of theme from Light Mode to Dark Mode\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}))\r\n        console.log(\"Light: \" + this.state.light)\r\n    }\r\n\r\n    componentWillMount(){\r\n        localStorage.getItem('light') && this.setState({\r\n            light: JSON.parse(localStorage.getItem('light')),\r\n        })        \r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('light', JSON.stringify(nextState.light))\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {classes} = this.props\r\n        return (\r\n            \r\n            <div className = {classes.root}>\r\n        \r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n\r\n                    <AppDrawer\r\n                        handleLightChange={this.handleLightChange} \r\n                        light={this.state.light} \r\n                        modes={this.state.modes}\r\n                    /> \r\n\r\n                    <div style={{marginTop: '90px'}}></div>\r\n                    \r\n                    <Switch>\r\n                        \r\n                        <Route exact path=\"/sorting_algorithms\" render={() =>                        \r\n                            <SortingView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n\r\n                        <Route exact path=\"/turing_machine\" render={() => \r\n                            <TuringView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n\r\n                        <Route exact path=\"/von_neumann_architecture\" render={() => \r\n                            <VonNeumannView/>\r\n                        }/>\r\n\r\n                        <Route exact path=\"/\" render={() => \r\n                            <MainPage/>\r\n                        }/>\r\n                    </Switch>\r\n                </MuiThemeProvider>\r\n            </div>                \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App)","const darkTheme = {\r\n    palette: {\r\n        type: 'dark',\r\n\r\n        primary: {\r\n            main: '#045a6d',\r\n        },\r\n        secondary: {\r\n            main: \"#afe2f7\",\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    },\r\n}\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#afe2f7',\r\n        },\r\n        secondary: {\r\n            main: '#045a6d',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\n\r\nexport {lightTheme, darkTheme};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter basename=\"/\">\r\n        <App/>\r\n    </HashRouter>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}