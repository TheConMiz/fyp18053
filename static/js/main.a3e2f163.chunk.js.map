{"version":3,"sources":["components/AppDrawer/AppDrawer.js","components/themes/lightTheme.js","components/themes/darkTheme.js","components/CodeView.js","App.js","index.js"],"names":["AppDrawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMenuOpen","setState","state","drawer","handleListClicks","pageId","console","log","_this2","_this$props","classes","appDrawer","theme","react_default","a","createElement","className","List_default","subheader","ListSubheader_default","component","Divider_default","map","text","index","ListItem_default","button","key","onClick","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","Tooltip_default","title","interactive","placement","IconButton_default","color","menuButton","aria-label","Menu_default","Typography_default","variant","noWrap","typography","lights","handleLightChange","light","WbSunnyOutlined_default","WbSunny_default","accountCircle","AccountCircle_default","Hidden_default","smUp","implementation","SwipeableDrawer_default","container","anchor","open","onOpen","onClose","React","Component","withStyles","display","marginRight","marginLeft","flexGrow","margin","spacing","unit","defineProperty","breakpoints","up","width","flexShrink","withTheme","lightTheme","palette","amber","type","secondary","main","useNextVariants","darkTheme","CodeView","value","lib_default","highlightActiveLine","enableBasicAutocompletion","lTheme","createMuiTheme","dTheme","App","bind","assertThisInitialized","core_styles","components_AppDrawer_AppDrawer","components_CodeView","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a3e2f163.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport LightOn from '@material-ui/icons/WbSunny'\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 20,\r\n    marginLeft: -12,\r\n  },\r\n\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n  },\r\n\r\n  typography: {\r\n    marginRight: 20,\r\n    flexGrow: 1\r\n  },\r\n\r\n  accountCircle: {\r\n    marginRight: -12\r\n  },\r\n\r\n  lights: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n\r\n  appDrawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  }\r\n})\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      drawer: false,\r\n    }\r\n  }\r\n\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n    //console.log(this.state.drawer)\r\n  }\r\n\r\n  //TODO: ROUTING PURPOSES\r\n  handleListClicks = (pageId) =>{\r\n    console.log(pageId)\r\n  }\r\n\r\n  render(){\r\n    const {classes, theme} = this.props\r\n\r\n    const appDrawer = (\r\n      <div>\r\n        <div className={classes.appDrawer}>\r\n          <List subheader={<ListSubheader component=\"div\">FYP18053</ListSubheader>}>\r\n            <Divider/>\r\n            {['Turing', 'von Neumann'].map((text, index) => (\r\n              <ListItem button key = {text} onClick={() => this.handleListClicks(text)}>\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider/>\r\n          <List>\r\n            {['About Us'].map((text, index) => (\r\n              <ListItem button key = {text} onClick={() => this.handleListClicks(text)}>\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" interactive placement = 'bottom-end'>\r\n            <div>\r\n            <IconButton color=\"inherit\" className={classes.menuButton} aria-label=\"Open Menu\" onClick={this.handleMenuOpen}>\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            </div>\r\n            </ToolTip>\r\n  \r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.typography}>\r\n              FYP18053\r\n            </Typography>\r\n\r\n            <ToolTip title=\"Toggle Lights\" interactive >\r\n              <IconButton color=\"inherit\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n                {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n              </IconButton>\r\n            </ToolTip>\r\n\r\n            <ToolTip title=\"Account\" interactive placement = 'bottom-start'>\r\n              <IconButton color=\"inherit\" className={classes.accountCircle} aria-label=\"My Account\">\r\n                <AccountCircle/>\r\n              </IconButton>\r\n            </ToolTip>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAppDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(AppDrawer) ","import amber from '@material-ui/core/colors/amber'\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        primary: amber,\r\n        type: 'light',\r\n        secondary: {\r\n            main: '#5c6bc0',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\nexport default lightTheme","import amber from '@material-ui/core/colors/amber'\r\n\r\nconst darkTheme = {\r\n    palette: {\r\n        primary: amber,\r\n        type: 'dark',\r\n        secondary: {\r\n            main: '#5c6bc0',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\nexport default darkTheme","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport terminal from 'brace/theme/terminal'\r\nimport solarized_light from 'brace/theme/solarized_light'\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"// This is some default text\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <AceEditor\r\n                    theme={(!this.props.light)? \"terminal\": \"solarized_light\"}\r\n                    highlightActiveLine={true}\r\n                    enableBasicAutocompletion={false}\r\n                    value={this.state.value}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeView","import React from 'react'\r\nimport './App.css';\r\nimport AppDrawer from './components/AppDrawer/AppDrawer'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport lightTheme from './components/themes/lightTheme'\r\nimport darkTheme from './components/themes/darkTheme'\r\nimport CodeView from './components/CodeView'\r\n\r\nconst lTheme = createMuiTheme(lightTheme)\r\nconst dTheme = createMuiTheme(darkTheme)\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            light: true,\r\n        }\r\n        this.handleLightChange = this.handleLightChange.bind(this)\r\n    }\r\n\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}))\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            <div className = \"App\">\r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n                \r\n                    <AppDrawer handleLightChange={this.handleLightChange} light={this.state.light}/>\r\n\r\n                    <div className =\"CodeView\">\r\n                        <CodeView handleLightChange={this.handleLightChange} light={this.state.light}/>\r\n                    </div>\r\n\r\n                </MuiThemeProvider>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}