{"version":3,"sources":["components/AppDrawer/assets/LightSwitch.js","components/AppDrawer/AppDrawer.js","components/MainViews/turing/TuringControls.js","components/MainViews/turing/CodeView.js","components/MainViews/turing/TuringTape.js","components/MainViews/turing/ErrorBoundary.js","components/MainViews/turing/Turing.js","components/MainViews/TuringView.js","components/MainViews/sorting/SortControls.js","components/MainViews/sorting/CodeView.js","components/MainViews/sorting/SortD3.js","components/MainViews/SortingView.js","components/MainViews/MainPage.js","components/App.js","components/themes.js","index.js"],"names":["LightSwitch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","snackbar","classes","react_default","a","createElement","Tooltip_default","title","placement","IconButton_default","color","className","lights","onClick","handleLightChange","aria-label","light","WbSunnyOutlined_default","WbSunny_default","React","Component","withStyles","theme","margin","spacing","unit","withTheme","AppDrawer","handleMenuOpen","setState","drawer","handleAboutOpen","about","modes","_this2","_this$props","appDrawer","MenuList_default","subheader","ListSubheader_default","component","Divider_default","map","text","index","MenuItem_default","menuItem","button","key","Link","to","replace","toLowerCase","ListItemText_default","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","nestedItem","target","href","go","inset","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","menuButton","Menu_default","Typography_default","variant","noWrap","typography","assets_LightSwitch","Hidden_default","smUp","implementation","SwipeableDrawer_default","container","anchor","open","onOpen","onClose","compose","display","marginRight","marginLeft","flexGrow","align","settingsIcon","paddingLeft","&:focus","backgroundColor","palette","main","& $primary, & $icon","common","white","defineProperty","breakpoints","up","width","flexShrink","withRouter","TuringControls","scriptMenuOpen","scriptMenu","stateMenuOpen","stateMenu","instructionsMenuOpen","instructionsMenu","Paper_default","controlPaper","elevation","core_IconButton_default","startMachine","disabled","play","core_Tooltip_default","PlayArrow_default","setPlay","setError","currentScript","endless10Setter","incrementOneSetter","genericSetter","console","log","Refresh_default","Button_default","index_es","Dialog_default","dialog","FormControl_default","formControl","RadioGroup_default","name","radio","value","onChange","event","setScript","scriptList","FormControlLabel_default","control","Radio_default","label","scroll","stateList","ListItem_default","addStates","length","removeStates","instructions","object","id","react","InputLabel_default","shrink","Select_default","setInstruction","input","Input_default","ifRead","dataList","write","goTo","moveTape","moveList","addInstruction","removeInstruction","error","padding","textField","statePaper","CodeView","endlessValue","incrementValue","pingPongValue","Paper_Paper_default","lib_default","height","wrapEnabled","onLoad","mode","fontSize","highlightActiveLine","editorProps","$blockScrolling","Infinity","readOnly","freeModeValue","setAutoScrollEditorIntoView","setUseWrapMode","indentedSoftWrap","TuringTape","tapePaper","tapeArray","tapePosition","changeCell","maxWidth","ErrorBoundary","info","children","Turing","tempStates","slice","push","pop","newScript","tempInstructions","newObject","cellId","tempTape","startState","currentState","tempNextState","find","instruction","undefined","Error","newTapeArray","newTapePosition","concat","editor","bind","assertThisInitialized","turing_ErrorBoundary","Grid_default","direction","justify","alignItems","turing_TuringTape","item","turing_CodeView","turing_TuringControls","addData","removeData","style","marginTop","gutterBottom","TuringView","turing_Turing","SortControls","selection","bubbleSort","insertionSort","selectionSort","quickSort","stopLoop","Stop_default","shuffleBarChart","scripts","TextField_default","type","InputLabelProps","speed","setSpeed","helperText","dataSize","setDataSize","simView","bubbleValue","insertionValue","quickValue","selectionValue","tabSize","SortD3","loop","xScale","yScale","setScales","data","d3","domain","range","paddingInner","clearInterval","selectAll","attr","newDataSize","newSpeed","initBarChart","initData","enter","append","d","i","bandwidth","transition","duration","randomData","values","remove","currentData","currentPos","iteration","setInterval","_ref","bubbleSortLoop","classed","complete","resetTest","_ref2","insertionSortLoop","sorted","min","reset","_ref3","selectionSortLoop","sorting","pivot","l","r","toSort","quickSortLoop","shift","Math","floor","random","_ref4","every","_ref5","_ref6","slicedToArray","isCompleted","sorting_CodeView","sorting_SortControls","mergeSort","codeView","SortingView","svgWidth","svgHeight","MainViews_sorting_SortD3","MainPage","typingDone","Typist_default","avgTypingSpeed","startDelay","onTypingDone","Backspace","count","delay","Delay","ms","lTheme","createMuiTheme","secondary","useNextVariants","dTheme","App","localStorage","getItem","JSON","parse","nextProps","nextState","setItem","stringify","core_styles","components_AppDrawer_AppDrawer","Switch","Route","exact","path","render","MainViews_SortingView","MainViews_TuringView","MainViews_MainPage","ReactDOM","HashRouter","basename","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a3b0459e.chunk.js","sourcesContent":["import React from 'react';\r\nimport LightOn from '@material-ui/icons/WbSunny';\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined';\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst styles = theme => ({\r\n    lights: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  })\r\n\r\nclass LightSwitch extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          snackbar: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ToolTip title=\"Toggle Lights\" placement='bottom'>\r\n            <IconButton color=\"secondary\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n              {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n            </IconButton>\r\n          </ToolTip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LightSwitch);","import React from 'react'\r\n\r\n//Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton'\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\n// Component for grouping multiple export types together\r\nimport {compose} from 'recompose'\r\n\r\n// Component for handling Light/Dark theme changes\r\nimport LightSwitch from './assets/LightSwitch'\r\n\r\n// Components for Routing\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n// Github logo for About Section\r\nimport { GoMarkGithub } from 'react-icons/go'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  \r\n    menuButton: {\r\n      marginRight: 20,\r\n      marginLeft: -12,\r\n    },\r\n  \r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n  \r\n    typography: {\r\n      marginRight: 20,\r\n      flexGrow: 1,\r\n      align: \"center\",\r\n    },\r\n  \r\n    settingsIcon: {\r\n      marginRight: -12\r\n    },\r\n\r\n    nestedItem: {\r\n      paddingLeft: theme.spacing.unit,\r\n    },\r\n\r\n    menuItem: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& $primary, & $icon': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  \r\n    appDrawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      }\r\n    },\r\n  })\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      // State for toggling the Side menu\r\n      drawer: false,\r\n      // State for generating list of Side menu buttons\r\n      modes: this.props.modes,\r\n      // State for toggling About section\r\n      about: false,\r\n    }\r\n  }\r\n\r\n  // State handlers\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n  }\r\n\r\n  handleAboutOpen = () => {\r\n    this.setState(state => ({about: !this.state.about}))\r\n  }\r\n\r\n  render(){\r\n    const {classes, modes} = this.props\r\n    \r\n    // Pre-defined App Drawer, courtesy of Material UI\r\n    const appDrawer = (\r\n      <div>\r\n        <div className={classes.appDrawer}>\r\n          <MenuList subheader={<ListSubheader component=\"div\" >Learn+</ListSubheader>}>\r\n\r\n            <Divider/>\r\n\r\n            {/*Code block for mapping mode props to Menu Item names*/}\r\n            \r\n            {modes.map((text, index) => (\r\n\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                button key = {text}\r\n                onClick={() => {\r\n                  this.handleMenuOpen()\r\n                }} \r\n                component={Link} \r\n                to={text.replace(/\\s/g,'_').toLowerCase()}>\r\n\r\n                  <ListItemText primary={text}/>\r\n              \r\n              </MenuItem>\r\n            ))}\r\n\r\n          </MenuList>\r\n          \r\n          <Divider/>\r\n          \r\n          <MenuList>\r\n            <MenuItem\r\n                className={classes.menuItem}\r\n                button\r\n                onClick={() => {this.handleAboutOpen()}}>\r\n                \r\n                  <ListItemText primary=\"About\"/>\r\n                  \r\n                  {this.state.about ? <ExpandLess /> : <ExpandMore />}\r\n              \r\n              </MenuItem>\r\n\r\n            <Collapse in={this.state.about} timeout=\"auto\" unmountOnExit>\r\n              <MenuList>\r\n                <MenuItem\r\n                  className={classes.nestedItem}\r\n                  component=\"a\" target=\"_blank\" href=\"https://github.com/TheConMiz/fyp18053\">\r\n                    <GoMarkGithub/>\r\n                    <ListItemText primary=\"View Repository\" inset></ListItemText>\r\n                </MenuItem>\r\n              </MenuList>\r\n          </Collapse>\r\n          </MenuList>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" placement = 'bottom'>\r\n              <div>\r\n                <IconButton color=\"secondary\" className={classes.menuButton} onClick={this.handleMenuOpen}>\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n              </div>\r\n            </ToolTip>\r\n\r\n            <Typography variant=\"h6\" color=\"secondary\" noWrap className={classes.typography}>\r\n              Learn+\r\n            </Typography>\r\n\r\n            <LightSwitch light={this.props.light} handleLightChange={this.props.handleLightChange}/>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withStyles(styles, {withTheme: true}),\r\n  withRouter\r\n) (AppDrawer)","import React, { Fragment } from 'react'\r\n\r\n// Material UI components\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport Input from '@material-ui/core/Input'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\n// Material UI styling assets\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    },\r\n    statePaper: {\r\n        width: 570,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass TuringControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            scriptMenu: false,\r\n            stateMenu: false,\r\n            instructionsMenu: false,\r\n        }\r\n    }\r\n\r\n    // Menu toggles\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n    stateMenuOpen = () => {\r\n        this.setState({stateMenu: !this.state.stateMenu})\r\n    }\r\n    instructionsMenuOpen = () => {\r\n        this.setState({instructionsMenu: !this.state.instructionsMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n                {/* Button for running one iteration of the Turing Machine*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.startMachine()\r\n                    }}\r\n                    disabled={this.props.play}>\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/* Button for resetting the Turing Machine, in case of errors*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={()=> {\r\n                        this.props.setPlay(false)\r\n                        this.props.setError(false)\r\n                        this.props.currentScript === \"Endless 1/0s\" ? this.props.endless10Setter():\r\n                        this.props.currentScript === \"Increment by 1\" ? this.props.incrementOneSetter():\r\n                        this.props.currentScript === \"Ping-Pong\" ? this.props.genericSetter(): console.log(\"Nothing to set\")\r\n                    }}>\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                {/* Button for selecting script*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Button for selecting and changing states*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.stateMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Machine States\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Button for changing instructions*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.instructionsMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Instructions\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Forms for performing data operations on the machine*/}\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scriptList.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.scriptMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.stateMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    States\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.stateList.map((text, index) => (\r\n                                <ListItem  key={text}>\r\n                                    <ListItemText primary={text}/>\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.stateList.length===1}\r\n                        onClick={this.props.removeStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.stateMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.instructionsMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Instructions\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.instructions.map((object, id) => (\r\n                                <Fragment  key={id}>\r\n                                    <Typography\r\n                                        className={classes.typography} \r\n                                        variant=\"h6\"\r\n                                        color=\"secondary\"\r\n                                        align=\"center\">\r\n                                            Instruction {id}\r\n                                    </Typography>\r\n                                    \r\n                                    <FormControl\r\n                                      \r\n                                        className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            State\r\n                                        </InputLabel>\r\n\r\n                                        <Select\r\n                                            value={object.state}\r\n                                            onChange={(event) => {\r\n                                                object.state = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"state\" id=\"state\" />}\r\n                                            >\r\n\r\n                                        {this.props.stateList.map((text, id) => (\r\n                                            <MenuItem key={id} value={text}>\r\n                                                {text}\r\n                                            </MenuItem>\r\n                                        ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel shrink>\r\n                                            If Read\r\n                                        </InputLabel>\r\n                                            \r\n                                        <Select\r\n                                            value={object.ifRead}\r\n                                            onChange={(event) => {\r\n                                                object.ifRead = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"ifRead\" id=\"ifRead\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Write\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.write}\r\n                                            onChange={(event) => {\r\n                                                object.write = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"write\" id=\"write\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Next State\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.goTo}\r\n                                            onChange={(event) => {\r\n                                                object.goTo = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"nextState\" id=\"nextState\" />}\r\n                                            >\r\n\r\n                                            {this.props.stateList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl\r\n                                        className={classes.formControl}\r\n                                        >\r\n                                        <InputLabel shrink>\r\n                                            Tape Move\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.moveTape}\r\n                                            onChange={(event) => {\r\n                                                object.moveTape = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"tapeMove\" id=\"tapeMove\" />}\r\n                                            >\r\n\r\n                                            {this.props.moveList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.instructions.length===1}\r\n                        onClick={this.props.removeInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.instructionsMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                {/* Code ofr handling error messages*/}\r\n                {this.props.error ? \r\n                    <Typography \r\n                        className={classes.typography} \r\n                        color=\"secondary\" \r\n                        variant=\"h7\">\r\n                            Possible Error: Check the instructions, and click Reset\r\n                        </Typography>: \"\"}\r\n                \r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringControls)","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport javascript from 'brace/mode/javascript'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            // States for showing static hints on how to use the Turing Machine\r\n\r\nendlessValue: \r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Endless Ones and Zeroes\r\n// The first Turing Machine, devised by Alan Turing himself.`,\r\n\r\nincrementValue:\r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Increment by 1\r\n// A simple script that increases the binary value by 1. Try to adapt it for\r\n// datasets with gaps in them.`,\r\npingPongValue:\r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Ping-Pong\r\n// The machine will run for as long as it is bracketed by 1s.\r\n// Try dealing with blank spots in the dataset!`,\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    mode=\"javascript\"\r\n                    fontSize={18}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    value={ \r\n                        (   this.props.currentScript === \"Endless 1/0s\" ? this.state.endlessValue : \r\n                            this.props.currentScript === \"Increment by 1\" ? this.state.incrementValue:\r\n                            this.props.currentScript === \"Ping-Pong\" ? this.state.pingPongValue: \r\n                            this.state.freeModeValue\r\n                        )}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","import React from 'react'\r\nimport {withStyles} from '@material-ui/core/'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n    tapePaper: {\r\n        maxWidth: 900,\r\n        padding: theme.spacing.unit * 1.5,\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        width: 10,\r\n        height: 50 \r\n    },\r\n})\r\n\r\n\r\nclass TuringTape extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    classes = this.props\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper className={classes.tapePaper}>\r\n                <Divider/>\r\n                {this.props.tapeArray.map((text, id) => (\r\n                    <Button\r\n                        className={classes.button}\r\n                        key={id}\r\n                        color={id === this.props.tapePosition ? \"primary\": \"secondary\"}\r\n                        variant=\"contained\"\r\n                        onClick={() => !this.props.play ? this.props.changeCell(id): console.log(\"Tape Locked\")}>\r\n                            {text === \"blank\" ? \"\" : text}\r\n                        </Button>\r\n                ))}\r\n                <Divider/>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringTape)","import React from 'react';\r\n\r\n// Boilerplate code for handling errors from the Turing Machine\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = { \r\n        error: null,\r\n        info: null\r\n      }\r\n    }\r\n  \r\n    componentDidCatch(error, info) {\r\n      this.setState({ error: error, info: info });\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.info) {\r\n        return(<div>Error. Refresh the Page!</div>)\r\n      }\r\n      \r\n      return this.props.children;\r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary","// Credits to http://turingmachine.io/\r\n// Credits to http://morphett.info/turing/\r\n// Credits tohttp://math.hws.edu/eck/js/turing-machine/TM.html\r\n\r\nimport React from 'react'\r\n\r\n// Material UI components\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TuringControls from './TuringControls'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// Self-generated components\r\nimport CodeView from './CodeView'\r\nimport TuringTape from './TuringTape'\r\nimport ErrorBoundary from './ErrorBoundary'\r\n\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass Turing extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            // States for storing scripts, machine state, dataset, etc.\r\n            scriptList: [\"Endless 1/0s\", \"Increment by 1\", \"Ping-Pong\"],\r\n            currentScript: \"Endless 1/0s\",\r\n\r\n            moveList: [\"right\", \"left\", \"halt\"],\r\n\r\n            instructions: [],\r\n\r\n            dataList: [\"0\", \"1\", \"blank\"],\r\n\r\n            stateList: [\"q0\", \"q1\"],\r\n            startState: \"q0\",\r\n            \r\n            currentState: \"q0\",\r\n\r\n            tapeArray: [\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\"],\r\n            tapePosition: 4,\r\n            play: false,\r\n            editor: false,\r\n            error: false,\r\n\r\n        }\r\n        this.startMachine = this.startMachine.bind(this)\r\n    }\r\n\r\n    // Loads the endless1/0 script as the default on page load\r\n    componentDidMount(){\r\n        this.endless10Setter()\r\n    }\r\n\r\n    // Add states to the machine\r\n    addStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.push(\"q\" + tempStates.length)\r\n        this.setState({stateList: tempStates})\r\n        //console.log(this.state.stateList)\r\n    }\r\n\r\n    // Remove states from the machine. There will always be a minimum of 1 state\r\n    removeStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.pop()\r\n        this.setState({stateList: tempStates})\r\n        //console.log(this.state.stateList)\r\n    }\r\n\r\n    // Setter for scripts\r\n    setScript = (newScript) => {\r\n        newScript === \"Endless 1/0s\" ? this.endless10Setter():\r\n        newScript === \"Increment by 1\" ? this.incrementOneSetter():\r\n        newScript === \"Ping-Pong\" ? this.genericSetter(): console.log(\"Nothing to set\")\r\n        this.setState({currentScript: newScript})\r\n    }\r\n\r\n    // Add instructions to the machine\r\n    addInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        let newInstruction={\r\n            \"state\": \"q0\",\r\n            \"ifRead\": \"blank\",\r\n            \"write\": \"0\",\r\n            \"goTo\": \"q0\",\r\n            \"moveTape\": \"right\"\r\n        }\r\n        \r\n        tempInstructions.push(newInstruction)   \r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    // Remove instructions from the machine\r\n    removeInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions.pop()\r\n        //console.log(tempInstructions)\r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    // Setter for instructions\r\n    setInstruction = (newObject, id) => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions[id] = newObject\r\n        this.setState({instructions: tempInstructions})\r\n\r\n    }\r\n\r\n    // Modify Tape cells based on their values\r\n    changeCell = (cellId) => {\r\n        //console.log(cellId)\r\n        let tempTape = this.state.tapeArray.slice()\r\n        \r\n        tempTape[cellId] === \"0\" ? tempTape[cellId] = \"1\" : \r\n        tempTape[cellId] === \"1\" ? tempTape[cellId] = \"blank\" :\r\n        tempTape[cellId] = \"0\"\r\n\r\n        this.setState({tapeArray: tempTape})\r\n    }\r\n\r\n    // Some utility setters\r\n    setPlay = (value) => {\r\n        this.setState({play: value})\r\n    }\r\n    setError = (value) => {\r\n        this.setState({error: value})\r\n    }\r\n\r\n    // Scripts containing instructions, states, etc.\r\n    endless10Setter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\", \"q3\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q2\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q2\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q3\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q3\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n        ]})     \r\n        this.setState({tapeArray: [\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\"]})\r\n\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 0})\r\n        this.setState({play: false})\r\n\r\n    }\r\n\r\n    incrementOneSetter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q2\",\r\n                \"moveTape\": \"halt\"\r\n            },\r\n        ]})\r\n\r\n        this.setState({tapeArray: [\"blank\",\"blank\",\"blank\",\"1\",\"0\",\"1\",\"1\",\"blank\",\"blank\",\"blank\"]})\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 3})\r\n        this.setState({play: false})\r\n    }\r\n\r\n    genericSetter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n        ]})\r\n\r\n        this.setState({tapeArray: [\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\"]})\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 4})\r\n        this.setState({play: false})\r\n    }\r\n\r\n    // Function for running one iteration of the Turing Machine\r\n    startMachine = () => {\r\n\r\n        // Get starting state, and other required information\r\n        let tempInstructions = this.state.instructions.slice()\r\n        let tempNextState = tempInstructions.find(instruction => {\r\n            return (instruction.state === this.state.currentState && instruction.ifRead === this.state.tapeArray[this.state.tapePosition])\r\n        })\r\n        \r\n        // Code for handling possible errror\r\n        if(tempNextState === undefined){\r\n            this.setState({play: true})\r\n            this.setState({error: true})\r\n            throw new Error(\"Incomplete Instructions: Click Reset\")\r\n        }\r\n        if (tempNextState.moveTape === \"halt\"){\r\n            this.setState({play: true})\r\n            //console.log(\"HALT\")\r\n        }\r\n        \r\n        // Segment for handling changes made to the tape\r\n        let newTapeArray = this.state.tapeArray.slice()\r\n        newTapeArray[this.state.tapePosition] = tempNextState.write\r\n\r\n        let newTapePosition = this.state.tapePosition + (tempNextState.moveTape === \"left\" ? -1 : 1)\r\n\r\n        // Handle generation of additional tape to the left\r\n        if (newTapePosition < 0){\r\n            let tempTapeArray = [\"blank\"].concat(newTapeArray)\r\n\r\n            newTapeArray = tempTapeArray\r\n\r\n            newTapePosition = 0\r\n        }\r\n\r\n        // Handle generation of additional tape to the right\r\n        else if (newTapePosition > this.state.tapeArray.length - 1){\r\n            newTapeArray.push(\"blank\")\r\n        }\r\n\r\n        // Set state to update values on the screen\r\n        this.setState({\r\n            currentState: tempNextState.goTo,\r\n            tapeArray: newTapeArray,\r\n            tapePosition: newTapePosition\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ErrorBoundary>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n                \r\n                <Grid>\r\n                    \r\n                    {/* Component for displaying the tape*/}\r\n                    <TuringTape\r\n                        dataList={this.state.dataList}\r\n                        instructions={this.state.instructions}\r\n                        currentScript={this.state.currentScript}\r\n                        moveList={this.state.moveList}\r\n                        tapeArray={this.state.tapeArray}\r\n                        changeCell={this.changeCell}\r\n                        tapePosition={this.state.tapePosition}\r\n                        play={this.state.play}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    \r\n                    {/* Component for displaying static commentary, pseudocode, and the like */}\r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid> \r\n\r\n                <Grid item>\r\n                    <div>\r\n                        {/* Component for handling data operations on the Turing Machine*/}\r\n                        <TuringControls\r\n                            dataList={this.state.dataList}\r\n                            addData={this.addData}\r\n                            removeData={this.removeData}\r\n\r\n                            scriptList={this.state.scriptList}\r\n                            currentScript={this.state.currentScript}\r\n                            setScript={this.setScript}\r\n\r\n                            stateList={this.state.stateList}\r\n                            addStates={this.addStates}\r\n                            removeStates={this.removeStates}\r\n\r\n                            moveList={this.state.moveList}\r\n                            instructions={this.state.instructions}\r\n                            addInstruction={this.addInstruction}\r\n                            removeInstruction={this.removeInstruction}\r\n                            setInstruction={this.setInstruction}\r\n                            \r\n                            endless10Setter={this.endless10Setter}\r\n                            incrementOneSetter={this.incrementOneSetter}\r\n                            genericSetter={this.genericSetter}\r\n\r\n                            setPlay={this.setPlay}\r\n                            play={this.state.play}\r\n                            startMachine={this.startMachine}\r\n                            \r\n                            error={this.state.error}\r\n                            setError={this.setError}/>\r\n                        \r\n                        <div style={{marginTop: '24px'}}></div>\r\n\r\n                        {/* Component for displaying references, and the like */}\r\n                        <Paper\r\n                            className={classes.controlPaper}\r\n                            elevation={7}>\r\n\r\n                            <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                                References\r\n                            </Typography>\r\n\r\n                            <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"hhttps://www.youtube.com/watch?v=dNRDvLACg5Q\">\r\n                                What is a Turing Machine?\r\n                            </Typography>\r\n                            <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.youtube.com/watch?v=gtRLmL70TH0\">\r\n                                Who is Alan Turing?\r\n                            </Typography>\r\n                        </Paper>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            </ErrorBoundary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(Turing)","import React from 'react'\r\n\r\n// Self-generated Turing Machine\r\nimport Turing from './turing/Turing'\r\n\r\nclass TuringView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Turing\r\n                light={this.props.light}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TuringView","import React from 'react'\r\n\r\n// Material UI components\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Stop from '@material-ui/icons/Stop'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n// Material UI styling\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    }\r\n})\r\n\r\nclass SortControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scriptMenu: false,\r\n            selection: \"\"\r\n        }\r\n    }\r\n\r\n    // Handles toggle of script menu\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n\r\n                {/*Button for Playing simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.currentScript === \"Bubble\" ? this.props.bubbleSort(): \r\n                        this.props.currentScript === \"Insertion\" ? this.props.insertionSort(): \r\n                        this.props.currentScript === \"Selection\" ? this.props.selectionSort():\r\n                        this.props.currentScript === \"Quick\" ? this.props.quickSort():\r\n                        console.log(\"No script selected\")\r\n                        \r\n                        this.props.setPlay()\r\n                    }}\r\n\r\n                    disabled={this.props.play}>\r\n\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/*Button for stopping simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    disabled={!this.props.play}\r\n                    onClick={ () => {\r\n                        this.props.stopLoop()\r\n                        this.props.setPlay()\r\n                    }}>\r\n                    <ToolTip title = \"Stop\">\r\n                        <Stop/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                \r\n                {/*Button for resetting simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\" \r\n                    className={classes.button}\r\n                    disabled={this.props.play}\r\n                    onClick={this.props.shuffleBarChart}>\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/*Button for selecting simulations*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}\r\n                    disabled={this.props.play}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n\r\n                </Button>\r\n\r\n                {/*Dialog pop-up for selecting simulation simulations*/}\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scripts.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text + \" Sort\"}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Button\r\n                            className={classes.button}\r\n                            onClick={this.scriptMenuOpen}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <Typography\r\n                                color=\"secondary\">\r\n                                    Confirm\r\n                                </Typography>\r\n                        </Button>\r\n                </Dialog>\r\n\r\n                {/*Text field for setting simulation speed*/}\r\n                <TextField\r\n                    id=\"speed\"\r\n                    label=\"Set Interval\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.speed}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => this.props.setSpeed(event.target.value)}\r\n                    disabled={this.props.play}\r\n                    helperText=\"The smaller, the quicker!\">\r\n                </TextField>\r\n\r\n                 {/*Text field for setting simulation speed*/}\r\n                <TextField\r\n                    id=\"dataSize\"\r\n                    label=\"Set Data Size\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.dataSize}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    disabled={this.props.play}\r\n                    onChange={(event) => this.props.setDataSize(event.target.value)}\r\n                    helperText=\"Reset after changing value!\">\r\n                </TextField>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortControls)","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport javascript from 'brace/mode/javascript'\r\n\r\n// Material UI components\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        // States for storing static source code\r\n        this.state = {\r\n\r\nbubbleValue:\r\n`// Bubble Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/bubble-sort/\r\nfunction bubbleSort(arrayOfValues) {    \r\n    // For each value in the arrayOfValues...\r\n    for (var i = 0; i < arrayOfValues.length; ++i) {\r\n\r\n        // Consider only the unsorted arrayOfValues.length - i values\r\n        for (var j = 0; j < arrayOfValues.length - i; ++j) {\r\n            \r\n            // If current value greater than the next value, then swap the two\r\n            if (arrayOfValues[j] > arrayOfValues[j + 1]) {\r\n                \r\n                swap(arrayOfValues[j], arrayOfValues[j + 1]);\r\n            }\r\n        }\r\n    }\r\n}`,\r\n\r\ninsertionValue:\r\n`// Insertion Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/insertion-sort/\r\nfunction insertionSort(arrayOfValues) {\r\n\r\n    // For each value, set it as a key\r\n    var currentKey;\r\n    for (var i = 0; i < arrayOfValues; ++i) {\r\n        \r\n        currentKey = arrayOfValues[i];\r\n        var j = i - 1;\r\n\r\n        // Elements that are greater than the key are pushed a position further\r\n\r\n        while (j >= 0 && arrayOfValues[j] > currentKey) {\r\n            \r\n            arrayOfValues[j + 1] = arrayOfValues[j];\r\n            \r\n            --j;\r\n        }\r\n        arrayOfValues[j + 1] = currentKey;\r\n    }\r\n}\r\n`,\r\n\r\nquickValue:\r\n`// Quick Sort: Time Complexity of O(n log n)\r\n// Source: https://www.geeksforgeeks.org/quick-sort/\r\n\r\nfunction partition(arrayOfValues, low, high) {\r\n    var pivot = arrayOfValues[high];\r\n    \r\n    // Set the index of the smaller value\r\n    var i = low - 1;\r\n    \r\n    // If the current value is smaller than or equal to the pivot,\r\n    // The index is increased, and the two are swapped\r\n    for (var j = low; j <= high - 1; ++j) {\r\n\r\n        if (arrayOfValues[j] <= pivot) {\r\n            ++i;\r\n            swap(arrayOfValues[i], arrayOfValues[j]);\r\n        }\r\n    }\r\n\r\n    swap(arrayOfValues[i + 1], arrayOfValues[high])\r\n}\r\n\r\nfunction quickSort(arrayOfValues, low, high) {\r\n    // Uses recursion to solve the problem!\r\n\r\n    // Set pi to partition the array\r\n    var pi = partition(arrayOfValues, low, high);\r\n\r\n    // Recursively sort separated elements\r\n    quickSort(arrayOfValues, low, pi - 1);\r\n    quickSort(arrayOfValues, pi + 1, high);\r\n}`,\r\n\r\nselectionValue:\r\n`// Selection Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/selection-sort/\r\nfunction selectionSort(arrayOfValues) {\r\n\r\n    // For each value in the array\r\n    for (var i = 0; i < arrayOfValues.length; ++i) {\r\n        \r\n        // Find the smallest smallest value by comparison\r\n        var minId = i;\r\n\r\n        for (var j = i + 1; j < n; ++j) {\r\n            if (arrayOfValues[j] < arrayOfValues[minId]) {\r\n                minId = j;\r\n            }\r\n        }\r\n\r\n        // Swap the smallest element with the initial element\r\n        swap(arrayOfValues[minId], arrayOfValues[i]);\r\n    }\r\n    \r\n}`,\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        // Instance of Ace Editor for displaying static source code\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    mode=\"javascript\"\r\n                    fontSize={15}\r\n                    tabSize={4}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    value={ \r\n                        (   this.props.currentScript === \"Bubble\" ? this.state.bubbleValue : \r\n                            this.props.currentScript === \"Insertion\" ? this.state.insertionValue:\r\n                            this.props.currentScript === \"Quick\" ? this.state.quickValue: \r\n                            this.props.currentScript === \"Selection\" ? this.state.selectionValue:\r\n                            \"// No Script selected\"\r\n                        )}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","// Inspired by ...\r\n// https://bl.ocks.org/alexmacy/770f14e11594623320db1270361331dc\r\n// http://macr.ae/article/sorting-algorithms.html\r\n// http://bl.ocks.org/andrewringler/3809399\r\n\r\nimport React from 'react'\r\n\r\n// D3 is used as the primary animation engine\r\nimport * as d3 from 'd3'\r\n\r\n// Material UI Components\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// Self-generated\r\nimport SortControls from './SortControls'\r\nimport CodeView from './CodeView'\r\nimport cssStyles from './SortD3.css'\r\n\r\n// Styling specifications for the Material UI components\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    codeView: {\r\n        width: 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass SortD3 extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataSize: 10,\r\n            play: false,\r\n            speed: 250,\r\n            currentScript: \"Bubble\",\r\n            // States for rendering sample simulations\r\n            scripts: [\"Bubble\", \"Insertion\", \"Quick\", \"Selection\"]\r\n        }\r\n\r\n        // Randomly initialise dataset \r\n        this.state.data = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n        this.setScript = this.setScript.bind(this)\r\n    }\r\n\r\n    // Initialise a bar chart when the page is opened\r\n    componentDidMount(){\r\n        this.initBarChart(this.state.data.slice())\r\n    }\r\n\r\n    /*Common-use variables*/\r\n        loop = []\r\n        xScale = []\r\n        yScale = []\r\n    /*-------------------*/\r\n    \r\n    // Setter for determining bar chart portal dimensions\r\n    setScales = (data) => {\r\n        this.yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(data)])\r\n            .range([0, this.props.height - 20])\r\n        \r\n        this.xScale = d3.scaleBand()\r\n            .domain(d3.range(0, data.length))\r\n            .range([0, this.props.width])\r\n            .paddingInner(0.2)\r\n    }\r\n\r\n    // Function to stop a manually-started setInterval() operation\r\n    stopLoop = () => {\r\n        // Stop the setInterval() loop invoked to run the simulation\r\n        clearInterval(this.loop)\r\n        // Reset the loop variable for future use\r\n        this.loop = {}\r\n        // Reset bar chart coloring to its original state\r\n        d3.select('.barChart').selectAll('rect').attr(\"class\", \"\")\r\n    }\r\n\r\n    // Setter for the Play button\r\n    setPlay = () => {\r\n        this.setState({play: !this.state.play})\r\n    }\r\n\r\n    // Setter for changing scripts\r\n    setScript = (newScript) => {\r\n        this.setState({currentScript: newScript})\r\n        console.log(this.state.currentScript)\r\n    }\r\n    \r\n    // Setter for changing dataset size\r\n    setDataSize = (newDataSize) => {\r\n        this.setState({dataSize: newDataSize})\r\n        console.log(this.state.dataSize)\r\n    }\r\n    \r\n    // Setter for changing simulation speed\r\n    setSpeed = (newSpeed) => {\r\n        this.setState({speed: newSpeed})\r\n        console.log(this.state.speed)\r\n    }\r\n\r\n    // Initialise a bar chart on page load\r\n    initBarChart = (initData) => {\r\n        // Determine chart dimensions\r\n        this.setScales(initData)\r\n\r\n        // Select the target SVG file, and draw rectangles with transition effects\r\n        d3.select('.barChart').selectAll('rect').data(initData).enter().append('rect')\r\n\r\n            .attr(\"x\", (d,i) => this.xScale(i))            \r\n            .attr('y', (d,i) => this.props.height - this.yScale(d))\r\n            .attr(\"width\", this.xScale.bandwidth())\r\n            \r\n            .transition()\r\n            .duration(this.state.speed)\r\n            \r\n            .attr(\"height\", (d,i) => this.yScale(d))\r\n            .attr(\"id\", (d, i) => \"rect-\" + i)\r\n        \r\n        // Append text indicating data value\r\n        d3.select('.barChart').selectAll('text').data(initData).enter().append('text')\r\n            .attr(\"x\", (d,i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            .attr('y', (d,i) => this.props.height - this.yScale(d) - 20)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"opacity\", 0.7)\r\n            .attr(\"id\", (d, i) => \"label-\" + i)\r\n            .text((d) => {return d})\r\n        \r\n        // Set state to reflect changed data\r\n        this.setState({data: initData})\r\n    }\r\n\r\n    // Function for randomising and generating new datasets\r\n    shuffleBarChart = () => {\r\n\r\n        // Prevents any data points from having a value of 0\r\n        const randomData = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n\r\n        this.setScales(randomData)\r\n\r\n        // Remove the existing bar chart\r\n        d3.select('.barChart').selectAll('rect').remove()\r\n        d3.select('.barChart').selectAll('text').remove()\r\n\r\n        // Initialise a new one in its place\r\n        this.initBarChart(randomData)\r\n    }\r\n\r\n    // Bubble Sort animation\r\n    bubbleSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n        let currentPos = 0\r\n        let iteration = 0\r\n\r\n        // Bubble Sort implementation\r\n        const bubbleSortLoop = () => {\r\n            if (iteration >= currentData.length - 1) {\r\n                return\r\n            }\r\n\r\n            if (currentPos === currentData.length - 1 - iteration) {\r\n                currentPos = 0\r\n                ++iteration\r\n            }\r\n        \r\n            if (currentData[currentPos] > currentData[currentPos + 1]) {\r\n                [currentData[currentPos], currentData[currentPos + 1]] = [currentData[currentPos + 1], currentData[currentPos]]\r\n            }\r\n        \r\n            ++currentPos\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n            \r\n            bubbleSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeBubble', (d, i) => i === currentPos || i + 1 === currentPos)\r\n                .classed('completedBubble', (d, i) => i >= currentData.length - iteration)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        \r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    insertionSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let currentPos = 1\r\n        let complete = 1\r\n\r\n        let resetTest = false\r\n\r\n        // Insertion Sort implementation\r\n        const insertionSortLoop = () => {\r\n            \r\n            if (resetTest || currentPos === 0) {\r\n                currentPos = complete\r\n                resetTest = false\r\n            }\r\n\r\n            if (complete > currentData.length) {\r\n                return\r\n            }\r\n                    \r\n            if (currentData[currentPos] < currentData[currentPos - 1]) {\r\n                [currentData[currentPos], currentData[currentPos - 1]] = [currentData[currentPos - 1], currentData[currentPos]]\r\n            } \r\n        \r\n            else {\r\n                resetTest = true\r\n            }\r\n        \r\n            if (currentPos === complete) {\r\n                ++complete\r\n            }\r\n            --currentPos\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n\r\n            insertionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeInsertion', (d, i) => complete <= currentData.length && (i === currentPos + 1 || i === currentPos))\r\n                .classed('completedInsertion', (d, i) => i < complete)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    selectionSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n\r\n        let sorted = 0\r\n        let currentPos = 0\r\n        let min = 0\r\n        let reset = false\r\n\r\n        // Selection Sort implementation\r\n        const selectionSortLoop = () => {\r\n\r\n            if (sorted === currentData.length) {\r\n                return\r\n            }\r\n            \r\n            if (reset) {\r\n                reset = false\r\n                min = currentPos = sorted\r\n            }\r\n            \r\n            ++currentPos\r\n            \r\n            if (currentData[currentPos] < currentData[min]) {\r\n                min = currentPos\r\n            }\r\n            \r\n            if (currentPos === currentData.length - 1) {\r\n                [currentData[sorted], currentData[min]] = [currentData[min], currentData[sorted]]\r\n                \r\n                ++sorted\r\n                reset = true\r\n            }\r\n\r\n            if (sorted === currentData.length - 1) {\r\n                ++sorted\r\n            }\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n\r\n            selectionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeSelection', (d, i) => sorted !== currentData.length && (i === currentPos || i === min))\r\n                .classed('completedSelection', (d, i) => i < sorted)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    quickSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let toSort = [[0, currentData.length - 1]]\r\n        let sorting\r\n        let pivot\r\n\r\n        let l, r\r\n\r\n        // Quick Sort implementation\r\n        const quickSortLoop = () => {\r\n            if (!sorting) {\r\n                if (!toSort.length) {\r\n                    return\r\n                }\r\n                \r\n                sorting = toSort.shift()\r\n                pivot = sorting[0] + Math.floor((sorting[1] - sorting[0]) * Math.random())\r\n                \r\n                l = sorting[0]\r\n                r = sorting[1]\r\n            }\r\n        \r\n            if (l === r) {\r\n                if (pivot - 1 - sorting[0] > 0) {\r\n                    toSort.push([sorting[0], pivot - 1])\r\n                }\r\n                \r\n                if (sorting[1] - (pivot + 1) > 0) {\r\n                    toSort.push([pivot + 1, sorting[1]])\r\n                }\r\n            \r\n                l = r = sorting = pivot = undefined\r\n            \r\n                quickSortLoop()\r\n                return\r\n            }\r\n        \r\n            if (currentData[l] < currentData[pivot]) {\r\n                ++l\r\n                return\r\n            }\r\n        \r\n            if (currentData[r] > currentData[pivot]) {\r\n                --r\r\n                return\r\n            }\r\n        \r\n            [currentData[l], currentData[r]] = [currentData[r], currentData[l]]\r\n        \r\n            if (pivot === l) {\r\n\r\n                pivot = r\r\n            } \r\n            \r\n            else if (pivot === r) {\r\n                pivot = l\r\n            }\r\n        }\r\n\r\n        this.loop = setInterval( () => {\r\n            quickSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeQuick', (d, i) => sorting && (i >= sorting[0] && i <= sorting[1]))\r\n                .classed('pivotQuick', (d, i) => i === pivot)\r\n                .classed('highlightQuick', (d, i) => i === r || i === l)\r\n                .classed('completedQuick', (d, i) => isCompleted(i))\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            }, this.state.speed)\r\n\r\n            function isCompleted(i) {\r\n\r\n                if (!sorting && !toSort.length) {\r\n                    return true\r\n                }\r\n\r\n                return [sorting].concat(toSort).every(([l, r]) => i < l || r < i)\r\n            }\r\n\r\n            this.setState({data: currentData})\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n\r\n                {/*Component housing target SVG file*/}\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.simView}\r\n                        elevation={7}>\r\n\r\n                        <svg\r\n                            width  = {this.props.width}\r\n                            height = {this.props.height}>\r\n\r\n                            <g className=\"barChart\"/>\r\n                    \r\n                        </svg>\r\n                    \r\n                        <Divider/>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Component for posting source code*/}\r\n                <Grid item>\r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid>\r\n\r\n                {/* Component for handling simulation controls*/}\r\n                <Grid item>\r\n                    <SortControls\r\n                        stopLoop={this.stopLoop}\r\n                        shuffleBarChart={this.shuffleBarChart}\r\n                        \r\n                        play={this.state.play}\r\n                        setPlay={this.setPlay}\r\n\r\n                        speed={this.state.speed}\r\n                        dataSize={this.state.dataSize}\r\n                        setSpeed={this.setSpeed}\r\n                        setDataSize={this.setDataSize}\r\n\r\n                        bubbleSort={this.bubbleSort}\r\n                        insertionSort={this.insertionSort}\r\n                        mergeSort={this.mergeSort}\r\n                        selectionSort={this.selectionSort}\r\n                        quickSort={this.quickSort}\r\n\r\n\r\n                        scripts={this.state.scripts}\r\n                        currentScript={this.state.currentScript}\r\n                        setScript={this.setScript}/>\r\n                </Grid>\r\n\r\n                {/* Component for handling references*/}\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.controlPaper}\r\n                        elevation={7}>\r\n\r\n                        <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                            References\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\">\r\n                            Visualisations of some sorting algorithms\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.geeksforgeeks.org/understanding-time-complexity-simple-examples/\">\r\n                            What is a \"Time Complexity\"?\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.w3resource.com/c-programming-exercises/searching-and-sorting/index.php\">\r\n                            Implement your own!\r\n                        </Typography>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortD3)","import React from 'react'\r\n\r\n// Self-generated Sorting Simulator\r\nimport SortD3 from './sorting/SortD3'\r\nclass SortingView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            // States for setting SVG dimensions in simulation component\r\n            svgWidth      : 550,\r\n            svgHeight     : 480,\r\n        }\r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <SortD3\r\n                width={this.state.svgWidth}\r\n                height={this.state.svgHeight}\r\n                light={this.props.light}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SortingView","import React from 'react'\r\n\r\n// Component for the stylised title on the landing page\r\nimport Typist from 'react-typist'\r\nimport './mainPage/MainPage.scss'\r\n\r\n// Component for routing\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Material UI Components\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        align: 'center'\r\n    },\r\n})\r\n\r\n// Code based on boilerplate provided by the author of \"react-typist\"\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            typingDone: false\r\n        }\r\n    }\r\n\r\n    typingDone = () => {\r\n        this.setState({typingDone: !this.state.typingDone})\r\n        console.log(\" DONE\")\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={40}>\r\n            <Grid item><div style={{marginTop: '240px'}}></div></Grid>\r\n            <Grid item>\r\n                <Typist\r\n                    className=\"Typist-header\"\r\n                    avgTypingSpeed={40}\r\n                    startDelay={1000}\r\n                    onTypingDone={this.typingDone}>\r\n\r\n                    <span>Learnt</span>\r\n\r\n                    <Typist.Backspace count={1} delay={700}/>\r\n                \r\n                    <Typist.Delay ms={250}/>\r\n                    <span>+</span>\r\n                </Typist>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                    <Button color=\"primary\" variant=\"contained\" component={Link} to=\"/turing_machine\">\r\n                        <Typography color=\"secondary\">Click to Begin</Typography>\r\n                    </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(MainPage)","import React from 'react'\r\n\r\n// Self-generated components\r\nimport AppDrawer from './AppDrawer/AppDrawer'\r\nimport TuringView from './MainViews/TuringView'\r\n// import VonNeumannView from './MainViews/VonNeumannView'\r\nimport SortingView from './MainViews/SortingView'\r\nimport MainPage from './MainViews/MainPage'\r\n\r\n// Material UI Components\r\nimport { MuiThemeProvider, createMuiTheme, withStyles} from '@material-ui/core/styles'\r\n\r\n// Base Theme settings\r\nimport {lightTheme, darkTheme} from './themes'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\n// Light and Dark theme assets\r\nconst lTheme = createMuiTheme(lightTheme)\r\nconst dTheme = createMuiTheme(darkTheme)\r\n\r\n// Material UI styling assets\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass App extends React.Component {\r\n    // Constructor for the Base App\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // Prop for handling changes from Light theme to Dark theme, and vice versa\r\n            light: true,            \r\n            // Prop for list of pages\r\n            modes: [\"Turing Machine\", \"Sorting Algorithms\"],\r\n\r\n            //\"von Neumann Architecture\", \r\n        }\r\n        // Bind handler to the App Component\r\n        this.handleLightChange = this.handleLightChange.bind(this)\r\n    }\r\n\r\n    // Handles change of theme from Light Mode to Dark Mode\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}))\r\n        console.log(\"Light: \" + this.state.light)\r\n    }\r\n\r\n    // Getter for \"Lght\" setting saved in LocalStorage\r\n    componentWillMount(){\r\n        localStorage.getItem('light') && this.setState({\r\n            light: JSON.parse(localStorage.getItem('light')),\r\n        })        \r\n    }\r\n\r\n    // Getter for saving \"Light\" setting in LocalStorage\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('light', JSON.stringify(nextState.light))\r\n    }\r\n    \r\n    render() {    \r\n        const {classes} = this.props\r\n        return (\r\n            <div className = {classes.root}>\r\n\r\n                {/* Material UI Theming Component*/}\r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n\r\n                    {/* App Drawer Component*/}\r\n                    <AppDrawer\r\n                        handleLightChange={this.handleLightChange} \r\n                        light={this.state.light} \r\n                        modes={this.state.modes}\r\n                    /> \r\n\r\n                    <div style={{marginTop: '90px'}}></div>\r\n                    {/* Switch Component for hyperlinks*/}\r\n                    <Switch>\r\n                        \r\n                        <Route exact path=\"/sorting_algorithms\" render={() =>                        \r\n                            <SortingView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n\r\n                        <Route exact path=\"/turing_machine\" render={() => \r\n                            <TuringView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n                        \r\n                        {/* <Route exact path=\"/von_neumann_architecture\" render={() => \r\n                            <VonNeumannView/>\r\n                        }/> */}\r\n\r\n                        <Route exact path=\"/\" render={() => \r\n                            <MainPage/>\r\n                        }/>\r\n                    </Switch>\r\n                </MuiThemeProvider>\r\n            </div>             \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App)","const darkTheme = {\r\n    palette: {\r\n        type: 'dark',\r\n\r\n        primary: {\r\n            main: '#045a6d',\r\n        },\r\n        secondary: {\r\n            main: \"#afe2f7\",\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    },\r\n}\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#afe2f7',\r\n        },\r\n        secondary: {\r\n            main: '#045a6d',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\n\r\nexport {lightTheme, darkTheme};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter basename=\"/\">\r\n        <App/>\r\n    </HashRouter>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}