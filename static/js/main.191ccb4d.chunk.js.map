{"version":3,"sources":["components/AppDrawer/assets/LightSwitch.js","components/AppDrawer/AppDrawer.js","components/MainViews/turing/TuringControls.js","components/MainViews/turing/CodeView.js","components/MainViews/turing/TuringTape.js","components/MainViews/turing/ErrorBoundary.js","components/MainViews/turing/Turing.js","components/MainViews/TuringView.js","components/MainViews/sorting/SortControls.js","components/MainViews/sorting/CodeView.js","components/MainViews/sorting/SortD3.js","components/MainViews/SortingView.js","components/MainViews/MainPage.js","components/App.js","components/themes.js","index.js"],"names":["LightSwitch","props","state","snackbar","classes","this","title","placement","color","className","lights","onClick","handleLightChange","aria-label","light","React","Component","withStyles","theme","margin","spacing","unit","withTheme","AppDrawer","handleMenuOpen","setState","drawer","handleAboutOpen","about","modes","appDrawer","MenuList","subheader","ListSubheader","component","Divider","map","text","index","MenuItem","menuItem","button","key","Link","to","replace","toLowerCase","ListItemText","primary","Collapse","in","timeout","unmountOnExit","nestedItem","target","href","inset","root","CssBaseline","appBar","menuButton","Typography","variant","noWrap","typography","smUp","implementation","SwipeableDrawer","container","anchor","open","onOpen","onClose","compose","display","marginRight","marginLeft","flexGrow","align","settingsIcon","paddingLeft","backgroundColor","palette","main","common","white","breakpoints","up","width","flexShrink","withRouter","TuringControls","scriptMenuOpen","scriptMenu","stateMenuOpen","stateMenu","instructionsMenuOpen","instructionsMenu","Paper","controlPaper","elevation","startMachine","disabled","play","setPlay","setError","currentScript","endless10Setter","incrementOneSetter","genericSetter","console","log","Button","Dialog","dialog","FormControl","formControl","RadioGroup","name","radio","value","onChange","event","setScript","scriptList","FormControlLabel","control","Radio","label","scroll","stateList","ListItem","addStates","length","removeStates","instructions","object","id","InputLabel","shrink","Select","setInstruction","input","Input","ifRead","dataList","write","goTo","moveTape","moveList","addInstruction","removeInstruction","error","padding","textField","statePaper","CodeView","endlessValue","incrementValue","pingPongValue","height","wrapEnabled","onLoad","fontSize","highlightActiveLine","editorProps","$blockScrolling","Infinity","readOnly","freeModeValue","setAutoScrollEditorIntoView","setUseWrapMode","indentedSoftWrap","TuringTape","tapePaper","tapeArray","tapePosition","changeCell","maxWidth","ErrorBoundary","info","children","Turing","tempStates","slice","push","pop","newScript","tempInstructions","newObject","cellId","tempTape","startState","currentState","tempNextState","find","instruction","undefined","Error","newTapeArray","newTapePosition","concat","editor","bind","Grid","direction","justify","alignItems","item","addData","removeData","style","marginTop","gutterBottom","TuringView","SortControls","selection","bubbleSort","insertionSort","selectionSort","quickSort","stopLoop","shuffleBarChart","scripts","TextField","type","InputLabelProps","speed","setSpeed","helperText","dataSize","setDataSize","simView","bubbleValue","insertionValue","quickValue","selectionValue","tabSize","SortD3","loop","xScale","yScale","setScales","data","d3","domain","range","paddingInner","clearInterval","selectAll","attr","newDataSize","newSpeed","initBarChart","initData","enter","append","d","i","bandwidth","transition","duration","randomData","values","remove","currentData","currentPos","iteration","setInterval","bubbleSortLoop","classed","complete","resetTest","insertionSortLoop","sorted","min","reset","selectionSortLoop","sorting","pivot","l","r","toSort","quickSortLoop","shift","Math","floor","random","every","isCompleted","mergeSort","codeView","SortingView","svgWidth","svgHeight","MainPage","typingDone","avgTypingSpeed","startDelay","onTypingDone","Backspace","count","delay","Delay","ms","lTheme","createMuiTheme","secondary","useNextVariants","dTheme","App","localStorage","getItem","JSON","parse","nextProps","nextState","setItem","stringify","exact","path","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.191ccb4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport LightOn from '@material-ui/icons/WbSunny';\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined';\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst styles = theme => ({\r\n    lights: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  })\r\n\r\nclass LightSwitch extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          snackbar: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ToolTip title=\"Toggle Lights\" placement='bottom'>\r\n            <IconButton color=\"secondary\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n              {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n            </IconButton>\r\n          </ToolTip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LightSwitch);","import React from 'react'\r\n\r\n//Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton'\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\n// Component for grouping multiple export types together\r\nimport {compose} from 'recompose'\r\n\r\n// Component for handling Light/Dark theme changes\r\nimport LightSwitch from './assets/LightSwitch'\r\n\r\n// Components for Routing\r\nimport {Link, withRouter} from 'react-router-dom'\r\n\r\n// Github logo for About Section\r\nimport { GoMarkGithub } from 'react-icons/go'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  \r\n    menuButton: {\r\n      marginRight: 20,\r\n      marginLeft: -12,\r\n    },\r\n  \r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n  \r\n    typography: {\r\n      marginRight: 20,\r\n      flexGrow: 1,\r\n      align: \"center\",\r\n    },\r\n  \r\n    settingsIcon: {\r\n      marginRight: -12\r\n    },\r\n\r\n    nestedItem: {\r\n      paddingLeft: theme.spacing.unit,\r\n    },\r\n\r\n    menuItem: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& $primary, & $icon': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  \r\n    appDrawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      }\r\n    },\r\n  })\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      // State for toggling the Side menu\r\n      drawer: false,\r\n      // State for generating list of Side menu buttons\r\n      modes: this.props.modes,\r\n      // State for toggling About section\r\n      about: false,\r\n    }\r\n  }\r\n\r\n  // State handlers\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n  }\r\n\r\n  handleAboutOpen = () => {\r\n    this.setState(state => ({about: !this.state.about}))\r\n  }\r\n\r\n  render(){\r\n    const {classes, modes} = this.props\r\n    \r\n    // Pre-defined App Drawer, courtesy of Material UI\r\n    const appDrawer = (\r\n      <div>\r\n        <div className={classes.appDrawer}>\r\n          <MenuList subheader={<ListSubheader component=\"div\" >Learn+</ListSubheader>}>\r\n\r\n            <Divider/>\r\n\r\n            {/*Code block for mapping mode props to Menu Item names*/}\r\n            \r\n            {modes.map((text, index) => (\r\n\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                button key = {text}\r\n                onClick={() => {\r\n                  this.handleMenuOpen()\r\n                }} \r\n                component={Link} \r\n                to={text.replace(/\\s/g,'_').toLowerCase()}>\r\n\r\n                  <ListItemText primary={text}/>\r\n              \r\n              </MenuItem>\r\n            ))}\r\n\r\n          </MenuList>\r\n          \r\n          <Divider/>\r\n          \r\n          <MenuList>\r\n            <MenuItem\r\n                className={classes.menuItem}\r\n                button\r\n                onClick={() => {this.handleAboutOpen()}}>\r\n                \r\n                  <ListItemText primary=\"About\"/>\r\n                  \r\n                  {this.state.about ? <ExpandLess /> : <ExpandMore />}\r\n              \r\n              </MenuItem>\r\n\r\n            <Collapse in={this.state.about} timeout=\"auto\" unmountOnExit>\r\n              <MenuList>\r\n                <MenuItem\r\n                  className={classes.nestedItem}\r\n                  component=\"a\" target=\"_blank\" href=\"https://github.com/TheConMiz/fyp18053\">\r\n                    <GoMarkGithub/>\r\n                    <ListItemText primary=\"View Repository\" inset></ListItemText>\r\n                </MenuItem>\r\n              </MenuList>\r\n          </Collapse>\r\n          </MenuList>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" placement = 'bottom'>\r\n              <div>\r\n                <IconButton color=\"secondary\" className={classes.menuButton} onClick={this.handleMenuOpen}>\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n              </div>\r\n            </ToolTip>\r\n\r\n            <Typography variant=\"h6\" color=\"secondary\" noWrap className={classes.typography}>\r\n              Learn+\r\n            </Typography>\r\n\r\n            <LightSwitch light={this.props.light} handleLightChange={this.props.handleLightChange}/>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withStyles(styles, {withTheme: true}),\r\n  withRouter\r\n) (AppDrawer)","import React, { Fragment } from 'react'\r\n\r\n// Material UI components\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport Input from '@material-ui/core/Input'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\n// Material UI styling assets\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    },\r\n    statePaper: {\r\n        width: 570,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass TuringControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            scriptMenu: false,\r\n            stateMenu: false,\r\n            instructionsMenu: false,\r\n        }\r\n    }\r\n\r\n    // Menu toggles\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n    stateMenuOpen = () => {\r\n        this.setState({stateMenu: !this.state.stateMenu})\r\n    }\r\n    instructionsMenuOpen = () => {\r\n        this.setState({instructionsMenu: !this.state.instructionsMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n                {/* Button for running one iteration of the Turing Machine*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.startMachine()\r\n                    }}\r\n                    disabled={this.props.play}>\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/* Button for resetting the Turing Machine, in case of errors*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={()=> {\r\n                        this.props.setPlay(false)\r\n                        this.props.setError(false)\r\n                        this.props.currentScript === \"Endless 1/0s\" ? this.props.endless10Setter():\r\n                        this.props.currentScript === \"Increment by 1\" ? this.props.incrementOneSetter():\r\n                        this.props.currentScript === \"Ping-Pong\" ? this.props.genericSetter(): console.log(\"Nothing to set\")\r\n                    }}>\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                {/* Button for selecting script*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Button for selecting and changing states*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.stateMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Machine States\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Button for changing instructions*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.instructionsMenuOpen}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Instructions\r\n                    </Typography>\r\n                </Button>\r\n\r\n                {/* Forms for performing data operations on the machine*/}\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scriptList.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.scriptMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.stateMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    States\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.stateList.map((text, index) => (\r\n                                <ListItem  key={text}>\r\n                                    <ListItemText primary={text}/>\r\n                                </ListItem>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.stateList.length===1}\r\n                        onClick={this.props.removeStates}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove State\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.stateMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.state.instructionsMenu}\r\n                    className={classes.dialog}\r\n                    scroll=\"body\">\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Instructions\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n\r\n                            {this.props.instructions.map((object, id) => (\r\n                                <Fragment  key={id}>\r\n                                    <Typography\r\n                                        className={classes.typography} \r\n                                        variant=\"h6\"\r\n                                        color=\"secondary\"\r\n                                        align=\"center\">\r\n                                            Instruction {id}\r\n                                    </Typography>\r\n                                    \r\n                                    <FormControl\r\n                                      \r\n                                        className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            State\r\n                                        </InputLabel>\r\n\r\n                                        <Select\r\n                                            value={object.state}\r\n                                            onChange={(event) => {\r\n                                                object.state = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"state\" id=\"state\" />}\r\n                                            >\r\n\r\n                                        {this.props.stateList.map((text, id) => (\r\n                                            <MenuItem key={id} value={text}>\r\n                                                {text}\r\n                                            </MenuItem>\r\n                                        ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl} >\r\n                                        <InputLabel shrink>\r\n                                            If Read\r\n                                        </InputLabel>\r\n                                            \r\n                                        <Select\r\n                                            value={object.ifRead}\r\n                                            onChange={(event) => {\r\n                                                object.ifRead = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"ifRead\" id=\"ifRead\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Write\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.write}\r\n                                            onChange={(event) => {\r\n                                                object.write = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"write\" id=\"write\" />}\r\n                                            >\r\n\r\n                                            {this.props.dataList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel shrink>\r\n                                            Next State\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.goTo}\r\n                                            onChange={(event) => {\r\n                                                object.goTo = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"nextState\" id=\"nextState\" />}\r\n                                            >\r\n\r\n                                            {this.props.stateList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl\r\n                                        className={classes.formControl}\r\n                                        >\r\n                                        <InputLabel shrink>\r\n                                            Tape Move\r\n                                        </InputLabel>\r\n                                        \r\n                                        <Select\r\n                                            value={object.moveTape}\r\n                                            onChange={(event) => {\r\n                                                object.moveTape = event.target.value\r\n                                                this.props.setInstruction(object, id)}}\r\n                                            input={<Input name=\"tapeMove\" id=\"tapeMove\" />}\r\n                                            >\r\n\r\n                                            {this.props.moveList.map((text, id) => (\r\n                                                <MenuItem key={id} value={text}>\r\n                                                    {text}\r\n                                                </MenuItem>\r\n                                            ))}\r\n\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </FormControl>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.addInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Add Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={this.props.instructions.length===1}\r\n                        onClick={this.props.removeInstruction}>\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Remove Instruction\r\n                            </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={this.instructionsMenuOpen}\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        <Typography\r\n                            color=\"secondary\">\r\n                                Confirm\r\n                            </Typography>\r\n                    </Button>\r\n                </Dialog>\r\n\r\n                {/* Code ofr handling error messages*/}\r\n                {this.props.error ? \r\n                    <Typography \r\n                        className={classes.typography} \r\n                        color=\"secondary\" \r\n                        variant=\"h7\">\r\n                            Possible Error: Check the instructions, and click Reset\r\n                        </Typography>: \"\"}\r\n                \r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringControls)","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\n// import solarized_dark from 'brace/theme/solarized_dark'\r\n// import github from 'brace/theme/github'\r\n// import javascript from 'brace/mode/javascript'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            // States for showing static hints on how to use the Turing Machine\r\n\r\nendlessValue: \r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Endless Ones and Zeroes\r\n// The first Turing Machine, devised by Alan Turing himself.`,\r\n\r\nincrementValue:\r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Increment by 1\r\n// A simple script that increases the binary value by 1. Try to adapt it for\r\n// datasets with gaps in them.`,\r\npingPongValue:\r\n`/*Ground Rules\r\n    Select any of the predefined scripts to play with.\r\n    Click the buttons below and explore the Turing Machine's functionality.\r\n    Click the cells above to set their values. \r\n    If a script does not work as expected, do not panic!\r\n    Perhaps, the instructions are not as well-defined as required.\r\n    Simply reset the Machine, and try again!\r\n*/\r\n\r\n// Ping-Pong\r\n// The machine will run for as long as it is bracketed by 1s.\r\n// Try dealing with blank spots in the dataset!`,\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    // mode=\"javascript\"\r\n                    fontSize={18}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    value={ \r\n                        (   this.props.currentScript === \"Endless 1/0s\" ? this.state.endlessValue : \r\n                            this.props.currentScript === \"Increment by 1\" ? this.state.incrementValue:\r\n                            this.props.currentScript === \"Ping-Pong\" ? this.state.pingPongValue: \r\n                            this.state.freeModeValue\r\n                        )}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","import React from 'react'\r\nimport {withStyles} from '@material-ui/core/'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n    tapePaper: {\r\n        maxWidth: 900,\r\n        padding: theme.spacing.unit * 1.5,\r\n        flexGrow: 1\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        width: 10,\r\n        height: 50 \r\n    },\r\n})\r\n\r\n\r\nclass TuringTape extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    classes = this.props\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper className={classes.tapePaper}>\r\n                <Divider/>\r\n                {this.props.tapeArray.map((text, id) => (\r\n                    <Button\r\n                        className={classes.button}\r\n                        key={id}\r\n                        color={id === this.props.tapePosition ? \"primary\": \"secondary\"}\r\n                        variant=\"contained\"\r\n                        onClick={() => !this.props.play ? this.props.changeCell(id): console.log(\"Tape Locked\")}>\r\n                            {text === \"blank\" ? \"\" : text}\r\n                        </Button>\r\n                ))}\r\n                <Divider/>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TuringTape)","import React from 'react';\r\n\r\n// Boilerplate code for handling errors from the Turing Machine\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = { \r\n        error: null,\r\n        info: null\r\n      }\r\n    }\r\n  \r\n    componentDidCatch(error, info) {\r\n      this.setState({ error: error, info: info });\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.info) {\r\n        return(<div>Error. Refresh the Page!</div>)\r\n      }\r\n      \r\n      return this.props.children;\r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary","// Credits to http://turingmachine.io/\r\n// Credits to http://morphett.info/turing/\r\n// Credits tohttp://math.hws.edu/eck/js/turing-machine/TM.html\r\n\r\nimport React from 'react'\r\n\r\n// Material UI components\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TuringControls from './TuringControls'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n// Self-generated components\r\nimport CodeView from './CodeView'\r\nimport TuringTape from './TuringTape'\r\nimport ErrorBoundary from './ErrorBoundary'\r\n\r\nconst styles = theme => ({\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass Turing extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            // States for storing scripts, machine state, dataset, etc.\r\n            scriptList: [\"Endless 1/0s\", \"Increment by 1\", \"Ping-Pong\"],\r\n            currentScript: \"Endless 1/0s\",\r\n\r\n            moveList: [\"right\", \"left\", \"halt\"],\r\n\r\n            instructions: [],\r\n\r\n            dataList: [\"0\", \"1\", \"blank\"],\r\n\r\n            stateList: [\"q0\", \"q1\"],\r\n            startState: \"q0\",\r\n            \r\n            currentState: \"q0\",\r\n\r\n            tapeArray: [\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\"],\r\n            tapePosition: 4,\r\n            play: false,\r\n            editor: false,\r\n            error: false,\r\n\r\n        }\r\n        this.startMachine = this.startMachine.bind(this)\r\n    }\r\n\r\n    // Loads the endless1/0 script as the default on page load\r\n    componentDidMount(){\r\n        this.endless10Setter()\r\n    }\r\n\r\n    // Add states to the machine\r\n    addStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.push(\"q\" + tempStates.length)\r\n        this.setState({stateList: tempStates})\r\n        //console.log(this.state.stateList)\r\n    }\r\n\r\n    // Remove states from the machine. There will always be a minimum of 1 state\r\n    removeStates = () => {\r\n        let tempStates = this.state.stateList.slice()\r\n        tempStates.pop()\r\n        this.setState({stateList: tempStates})\r\n        //console.log(this.state.stateList)\r\n    }\r\n\r\n    // Setter for scripts\r\n    setScript = (newScript) => {\r\n        newScript === \"Endless 1/0s\" ? this.endless10Setter():\r\n        newScript === \"Increment by 1\" ? this.incrementOneSetter():\r\n        newScript === \"Ping-Pong\" ? this.genericSetter(): console.log(\"Nothing to set\")\r\n        this.setState({currentScript: newScript})\r\n    }\r\n\r\n    // Add instructions to the machine\r\n    addInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        let newInstruction={\r\n            \"state\": \"q0\",\r\n            \"ifRead\": \"blank\",\r\n            \"write\": \"0\",\r\n            \"goTo\": \"q0\",\r\n            \"moveTape\": \"right\"\r\n        }\r\n        \r\n        tempInstructions.push(newInstruction)   \r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    // Remove instructions from the machine\r\n    removeInstruction = () => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions.pop()\r\n        //console.log(tempInstructions)\r\n        this.setState({instructions: tempInstructions})\r\n    }\r\n\r\n    // Setter for instructions\r\n    setInstruction = (newObject, id) => {\r\n        let tempInstructions = this.state.instructions.slice()\r\n        tempInstructions[id] = newObject\r\n        this.setState({instructions: tempInstructions})\r\n\r\n    }\r\n\r\n    // Modify Tape cells based on their values\r\n    changeCell = (cellId) => {\r\n        //console.log(cellId)\r\n        let tempTape = this.state.tapeArray.slice()\r\n        \r\n        tempTape[cellId] === \"0\" ? tempTape[cellId] = \"1\" : \r\n        tempTape[cellId] === \"1\" ? tempTape[cellId] = \"blank\" :\r\n        tempTape[cellId] = \"0\"\r\n\r\n        this.setState({tapeArray: tempTape})\r\n    }\r\n\r\n    // Some utility setters\r\n    setPlay = (value) => {\r\n        this.setState({play: value})\r\n    }\r\n    setError = (value) => {\r\n        this.setState({error: value})\r\n    }\r\n\r\n    // Scripts containing instructions, states, etc.\r\n    endless10Setter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\", \"q3\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q2\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q2\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q3\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q3\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n        ]})     \r\n        this.setState({tapeArray: [\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\",\"blank\"]})\r\n\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 0})\r\n        this.setState({play: false})\r\n\r\n    }\r\n\r\n    incrementOneSetter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\", \"q2\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"blank\",\r\n                \"write\": \"blank\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q2\",\r\n                \"moveTape\": \"halt\"\r\n            },\r\n        ]})\r\n\r\n        this.setState({tapeArray: [\"blank\",\"blank\",\"blank\",\"1\",\"0\",\"1\",\"1\",\"blank\",\"blank\",\"blank\"]})\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 3})\r\n        this.setState({play: false})\r\n    }\r\n\r\n    genericSetter = () => {\r\n        this.setState({stateList: [\"q0\", \"q1\"]})\r\n        this.setState({instructions: [\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n            {\r\n                \"state\": \"q0\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"0\",\r\n                \"write\": \"0\",\r\n                \"goTo\": \"q1\",\r\n                \"moveTape\": \"left\"\r\n            },\r\n\r\n            {\r\n                \"state\": \"q1\",\r\n                \"ifRead\": \"1\",\r\n                \"write\": \"1\",\r\n                \"goTo\": \"q0\",\r\n                \"moveTape\": \"right\"\r\n            },\r\n        ]})\r\n\r\n        this.setState({tapeArray: [\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\"]})\r\n        this.setState({startState: \"q0\"})\r\n        this.setState({currentState: \"q0\"})\r\n        this.setState({tapePosition: 4})\r\n        this.setState({play: false})\r\n    }\r\n\r\n    // Function for running one iteration of the Turing Machine\r\n    startMachine = () => {\r\n\r\n        // Get starting state, and other required information\r\n        let tempInstructions = this.state.instructions.slice()\r\n        let tempNextState = tempInstructions.find(instruction => {\r\n            return (instruction.state === this.state.currentState && instruction.ifRead === this.state.tapeArray[this.state.tapePosition])\r\n        })\r\n        \r\n        // Code for handling possible errror\r\n        if(tempNextState === undefined){\r\n            this.setState({play: true})\r\n            this.setState({error: true})\r\n            throw new Error(\"Incomplete Instructions: Click Reset\")\r\n        }\r\n        if (tempNextState.moveTape === \"halt\"){\r\n            this.setState({play: true})\r\n            //console.log(\"HALT\")\r\n        }\r\n        \r\n        // Segment for handling changes made to the tape\r\n        let newTapeArray = this.state.tapeArray.slice()\r\n        newTapeArray[this.state.tapePosition] = tempNextState.write\r\n\r\n        let newTapePosition = this.state.tapePosition + (tempNextState.moveTape === \"left\" ? -1 : 1)\r\n\r\n        // Handle generation of additional tape to the left\r\n        if (newTapePosition < 0){\r\n            let tempTapeArray = [\"blank\"].concat(newTapeArray)\r\n\r\n            newTapeArray = tempTapeArray\r\n\r\n            newTapePosition = 0\r\n        }\r\n\r\n        // Handle generation of additional tape to the right\r\n        else if (newTapePosition > this.state.tapeArray.length - 1){\r\n            newTapeArray.push(\"blank\")\r\n        }\r\n\r\n        // Set state to update values on the screen\r\n        this.setState({\r\n            currentState: tempNextState.goTo,\r\n            tapeArray: newTapeArray,\r\n            tapePosition: newTapePosition\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ErrorBoundary>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n                \r\n                <Grid>\r\n                    \r\n                    {/* Component for displaying the tape*/}\r\n                    <TuringTape\r\n                        dataList={this.state.dataList}\r\n                        instructions={this.state.instructions}\r\n                        currentScript={this.state.currentScript}\r\n                        moveList={this.state.moveList}\r\n                        tapeArray={this.state.tapeArray}\r\n                        changeCell={this.changeCell}\r\n                        tapePosition={this.state.tapePosition}\r\n                        play={this.state.play}/>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    \r\n                    {/* Component for displaying static commentary, pseudocode, and the like */}\r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid> \r\n\r\n                <Grid item>\r\n                    <div>\r\n                        {/* Component for handling data operations on the Turing Machine*/}\r\n                        <TuringControls\r\n                            dataList={this.state.dataList}\r\n                            addData={this.addData}\r\n                            removeData={this.removeData}\r\n\r\n                            scriptList={this.state.scriptList}\r\n                            currentScript={this.state.currentScript}\r\n                            setScript={this.setScript}\r\n\r\n                            stateList={this.state.stateList}\r\n                            addStates={this.addStates}\r\n                            removeStates={this.removeStates}\r\n\r\n                            moveList={this.state.moveList}\r\n                            instructions={this.state.instructions}\r\n                            addInstruction={this.addInstruction}\r\n                            removeInstruction={this.removeInstruction}\r\n                            setInstruction={this.setInstruction}\r\n                            \r\n                            endless10Setter={this.endless10Setter}\r\n                            incrementOneSetter={this.incrementOneSetter}\r\n                            genericSetter={this.genericSetter}\r\n\r\n                            setPlay={this.setPlay}\r\n                            play={this.state.play}\r\n                            startMachine={this.startMachine}\r\n                            \r\n                            error={this.state.error}\r\n                            setError={this.setError}/>\r\n                        \r\n                        <div style={{marginTop: '24px'}}></div>\r\n\r\n                        {/* Component for displaying references, and the like */}\r\n                        <Paper\r\n                            className={classes.controlPaper}\r\n                            elevation={7}>\r\n\r\n                            <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                                References\r\n                            </Typography>\r\n\r\n                            <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"hhttps://www.youtube.com/watch?v=dNRDvLACg5Q\">\r\n                                What is a Turing Machine?\r\n                            </Typography>\r\n                            <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.youtube.com/watch?v=gtRLmL70TH0\">\r\n                                Who is Alan Turing?\r\n                            </Typography>\r\n                        </Paper>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            </ErrorBoundary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(Turing)","import React from 'react'\r\n\r\n// Self-generated Turing Machine\r\nimport Turing from './turing/Turing'\r\n\r\nclass TuringView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Turing\r\n                light={this.props.light}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TuringView","import React from 'react'\r\n\r\n// Material UI components\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Stop from '@material-ui/icons/Stop'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography} from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n// Material UI styling\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    typography: {\r\n        padding: theme.spacing.unit\r\n    },\r\n\r\n    dialog: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    radio: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 100\r\n    }\r\n})\r\n\r\nclass SortControls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scriptMenu: false,\r\n            selection: \"\"\r\n        }\r\n    }\r\n\r\n    // Handles toggle of script menu\r\n    scriptMenuOpen = () => {\r\n        this.setState({scriptMenu: !this.state.scriptMenu})\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper \r\n                className={classes.controlPaper}\r\n                elevation={7}>\r\n\r\n                {/*Button for Playing simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        this.props.currentScript === \"Bubble\" ? this.props.bubbleSort(): \r\n                        this.props.currentScript === \"Insertion\" ? this.props.insertionSort(): \r\n                        this.props.currentScript === \"Selection\" ? this.props.selectionSort():\r\n                        this.props.currentScript === \"Quick\" ? this.props.quickSort():\r\n                        console.log(\"No script selected\")\r\n                        \r\n                        this.props.setPlay()\r\n                    }}\r\n\r\n                    disabled={this.props.play}>\r\n\r\n                    <ToolTip title = \"Start\">\r\n                        <PlayArrow/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/*Button for stopping simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    disabled={!this.props.play}\r\n                    onClick={ () => {\r\n                        this.props.stopLoop()\r\n                        this.props.setPlay()\r\n                    }}>\r\n                    <ToolTip title = \"Stop\">\r\n                        <Stop/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n                \r\n                {/*Button for resetting simulations*/}\r\n                <IconButton\r\n                    color=\"secondary\" \r\n                    className={classes.button}\r\n                    disabled={this.props.play}\r\n                    onClick={this.props.shuffleBarChart}>\r\n                    <ToolTip title = \"Reset\">\r\n                        <Refresh/>\r\n                    </ToolTip>\r\n                </IconButton>\r\n\r\n                {/*Button for selecting simulations*/}\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={this.scriptMenuOpen}\r\n                    disabled={this.props.play}>\r\n\r\n                    <Typography color=\"secondary\">\r\n                        Scripts\r\n                    </Typography>\r\n\r\n                </Button>\r\n\r\n                {/*Dialog pop-up for selecting simulation simulations*/}\r\n                <Dialog\r\n                    open={this.state.scriptMenu}\r\n                    className={classes.dialog}>\r\n\r\n                    <FormControl\r\n                        component=\"fieldset\" \r\n                        className={classes.formControl}>\r\n                            <Typography\r\n                                className={classes.typography} \r\n                                variant=\"h6\"\r\n                                color=\"secondary\"\r\n                                align=\"center\">\r\n                                    Select Script\r\n                            </Typography>\r\n\r\n                            <Divider/>\r\n                            \r\n                            <RadioGroup\r\n                                name=\"scriptsMenu\"\r\n                                className={classes.radio}\r\n                                value={this.props.currentScript}\r\n                                onChange={(event) => this.props.setScript(event.target.value)}>\r\n                                    {this.props.scripts.map((text, index) => (\r\n                                        <FormControlLabel value={text} key={index} control={<Radio color=\"secondary\"/>} label={text + \" Sort\"}/>\r\n                                    ))}\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Button\r\n                            className={classes.button}\r\n                            onClick={this.scriptMenuOpen}\r\n                            variant=\"contained\"\r\n                            color=\"primary\">\r\n                            <Typography\r\n                                color=\"secondary\">\r\n                                    Confirm\r\n                                </Typography>\r\n                        </Button>\r\n                </Dialog>\r\n\r\n                {/*Text field for setting simulation speed*/}\r\n                <TextField\r\n                    id=\"speed\"\r\n                    label=\"Set Interval\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.speed}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => this.props.setSpeed(event.target.value)}\r\n                    disabled={this.props.play}\r\n                    helperText=\"The smaller, the quicker!\">\r\n                </TextField>\r\n\r\n                 {/*Text field for setting simulation speed*/}\r\n                <TextField\r\n                    id=\"dataSize\"\r\n                    label=\"Set Data Size\"\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={this.props.dataSize}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    disabled={this.props.play}\r\n                    onChange={(event) => this.props.setDataSize(event.target.value)}\r\n                    helperText=\"Reset after changing value!\">\r\n                </TextField>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortControls)","import React from 'react'\r\n\r\nimport AceEditor from 'react-ace'\r\n// import solarized_dark from 'brace/theme/solarized_dark'\r\n// import github from 'brace/theme/github'\r\n// import javascript from 'brace/mode/javascript'\r\n\r\n// Material UI components\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    root: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        // States for storing static source code\r\n        this.state = {\r\n\r\nbubbleValue:\r\n`// Bubble Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/bubble-sort/\r\nfunction bubbleSort(arrayOfValues) {    \r\n    // For each value in the arrayOfValues...\r\n    for (var i = 0; i < arrayOfValues.length; ++i) {\r\n\r\n        // Consider only the unsorted arrayOfValues.length - i values\r\n        for (var j = 0; j < arrayOfValues.length - i; ++j) {\r\n            \r\n            // If current value greater than the next value, then swap the two\r\n            if (arrayOfValues[j] > arrayOfValues[j + 1]) {\r\n                \r\n                swap(arrayOfValues[j], arrayOfValues[j + 1]);\r\n            }\r\n        }\r\n    }\r\n}`,\r\n\r\ninsertionValue:\r\n`// Insertion Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/insertion-sort/\r\nfunction insertionSort(arrayOfValues) {\r\n\r\n    // For each value, set it as a key\r\n    var currentKey;\r\n    for (var i = 0; i < arrayOfValues; ++i) {\r\n        \r\n        currentKey = arrayOfValues[i];\r\n        var j = i - 1;\r\n\r\n        // Elements that are greater than the key are pushed a position further\r\n\r\n        while (j >= 0 && arrayOfValues[j] > currentKey) {\r\n            \r\n            arrayOfValues[j + 1] = arrayOfValues[j];\r\n            \r\n            --j;\r\n        }\r\n        arrayOfValues[j + 1] = currentKey;\r\n    }\r\n}\r\n`,\r\n\r\nquickValue:\r\n`// Quick Sort: Time Complexity of O(n log n)\r\n// Source: https://www.geeksforgeeks.org/quick-sort/\r\n\r\nfunction partition(arrayOfValues, low, high) {\r\n    var pivot = arrayOfValues[high];\r\n    \r\n    // Set the index of the smaller value\r\n    var i = low - 1;\r\n    \r\n    // If the current value is smaller than or equal to the pivot,\r\n    // The index is increased, and the two are swapped\r\n    for (var j = low; j <= high - 1; ++j) {\r\n\r\n        if (arrayOfValues[j] <= pivot) {\r\n            ++i;\r\n            swap(arrayOfValues[i], arrayOfValues[j]);\r\n        }\r\n    }\r\n\r\n    swap(arrayOfValues[i + 1], arrayOfValues[high])\r\n}\r\n\r\nfunction quickSort(arrayOfValues, low, high) {\r\n    // Uses recursion to solve the problem!\r\n\r\n    // Set pi to partition the array\r\n    var pi = partition(arrayOfValues, low, high);\r\n\r\n    // Recursively sort separated elements\r\n    quickSort(arrayOfValues, low, pi - 1);\r\n    quickSort(arrayOfValues, pi + 1, high);\r\n}`,\r\n\r\nselectionValue:\r\n`// Selection Sort: Time Complexity of O(n^2)\r\n// Source: https://www.geeksforgeeks.org/selection-sort/\r\nfunction selectionSort(arrayOfValues) {\r\n\r\n    // For each value in the array\r\n    for (var i = 0; i < arrayOfValues.length; ++i) {\r\n        \r\n        // Find the smallest smallest value by comparison\r\n        var minId = i;\r\n\r\n        for (var j = i + 1; j < n; ++j) {\r\n            if (arrayOfValues[j] < arrayOfValues[minId]) {\r\n                minId = j;\r\n            }\r\n        }\r\n\r\n        // Swap the smallest element with the initial element\r\n        swap(arrayOfValues[minId], arrayOfValues[i]);\r\n    }\r\n    \r\n}`,\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        // Instance of Ace Editor for displaying static source code\r\n        return(\r\n            <Paper className={classes.root} elevation={7}>\r\n                <AceEditor\r\n                    width=\"550px\"\r\n                    height=\"480px\"\r\n                    wrapEnabled={true}\r\n                    onLoad={this.onLoad}\r\n                    onChange={this.onChange}\r\n                    // mode=\"javascript\"\r\n                    fontSize={15}\r\n                    tabSize={4}\r\n                    theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{$blockScrolling: Infinity}}\r\n                    readOnly={true}\r\n                    value={ \r\n                        (   this.props.currentScript === \"Bubble\" ? this.state.bubbleValue : \r\n                            this.props.currentScript === \"Insertion\" ? this.state.insertionValue:\r\n                            this.props.currentScript === \"Quick\" ? this.state.quickValue: \r\n                            this.props.currentScript === \"Selection\" ? this.state.selectionValue:\r\n                            \"// No Script selected\"\r\n                        )}\r\n                    setAutoScrollEditorIntoView={true}\r\n                    setUseWrapMode={true}\r\n                    indentedSoftWrap={true}\r\n                />\r\n            </Paper>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView)","// Inspired by ...\r\n// https://bl.ocks.org/alexmacy/770f14e11594623320db1270361331dc\r\n// http://macr.ae/article/sorting-algorithms.html\r\n// http://bl.ocks.org/andrewringler/3809399\r\n\r\nimport React from 'react'\r\n\r\n// D3 is used as the primary animation engine\r\nimport * as d3 from 'd3'\r\n\r\n// Material UI Components\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// Self-generated\r\nimport SortControls from './SortControls'\r\nimport CodeView from './CodeView'\r\nimport cssStyles from './SortD3.css'\r\n\r\n// Styling specifications for the Material UI components\r\nconst styles = theme => ({\r\n    simView: {\r\n        width : 570,\r\n        padding: theme.spacing.unit,\r\n        flexGrow: 1\r\n    },\r\n\r\n    controlPaper: {\r\n        width : 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    codeView: {\r\n        width: 570,\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 2,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass SortD3 extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataSize: 10,\r\n            play: false,\r\n            speed: 250,\r\n            currentScript: \"Bubble\",\r\n            // States for rendering sample simulations\r\n            scripts: [\"Bubble\", \"Insertion\", \"Quick\", \"Selection\"]\r\n        }\r\n\r\n        // Randomly initialise dataset \r\n        this.state.data = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n        this.setScript = this.setScript.bind(this)\r\n    }\r\n\r\n    // Initialise a bar chart when the page is opened\r\n    componentDidMount(){\r\n        this.initBarChart(this.state.data.slice())\r\n    }\r\n\r\n    /*Common-use variables*/\r\n        loop = []\r\n        xScale = []\r\n        yScale = []\r\n    /*-------------------*/\r\n    \r\n    // Setter for determining bar chart portal dimensions\r\n    setScales = (data) => {\r\n        this.yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(data)])\r\n            .range([0, this.props.height - 20])\r\n        \r\n        this.xScale = d3.scaleBand()\r\n            .domain(d3.range(0, data.length))\r\n            .range([0, this.props.width])\r\n            .paddingInner(0.2)\r\n    }\r\n\r\n    // Function to stop a manually-started setInterval() operation\r\n    stopLoop = () => {\r\n        // Stop the setInterval() loop invoked to run the simulation\r\n        clearInterval(this.loop)\r\n        // Reset the loop variable for future use\r\n        this.loop = {}\r\n        // Reset bar chart coloring to its original state\r\n        d3.select('.barChart').selectAll('rect').attr(\"class\", \"\")\r\n    }\r\n\r\n    // Setter for the Play button\r\n    setPlay = () => {\r\n        this.setState({play: !this.state.play})\r\n    }\r\n\r\n    // Setter for changing scripts\r\n    setScript = (newScript) => {\r\n        this.setState({currentScript: newScript})\r\n        console.log(this.state.currentScript)\r\n    }\r\n    \r\n    // Setter for changing dataset size\r\n    setDataSize = (newDataSize) => {\r\n        this.setState({dataSize: newDataSize})\r\n        console.log(this.state.dataSize)\r\n    }\r\n    \r\n    // Setter for changing simulation speed\r\n    setSpeed = (newSpeed) => {\r\n        this.setState({speed: newSpeed})\r\n        console.log(this.state.speed)\r\n    }\r\n\r\n    // Initialise a bar chart on page load\r\n    initBarChart = (initData) => {\r\n        // Determine chart dimensions\r\n        this.setScales(initData)\r\n\r\n        // Select the target SVG file, and draw rectangles with transition effects\r\n        d3.select('.barChart').selectAll('rect').data(initData).enter().append('rect')\r\n\r\n            .attr(\"x\", (d,i) => this.xScale(i))            \r\n            .attr('y', (d,i) => this.props.height - this.yScale(d))\r\n            .attr(\"width\", this.xScale.bandwidth())\r\n            \r\n            .transition()\r\n            .duration(this.state.speed)\r\n            \r\n            .attr(\"height\", (d,i) => this.yScale(d))\r\n            .attr(\"id\", (d, i) => \"rect-\" + i)\r\n        \r\n        // Append text indicating data value\r\n        d3.select('.barChart').selectAll('text').data(initData).enter().append('text')\r\n            .attr(\"x\", (d,i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            .attr('y', (d,i) => this.props.height - this.yScale(d) - 20)\r\n            .attr(\"dy\", \"1em\")\r\n            .attr(\"opacity\", 0.7)\r\n            .attr(\"id\", (d, i) => \"label-\" + i)\r\n            .text((d) => {return d})\r\n        \r\n        // Set state to reflect changed data\r\n        this.setState({data: initData})\r\n    }\r\n\r\n    // Function for randomising and generating new datasets\r\n    shuffleBarChart = () => {\r\n\r\n        // Prevents any data points from having a value of 0\r\n        const randomData = d3.shuffle(d3.range(this.state.dataSize)).map(values => values + 1)\r\n\r\n        this.setScales(randomData)\r\n\r\n        // Remove the existing bar chart\r\n        d3.select('.barChart').selectAll('rect').remove()\r\n        d3.select('.barChart').selectAll('text').remove()\r\n\r\n        // Initialise a new one in its place\r\n        this.initBarChart(randomData)\r\n    }\r\n\r\n    // Bubble Sort animation\r\n    bubbleSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n        let currentPos = 0\r\n        let iteration = 0\r\n\r\n        // Bubble Sort implementation\r\n        const bubbleSortLoop = () => {\r\n            if (iteration >= currentData.length - 1) {\r\n                return\r\n            }\r\n\r\n            if (currentPos === currentData.length - 1 - iteration) {\r\n                currentPos = 0\r\n                ++iteration\r\n            }\r\n        \r\n            if (currentData[currentPos] > currentData[currentPos + 1]) {\r\n                [currentData[currentPos], currentData[currentPos + 1]] = [currentData[currentPos + 1], currentData[currentPos]]\r\n            }\r\n        \r\n            ++currentPos\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n            \r\n            bubbleSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeBubble', (d, i) => i === currentPos || i + 1 === currentPos)\r\n                .classed('completedBubble', (d, i) => i >= currentData.length - iteration)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        \r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    insertionSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let currentPos = 1\r\n        let complete = 1\r\n\r\n        let resetTest = false\r\n\r\n        // Insertion Sort implementation\r\n        const insertionSortLoop = () => {\r\n            \r\n            if (resetTest || currentPos === 0) {\r\n                currentPos = complete\r\n                resetTest = false\r\n            }\r\n\r\n            if (complete > currentData.length) {\r\n                return\r\n            }\r\n                    \r\n            if (currentData[currentPos] < currentData[currentPos - 1]) {\r\n                [currentData[currentPos], currentData[currentPos - 1]] = [currentData[currentPos - 1], currentData[currentPos]]\r\n            } \r\n        \r\n            else {\r\n                resetTest = true\r\n            }\r\n        \r\n            if (currentPos === complete) {\r\n                ++complete\r\n            }\r\n            --currentPos\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n\r\n            insertionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeInsertion', (d, i) => complete <= currentData.length && (i === currentPos + 1 || i === currentPos))\r\n                .classed('completedInsertion', (d, i) => i < complete)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    selectionSort = () => {\r\n        let currentData = this.state.data.slice()\r\n        \r\n        this.setScales(currentData)\r\n\r\n        let sorted = 0\r\n        let currentPos = 0\r\n        let min = 0\r\n        let reset = false\r\n\r\n        // Selection Sort implementation\r\n        const selectionSortLoop = () => {\r\n\r\n            if (sorted === currentData.length) {\r\n                return\r\n            }\r\n            \r\n            if (reset) {\r\n                reset = false\r\n                min = currentPos = sorted\r\n            }\r\n            \r\n            ++currentPos\r\n            \r\n            if (currentData[currentPos] < currentData[min]) {\r\n                min = currentPos\r\n            }\r\n            \r\n            if (currentPos === currentData.length - 1) {\r\n                [currentData[sorted], currentData[min]] = [currentData[min], currentData[sorted]]\r\n                \r\n                ++sorted\r\n                reset = true\r\n            }\r\n\r\n            if (sorted === currentData.length - 1) {\r\n                ++sorted\r\n            }\r\n        }\r\n\r\n        // Function for animating transitions in the dataset\r\n        this.loop = setInterval(() => {\r\n\r\n            selectionSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeSelection', (d, i) => sorted !== currentData.length && (i === currentPos || i === min))\r\n                .classed('completedSelection', (d, i) => i < sorted)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n            \r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n\r\n        }, this.state.speed)\r\n\r\n        this.setState({data: currentData})\r\n    }\r\n\r\n    quickSort = () => {\r\n\r\n        let currentData = this.state.data.slice()\r\n\r\n        this.setScales(currentData)\r\n\r\n        let toSort = [[0, currentData.length - 1]]\r\n        let sorting\r\n        let pivot\r\n\r\n        let l, r\r\n\r\n        // Quick Sort implementation\r\n        const quickSortLoop = () => {\r\n            if (!sorting) {\r\n                if (!toSort.length) {\r\n                    return\r\n                }\r\n                \r\n                sorting = toSort.shift()\r\n                pivot = sorting[0] + Math.floor((sorting[1] - sorting[0]) * Math.random())\r\n                \r\n                l = sorting[0]\r\n                r = sorting[1]\r\n            }\r\n        \r\n            if (l === r) {\r\n                if (pivot - 1 - sorting[0] > 0) {\r\n                    toSort.push([sorting[0], pivot - 1])\r\n                }\r\n                \r\n                if (sorting[1] - (pivot + 1) > 0) {\r\n                    toSort.push([pivot + 1, sorting[1]])\r\n                }\r\n            \r\n                l = r = sorting = pivot = undefined\r\n            \r\n                quickSortLoop()\r\n                return\r\n            }\r\n        \r\n            if (currentData[l] < currentData[pivot]) {\r\n                ++l\r\n                return\r\n            }\r\n        \r\n            if (currentData[r] > currentData[pivot]) {\r\n                --r\r\n                return\r\n            }\r\n        \r\n            [currentData[l], currentData[r]] = [currentData[r], currentData[l]]\r\n        \r\n            if (pivot === l) {\r\n\r\n                pivot = r\r\n            } \r\n            \r\n            else if (pivot === r) {\r\n                pivot = l\r\n            }\r\n        }\r\n\r\n        this.loop = setInterval( () => {\r\n            quickSortLoop()\r\n\r\n            d3.select('.barChart').selectAll('rect')\r\n                .data(currentData, (d) => d)\r\n                .classed('activeQuick', (d, i) => sorting && (i >= sorting[0] && i <= sorting[1]))\r\n                .classed('pivotQuick', (d, i) => i === pivot)\r\n                .classed('highlightQuick', (d, i) => i === r || i === l)\r\n                .classed('completedQuick', (d, i) => isCompleted(i))\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i))\r\n\r\n            d3.select('.barChart').selectAll('text').data(currentData, (d) => d)\r\n                .transition()\r\n                .duration(this.state.speed)\r\n                .attr('x', (d, i) => this.xScale(i) + this.xScale.bandwidth() / 2)\r\n            }, this.state.speed)\r\n\r\n            function isCompleted(i) {\r\n\r\n                if (!sorting && !toSort.length) {\r\n                    return true\r\n                }\r\n\r\n                return [sorting].concat(toSort).every(([l, r]) => i < l || r < i)\r\n            }\r\n\r\n            this.setState({data: currentData})\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        return(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n\r\n                {/*Component housing target SVG file*/}\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.simView}\r\n                        elevation={7}>\r\n\r\n                        <svg\r\n                            width  = {this.props.width}\r\n                            height = {this.props.height}>\r\n\r\n                            <g className=\"barChart\"/>\r\n                    \r\n                        </svg>\r\n                    \r\n                        <Divider/>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Component for posting source code*/}\r\n                <Grid item>\r\n                    <CodeView\r\n                        light={this.props.light}\r\n                        currentScript={this.state.currentScript}/>\r\n                </Grid>\r\n\r\n                {/* Component for handling simulation controls*/}\r\n                <Grid item>\r\n                    <SortControls\r\n                        stopLoop={this.stopLoop}\r\n                        shuffleBarChart={this.shuffleBarChart}\r\n                        \r\n                        play={this.state.play}\r\n                        setPlay={this.setPlay}\r\n\r\n                        speed={this.state.speed}\r\n                        dataSize={this.state.dataSize}\r\n                        setSpeed={this.setSpeed}\r\n                        setDataSize={this.setDataSize}\r\n\r\n                        bubbleSort={this.bubbleSort}\r\n                        insertionSort={this.insertionSort}\r\n                        mergeSort={this.mergeSort}\r\n                        selectionSort={this.selectionSort}\r\n                        quickSort={this.quickSort}\r\n\r\n\r\n                        scripts={this.state.scripts}\r\n                        currentScript={this.state.currentScript}\r\n                        setScript={this.setScript}/>\r\n                </Grid>\r\n\r\n                {/* Component for handling references*/}\r\n                <Grid item>\r\n                    <Paper\r\n                        className={classes.controlPaper}\r\n                        elevation={7}>\r\n\r\n                        <Typography color=\"secondary\" variant=\"h5\" gutterBottom>\r\n                            References\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\">\r\n                            Visualisations of some sorting algorithms\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.geeksforgeeks.org/understanding-time-complexity-simple-examples/\">\r\n                            What is a \"Time Complexity\"?\r\n                        </Typography>\r\n\r\n                        <Typography component=\"a\" variant=\"h6\" target=\"_blank\" href=\"https://www.w3resource.com/c-programming-exercises/searching-and-sorting/index.php\">\r\n                            Implement your own!\r\n                        </Typography>\r\n\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SortD3)","import React from 'react'\r\n\r\n// Self-generated Sorting Simulator\r\nimport SortD3 from './sorting/SortD3'\r\nclass SortingView extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            // States for setting SVG dimensions in simulation component\r\n            svgWidth      : 550,\r\n            svgHeight     : 480,\r\n        }\r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <SortD3\r\n                width={this.state.svgWidth}\r\n                height={this.state.svgHeight}\r\n                light={this.props.light}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SortingView","import React from 'react'\r\n\r\n// Component for the stylised title on the landing page\r\nimport Typist from 'react-typist'\r\nimport './mainPage/MainPage.scss'\r\n\r\n// Component for routing\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Material UI Components\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Typography } from '@material-ui/core'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        align: 'center'\r\n    },\r\n})\r\n\r\n// Code based on boilerplate provided by the author of \"react-typist\"\r\nclass MainPage extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            typingDone: false\r\n        }\r\n    }\r\n\r\n    typingDone = () => {\r\n        this.setState({typingDone: !this.state.typingDone})\r\n        console.log(\" DONE\")\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={40}>\r\n            <Grid item><div style={{marginTop: '240px'}}></div></Grid>\r\n            <Grid item>\r\n                <Typist\r\n                    className=\"Typist-header\"\r\n                    avgTypingSpeed={40}\r\n                    startDelay={1000}\r\n                    onTypingDone={this.typingDone}>\r\n\r\n                    <span>Learnt</span>\r\n\r\n                    <Typist.Backspace count={1} delay={700}/>\r\n                \r\n                    <Typist.Delay ms={250}/>\r\n                    <span>+</span>\r\n                </Typist>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                    <Button color=\"primary\" variant=\"contained\" component={Link} to=\"/turing_machine\">\r\n                        <Typography color=\"secondary\">Click to Begin</Typography>\r\n                    </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(MainPage)","import React from 'react'\r\n\r\n// Self-generated components\r\nimport AppDrawer from './AppDrawer/AppDrawer'\r\nimport TuringView from './MainViews/TuringView'\r\n// import VonNeumannView from './MainViews/VonNeumannView'\r\nimport SortingView from './MainViews/SortingView'\r\nimport MainPage from './MainViews/MainPage'\r\n\r\n// Material UI Components\r\nimport { MuiThemeProvider, createMuiTheme, withStyles} from '@material-ui/core/styles'\r\n\r\n// Base Theme settings\r\nimport {lightTheme, darkTheme} from './themes'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\n// Light and Dark theme assets\r\nconst lTheme = createMuiTheme(lightTheme)\r\nconst dTheme = createMuiTheme(darkTheme)\r\n\r\n// Material UI styling assets\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass App extends React.Component {\r\n    // Constructor for the Base App\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            // Prop for handling changes from Light theme to Dark theme, and vice versa\r\n            light: true,            \r\n            // Prop for list of pages\r\n            modes: [\"Turing Machine\", \"Sorting Algorithms\"],\r\n\r\n            //\"von Neumann Architecture\", \r\n        }\r\n        // Bind handler to the App Component\r\n        this.handleLightChange = this.handleLightChange.bind(this)\r\n    }\r\n\r\n    // Handles change of theme from Light Mode to Dark Mode\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}))\r\n        console.log(\"Light: \" + this.state.light)\r\n    }\r\n\r\n    // Getter for \"Lght\" setting saved in LocalStorage\r\n    componentWillMount(){\r\n        localStorage.getItem('light') && this.setState({\r\n            light: JSON.parse(localStorage.getItem('light')),\r\n        })        \r\n    }\r\n\r\n    // Getter for saving \"Light\" setting in LocalStorage\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('light', JSON.stringify(nextState.light))\r\n    }\r\n    \r\n    render() {    \r\n        const {classes} = this.props\r\n        return (\r\n            <div className = {classes.root}>\r\n\r\n                {/* Material UI Theming Component*/}\r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n\r\n                    {/* App Drawer Component*/}\r\n                    <AppDrawer\r\n                        handleLightChange={this.handleLightChange} \r\n                        light={this.state.light} \r\n                        modes={this.state.modes}\r\n                    /> \r\n\r\n                    <div style={{marginTop: '90px'}}></div>\r\n                    {/* Switch Component for hyperlinks*/}\r\n                    <Switch>\r\n                        \r\n                        <Route exact path=\"/sorting_algorithms\" render={() =>                        \r\n                            <SortingView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n\r\n                        <Route exact path=\"/turing_machine\" render={() => \r\n                            <TuringView\r\n                                light={this.state.light}/>\r\n                        }/>\r\n                        \r\n                        {/* <Route exact path=\"/von_neumann_architecture\" render={() => \r\n                            <VonNeumannView/>\r\n                        }/> */}\r\n\r\n                        <Route exact path=\"/\" render={() => \r\n                            <MainPage/>\r\n                        }/>\r\n                    </Switch>\r\n                </MuiThemeProvider>\r\n            </div>             \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App)","const darkTheme = {\r\n    palette: {\r\n        type: 'dark',\r\n\r\n        primary: {\r\n            main: '#045a6d',\r\n        },\r\n        secondary: {\r\n            main: \"#afe2f7\",\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    },\r\n}\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#afe2f7',\r\n        },\r\n        secondary: {\r\n            main: '#045a6d',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\n\r\nexport {lightTheme, darkTheme};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter basename=\"/\">\r\n        <App/>\r\n    </HashRouter>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}