{"version":3,"sources":["components/AppDrawer/AppDrawer.js","baseThemes/lightTheme.js","components/TuringSimView.js","baseThemes/darkTheme.js","components/CodeView/CodeView.js","components/InfoCard/InfoCard.js","App.js","index.js"],"names":["AppDrawer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMenuOpen","setState","state","drawer","handleListClicks","pageId","console","log","_this2","_this$props","classes","appDrawer","theme","react_default","a","createElement","className","List_default","subheader","ListSubheader_default","component","Divider_default","map","text","index","ListItem_default","button","key","onClick","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","Tooltip_default","title","interactive","placement","IconButton_default","color","menuButton","aria-label","Menu_default","Typography_default","variant","noWrap","typography","lights","handleLightChange","light","WbSunnyOutlined_default","WbSunny_default","settingsIcon","Settings_default","Hidden_default","smUp","implementation","SwipeableDrawer_default","container","anchor","open","onOpen","onClose","React","Component","withStyles","display","marginRight","marginLeft","flexGrow","margin","spacing","unit","defineProperty","breakpoints","up","width","flexShrink","withTheme","lightTheme","palette","type","main","secondary","useNextVariants","darkTheme","CodeView","value","Paper_default","codeView","square","lib_default","codeEditor","highlightActiveLine","editorProps","$blockScrolling","Infinity","enableBasicAutocompletion","setAutoScrollEditorIntoView","setUseWrapMode","indentedSoftWrap","marginTop","padding","InfoCard","currentTopic","currentInfoId","Card_default","card","CardHeader_default","action","core_IconButton_default","MoreVert_default","CardContent_default","CardActions_default","actions","disableActionSpacing","KeyboardArrowLeft_default","KeyboardArrowRight_default","lTheme","createMuiTheme","dTheme","App","bind","assertThisInitialized","localStorage","getItem","JSON","parse","nextProps","nextState","setItem","stringify","HashRouter","core_styles","components_AppDrawer_AppDrawer","Grid_default","md","components_CodeView_CodeView","components_InfoCard_InfoCard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.720e9b56.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport LightOn from '@material-ui/icons/WbSunny'\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\n\r\n// Routing \r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  \r\n    menuButton: {\r\n      marginRight: 20,\r\n      marginLeft: -12,\r\n    },\r\n  \r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n  \r\n    typography: {\r\n      marginRight: 20,\r\n      flexGrow: 1\r\n    },\r\n  \r\n    settingsIcon: {\r\n      marginRight: -12\r\n    },\r\n  \r\n    lights: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  \r\n    appDrawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    }\r\n  })\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      drawer: false,\r\n    }\r\n  }\r\n\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n    //console.log(this.state.drawer)\r\n  }\r\n\r\n  //TODO: ROUTING PURPOSES\r\n  handleListClicks = (pageId) =>{\r\n    console.log(pageId)\r\n  }\r\n\r\n  render(){\r\n    const {classes, theme} = this.props\r\n    const appDrawer = (\r\n      <div>\r\n        <div className={classes.appDrawer}>\r\n          <List subheader={<ListSubheader component=\"div\">FYP18053</ListSubheader>}>\r\n            <Divider/>\r\n            {['Turing', 'von Neumann', 'Quantum Computing'].map((text, index) => (\r\n              <ListItem  button key = {text} onClick={() => this.handleListClicks(text)}>\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider/>\r\n          <List>\r\n            {['About Us'].map((text, index) => (\r\n              <ListItem button key = {text} onClick={() => this.handleListClicks(text)}>\r\n                <ListItemText primary={text}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" interactive placement = 'bottom-end'>\r\n              <div>\r\n                <IconButton color=\"secondary\" className={classes.menuButton} aria-label=\"Open Menu\" onClick={this.handleMenuOpen}>\r\n                  <MenuIcon/>\r\n              </IconButton>\r\n            </div>\r\n            </ToolTip>\r\n  \r\n            <Typography variant=\"h6\" color=\"secondary\" noWrap className={classes.typography}>\r\n              FYP18053\r\n            </Typography>\r\n\r\n            <ToolTip title=\"Toggle Lights\" interactive >\r\n              <IconButton color=\"secondary\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n                {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n              </IconButton>\r\n            </ToolTip>\r\n\r\n            <ToolTip title=\"Settings\" interactive placement = 'bottom-start'>\r\n              <IconButton color=\"secondary\" className={classes.settingsIcon} aria-label=\"My Settings\">\r\n                <SettingsIcon/>\r\n              </IconButton>\r\n            </ToolTip>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAppDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(AppDrawer) ","import amber from '@material-ui/core/colors/amber'\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#afe2f7',\r\n        },\r\n        secondary: {\r\n            main: '#002f39',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\nexport default lightTheme","import React from 'react'\r\nimport * as d3 from 'd3'\r\nimport rd3 from 'react-d3-library'\r\n\r\nclass TuringSimView extends React.Component{\r\n    componentDidMount(){\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart(){\r\n        const data = [80, 120, 60, 150, 200];\r\n        const barHeight = 20;\r\n        const bar = d3.select('svg')\r\n          .selectAll('rect')\r\n              .data(data)\r\n              .enter()\r\n              .append('rect')\r\n              .attr('fill', 'blue')\r\n              .attr('width', function (d) {\r\n                  return d;\r\n              })\r\n              .attr('height', barHeight - 1)\r\n              .attr('transform', function (d, i) {\r\n                  return \"translate(0,\" + i * barHeight + \")\";\r\n              });\r\n              \r\n            }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"TuringSim\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TuringSimView","import amber from '@material-ui/core/colors/amber'\r\n\r\nconst darkTheme = {\r\n    palette: {\r\n        type: 'dark',\r\n\r\n        primary: {\r\n            main: '#002f39',\r\n        },\r\n        secondary: {\r\n            main: \"#afe2f7\",\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    },\r\n}\r\n\r\nexport default darkTheme","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles'\r\nimport Theme from './Theme'\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    codeView: {\r\n        flexGrow: 1,\r\n        marginLeft: 60,\r\n        marginTop: 90,\r\n        width: 520,\r\n        padding: theme.spacing.unit,\r\n    },\r\n    // Ace Editor Styling\r\n    codeEditor: {\r\n    },\r\n})\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"// This is some default text\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes, theme} = this.props\r\n        return(\r\n            <div>\r\n                <Paper className={classes.codeView} square={false}>\r\n                    <AceEditor\r\n                        className={classes.codeEditor}\r\n                        theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                        highlightActiveLine={true}\r\n                        editorProps={{$blockScrolling: Infinity}}\r\n                        enableBasicAutocompletion={false}\r\n                        value={this.state.value}\r\n                        setAutoScrollEditorIntoView={true}\r\n                        setUseWrapMode={true}\r\n                        indentedSoftWrap={true}\r\n                    />\r\n                </Paper>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodeView) ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nimport LeftArrow from '@material-ui/icons/KeyboardArrowLeft'\r\nimport RightArrow from '@material-ui/icons/KeyboardArrowRight'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    marginLeft: 50,\r\n    marginTop: 78.5,\r\n    width: 520,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nclass InfoCard extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      currentTopic: 'Turing',\r\n      currentInfoId: 0,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          action={\r\n            <IconButton>\r\n              <MoreVertIcon color=\"secondary\"/>\r\n            </IconButton>\r\n          }\r\n          title=\"Placeholder Title\"\r\n          subheader=\"Placeholder Text\"\r\n        />\r\n        <Divider/>\r\n        <CardContent>\r\n          <Typography component=\"p\">\r\n\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions} disableActionSpacing>\r\n          <IconButton aria-label=\"Previous\">\r\n            <LeftArrow color=\"secondary\"/>\r\n          </IconButton>\r\n          <IconButton aria-label=\"Next\">\r\n            <RightArrow color=\"secondary\"/>\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nInfoCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InfoCard);","import React from 'react'\r\n\r\nimport AppDrawer from './components/AppDrawer/AppDrawer'\r\nimport SimView from './components/TuringSimView'\r\nimport { MuiThemeProvider, createMuiTheme, withStyles} from '@material-ui/core/styles'\r\nimport lightTheme from './baseThemes/lightTheme'\r\nimport darkTheme from './baseThemes/darkTheme'\r\nimport CodeView from './components/CodeView/CodeView'\r\nimport InfoCard from './components/InfoCard/InfoCard'\r\nimport Grid from '@material-ui/core/Grid/Grid'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nconst lTheme = createMuiTheme(lightTheme)\r\nconst dTheme = createMuiTheme(darkTheme)\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        flexGrow: 1,\r\n    }\r\n})\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            light: true,\r\n        }\r\n        this.handleLightChange = this.handleLightChange.bind(this)\r\n    }\r\n\r\n    // Handles change of theme from Light Mode to Dark Mode\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}))\r\n    }\r\n\r\n    // For remembering saved light settings\r\n    componentWillMount(){\r\n        localStorage.getItem('light') && this.setState({\r\n            light: JSON.parse(localStorage.getItem('light'))\r\n        })\r\n    }\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('light', JSON.stringify(nextState.light))\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return ( \r\n            <HashRouter>\r\n                <div className = \"App\">\r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n                <AppDrawer handleLightChange={this.handleLightChange} light={this.state.light}/>\r\n                <Grid container md={12}>\r\n                    <Grid container md = {6} spacing={24}>\r\n                        <div className =\"CodeView\">\r\n                            <CodeView handleLightChange={this.handleLightChange} light={this.state.light}/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid container md = {6} spacing={12}>\r\n                        <div className=\"InfoCard\">\r\n                            <InfoCard/>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                </MuiThemeProvider>\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}