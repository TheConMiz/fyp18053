{"version":3,"sources":["components/AppDrawer/assets/LightSwitch.js","components/AppDrawer/assets/HelperButton.js","components/AppDrawer/AppDrawer.js","components/CodePortal/src/CodeView.js","components/CodePortal/CodePortal.js","components/temp/InfoCard/InfoCard.js","components/CodeControls/ArrayGenerationMenu.js","components/CodeControls/ScriptsViewMenu.js","components/CodeControls/ControlPanel.js","components/SimView/Simulations/Sorting/SortD3.js","components/SimView/SimView.js","components/AboutUs.js","components/App.js","components/themes.js","index.js"],"names":["LightSwitch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","snackbar","classes","react_default","a","createElement","Tooltip_default","title","placement","IconButton_default","color","className","lights","onClick","handleLightChange","aria-label","light","WbSunnyOutlined_default","WbSunny_default","React","Component","withStyles","theme","margin","spacing","unit","withTheme","HelperButton","handleHelperToggle","setState","helper","react","HelpOutline_default","Help_default","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","button","AppDrawer","handleMenuOpen","drawer","modes","_this2","_this$props","appDrawer","pathname","MenuList_default","subheader","ListSubheader_default","component","Divider_default","map","text","index","MenuItem_default","menuItem","key","handleCurrentMode","Link","selected","currentMode","to","replace","toLowerCase","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","menuButton","Menu_default","Typography_default","variant","noWrap","typography","toUpperCase","assets_LightSwitch","assets_HelperButton","handleHelperChange","Hidden_default","smUp","implementation","SwipeableDrawer_default","container","anchor","onOpen","onClose","compose","display","marginRight","marginLeft","flexGrow","align","settingsIcon","&:focus","backgroundColor","palette","main","& $primary, & $icon","common","white","defineProperty","breakpoints","up","width","flexShrink","withRouter","CodeView","react_ace_lib_default","height","wrapEnabled","fontSize","highlightActiveLine","editorProps","$blockScrolling","Infinity","readOnly","setAutoScrollEditorIntoView","setUseWrapMode","indentedSoftWrap","CodePortal","currentPage","Paper_default","codeView","elevation","src_CodeView","padding","InfoCard","Card_default","card","gutterBottom","ArrayGenerationMenu","handleDataChange","console","log","userValue","Button_default","index_es","Dialog_default","dialog","DialogTitle_default","DialogContent_default","TextField_default","placeholder","label","onChange","val","target","value","split","handleShuffleData","minWidth","ScriptsViewMenu","menuOpen","handleScriptsList","ControlPanel","handleRunPause","run","pause","paper","core_IconButton_default","core_Tooltip_default","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Refresh_default","CodeControls_ScriptsViewMenu","CodeControls_ArrayGenerationMenu","data","dataSize","contextLog","textField","SortD3","drawChart","bind","assertThisInitialized","variableSpacing","Math","floor","length","node","yScale","d3","domain","range","selectAll","enter","append","exit","remove","style","attr","d","i","_this3","ref","SimView","Sorting_SortD3","AboutUs","Grid_default","justify","direction","alignItems","item","elevation7","lTheme","createMuiTheme","type","secondary","useNextVariants","dTheme","App","newData","handleNewData","localStorage","setItem","getItem","JSON","parse","nextProps","nextState","stringify","core_styles","components_AppDrawer_AppDrawer","marginTop","Grid_Grid_default","components_SimView_SimView","components_CodePortal_CodePortal","CodeControls_ControlPanel","temp_InfoCard_InfoCard","ReactDOM","render","HashRouter","basename","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.054f0b98.chunk.js","sourcesContent":["import React from 'react';\r\nimport LightOn from '@material-ui/icons/WbSunny';\r\nimport LightOff from '@material-ui/icons/WbSunnyOutlined';\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst styles = theme => ({\r\n    lights: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  })\r\n\r\nclass LightSwitch extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          snackbar: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <ToolTip title=\"Toggle Lights\" placement='bottom'>\r\n            <IconButton color=\"secondary\" className={classes.lights} onClick={this.props.handleLightChange} aria-label=\"Toggle Lights\">\r\n              {(!this.props.light)? <LightOn/>: <LightOff/>}\r\n            </IconButton>\r\n          </ToolTip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LightSwitch);","import React, { Fragment } from 'react';\r\nimport Help from '@material-ui/icons/Help';\r\nimport HelpOutline from '@material-ui/icons/HelpOutline';\r\n\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = theme => ({\r\n    helper: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n    },\r\n  })\r\n\r\nclass HelperButton extends React.Component{\r\n\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        helper: false\r\n      }\r\n  }\r\n\r\n  handleHelperToggle = () =>{\r\n    this.setState(state => ({helper: !this.state.helper}))\r\n  }\r\n  \r\n\r\n\r\n  render(){\r\n      const {classes} = this.props;\r\n\r\n      return(          \r\n        <Fragment>\r\n          <ToolTip title=\"Helper Mode\" placement='bottom'>\r\n            <IconButton color=\"secondary\" className={classes.helper} onClick={this.handleHelperToggle}>\r\n              {(!this.state.helper)? <Help/>: <HelpOutline/>}\r\n            </IconButton>\r\n          </ToolTip>\r\n\r\n          <Snackbar \r\n            className={classes.helper}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={this.state.helper}\r\n            autoHideDuration={5}\r\n            message={\r\n              <span >\r\n                  {this.state.helper ? \"Helper Mode has been enabled.\" : \"Helper Mode has been disabled.\"}\r\n\r\n                  {/* <Button onClick={this.handleHelperToggle} variant=\"outlined\" color=\"secondary\" className={classes.button}>\r\n                    <Typography color=\"primary\">\r\n                      Click to Disable\r\n                    </Typography>\r\n                  </Button> */}\r\n              </span>\r\n            }>\r\n          \r\n          </Snackbar>\r\n        </Fragment>\r\n        \r\n      )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(HelperButton);","import React from 'react'\r\n//Material UI Components\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport AppBar from '@material-ui/core/AppBar/AppBar'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Hidden from '@material-ui/core/Hidden/Hidden'\r\nimport ToolTip from '@material-ui/core/Tooltip/Tooltip'\r\n\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport {compose} from 'recompose';\r\n\r\nimport LightSwitch from './assets/LightSwitch'\r\nimport HelperButton from './assets/HelperButton'\r\n\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  \r\n    menuButton: {\r\n      marginRight: 20,\r\n      marginLeft: -12,\r\n    },\r\n  \r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n    },\r\n  \r\n    typography: {\r\n      marginRight: 20,\r\n      flexGrow: 1,\r\n      align: \"center\",\r\n    },\r\n  \r\n    settingsIcon: {\r\n      marginRight: -12\r\n    },\r\n\r\n    menuItem: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& $primary, & $icon': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  \r\n    appDrawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      }\r\n    },\r\n  })\r\n\r\nclass AppDrawer extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      drawer: false,\r\n      modes: this.props.modes,\r\n      helper: false,\r\n    }\r\n  }\r\n\r\n  handleMenuOpen = () =>{\r\n    this.setState(state => ({drawer: !this.state.drawer}))\r\n  }\r\n\r\n  render(){\r\n    const {classes, modes, pathname} = this.props\r\n    \r\n    // Pre-defined App Drawer\r\n    const appDrawer = (\r\n      <div>\r\n\r\n        <div className={classes.appDrawer}>\r\n          \r\n          <MenuList subheader={<ListSubheader component=\"div\">FYP18053</ListSubheader>}>\r\n            \r\n            <Divider/>\r\n\r\n            {/*Code block for mapping mode props to Menu Item names*/}\r\n            \r\n            {modes.map((text, index) => (\r\n\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                button key = {text} \r\n                onClick={() => {\r\n                  this.props.handleCurrentMode(text)\r\n                  this.handleMenuOpen()\r\n                }} \r\n                component={Link} \r\n                selected={this.props.currentMode === text ? true : false}\r\n                to={text.replace(/\\s/g,'_').toLowerCase()}>\r\n\r\n                  <ListItemText primary={text}/>\r\n              \r\n              </MenuItem>\r\n            ))}\r\n\r\n          </MenuList>\r\n          \r\n          <Divider/>\r\n          \r\n          <MenuList>\r\n            {['About Us'].map((text, index) => (\r\n              <MenuItem\r\n                className={classes.menuItem}\r\n                button key = {text}\r\n                onClick={() => {\r\n                  this.props.handleCurrentMode(text)\r\n                  this.handleMenuOpen()\r\n                }} \r\n                component={Link} \r\n                to={text.replace(/\\s/g,'_').toLowerCase()} \r\n                selected={this.props.currentMode === text ? true : false}>\r\n                \r\n                <ListItemText primary={text}/>\r\n              \r\n              </MenuItem>\r\n            ))}\r\n          </MenuList>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return(\r\n      <div className = {classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar}>\r\n\r\n          <Toolbar>\r\n            <ToolTip title=\"Open Menu\" placement = 'bottom'>\r\n              <div>\r\n                <IconButton color=\"secondary\" className={classes.menuButton} onClick={this.handleMenuOpen}>\r\n                  <MenuIcon/>\r\n                </IconButton>\r\n              </div>\r\n            </ToolTip>\r\n\r\n            <Typography variant=\"h6\" color=\"secondary\" noWrap className={classes.typography}>\r\n              {this.props.currentMode.toUpperCase()}\r\n            </Typography>\r\n\r\n            <LightSwitch light={this.props.light} handleLightChange={this.props.handleLightChange}/>\r\n  \r\n            <HelperButton helper={this.props.helper} handleHelperChange={this.props.handleHelperChange}/>\r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n        \r\n        <nav className={classes.appDrawer}>\r\n          <Hidden smUp implementation=\"css\">\r\n            <SwipeableDrawer container={this.props.container} anchor=\"left\" open={this.state.drawer} onOpen={this.handleMenuOpen} onClose={this.handleMenuOpen}>\r\n              {appDrawer}\r\n            </SwipeableDrawer>\r\n          </Hidden>\r\n        </nav>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withStyles(styles, {withTheme: true}),\r\n  withRouter\r\n) (AppDrawer);","import React from 'react'\r\nimport AceEditor from 'react-ace'\r\nimport solarized_dark from 'brace/theme/solarized_dark'\r\nimport github from 'brace/theme/github'\r\nimport Paper from '@material-ui/core/Paper/Paper'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nclass CodeView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    // handleAceEdit = () =>{\r\n    //     var session = AceEditor.session\r\n    // }\r\n\r\n    render(){\r\n        //console.log(this.props.match.url)\r\n        return(\r\n                    <AceEditor\r\n                        width=\"550px\"\r\n                        height=\"480px\"\r\n                        wrapEnabled={true}\r\n                        fontSize={14}\r\n                        theme={(!this.props.light)? \"solarized_dark\": \"github\"}\r\n                        highlightActiveLine={true}\r\n                        editorProps={{$blockScrolling: Infinity}}\r\n                        readOnly={true}\r\n                        // value={\r\n                        //     // this.props.match.url === \"/turing\" ? \"The Turing Machine\": \r\n                        //     // this.props.match.url === \"/von_neumann\"? \"The von Neumann Architecture\" :\r\n                        //     // this.props.match.url === \"/sorting\" ? \"Sorting Algorithms\": \r\n                        //     // \"\"\r\n                        //  }\r\n                        setAutoScrollEditorIntoView={true}\r\n                        setUseWrapMode={true}\r\n                        indentedSoftWrap={true}\r\n                    />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeView ","import React from 'react';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport CodeView from './src/CodeView'\r\n\r\n\r\nconst styles = theme => ({\r\n    //Material UI Styling\r\n    codeView: {\r\n        flexGrow: 1,\r\n        width: 570,\r\n        height: 500,\r\n        padding: theme.spacing.unit,\r\n    },\r\n})\r\n\r\n\r\nclass CodePortal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            currentPage: 1,\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <Paper className={classes.codeView} elevation={7}>\r\n                {/* <AppBar position=\"static\" color=\"secondary\" >\r\n                <Tabs>\r\n                    <Tab label=\"Code\" />\r\n                    <Tab label=\"Console\" />\r\n                    \r\n                </Tabs>\r\n                </AppBar> */}\r\n                <div></div>\r\n\r\n                <CodeView light={this.props.light}/>\r\n\r\n            </Paper>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CodePortal) ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    //marginTop: 10,\r\n    flexGrow: 1,\r\n    width: 570, \r\n    height: 136,\r\n    padding: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass InfoCard extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.card} elevation={7}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Help Widget\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography component=\"p\">\r\n          This widget provides context-based tips\r\n        </Typography>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nInfoCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InfoCard);","import React, { Fragment } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles} from '@material-ui/core/styles'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    dialog: {\r\n        margin  : theme.spacing.unit,\r\n        minWidth: 550,\r\n        height  : 400\r\n    }\r\n})\r\n\r\nclass ArrayGenerationMenu extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open     : false,\r\n            userValue: [],\r\n        };\r\n    }\r\n\r\n\r\n    handleMenuOpen = () => {\r\n        this.setState(state => ({open: !this.state.open}))\r\n        // console.log(this.state.userValue)\r\n    }\r\n\r\n    //TODO: FIGURE OUT HOW TO ALLOW FOR USER GENERATED INT ARRAYS\r\n    handleDataChange = () => {\r\n        console.log(this.state.userValue[0])\r\n        // let tempArray = this.userValue.split(',');\r\n        // console.log(tempArray)\r\n        // this.props.handleNewData(this.state.userValue)\r\n        this.handleMenuOpen();\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return(\r\n            <Fragment>                \r\n                \r\n                <Button     variant = \"contained\" color = \"primary\" className = {classes.button} onClick = {this.handleMenuOpen}>\r\n                <Typography color   = \"secondary\">\r\n                        Generate Data\r\n                    </Typography>\r\n                </Button>\r\n\r\n                <Dialog\r\n                    className = {classes.dialog}\r\n                    open      = {this.state.open}>\r\n\r\n                    <DialogTitle>Generate Data</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        \r\n                        <TextField\r\n                            \r\n                            color       = \"primary\"\r\n                            placeholder = \"eg. 1,2,3...\"\r\n                            label       = \"Dataset Values\"\r\n                            margin      = \"normal\"\r\n                            onChange    = {val => this.setState({userValue: val.target.value.split(\",\")})}>\r\n                        </TextField>\r\n\r\n                        <Button\r\n                            onClick = {this.props.handleShuffleData}\r\n                            color   = \"secondary\">\r\n                                Shuffle\r\n                        </Button>\r\n\r\n                        <Button\r\n                            onClick = {this.handleDataChange}\r\n                            color   = \"secondary\">\r\n                                Confirm\r\n                        </Button>\r\n\r\n                        <Button\r\n                            color   = \"secondary\">\r\n                                Special Cases\r\n                        </Button>\r\n\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(ArrayGenerationMenu) \r\n\r\n","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles} from '@material-ui/core/styles'\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n})\r\n\r\nclass ScriptsViewMenu extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return(\r\n            <Button onClick={this.handleScriptsList} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                <Typography color=\"secondary\">\r\n                    Select Script\r\n                </Typography>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(ScriptsViewMenu) \r\n\r\n","import React from 'react'\r\n\r\nimport ArrayGenerationMenu from './ArrayGenerationMenu'\r\nimport ScriptsViewMenu from './ScriptsViewMenu'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow/'\r\nimport Pause from '@material-ui/icons/Pause'\r\nimport Refresh from '@material-ui/icons/Refresh'\r\nimport Previous from '@material-ui/icons/SkipPrevious'\r\nimport Next from '@material-ui/icons/SkipNext'\r\nimport { withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    paper: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit,\r\n        width: 570,\r\n    },\r\n\r\n    contextLog: {\r\n        padding: theme.spacing.unit,\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n\r\n    textField: {\r\n        margin: theme.spacing.unit,\r\n        width: 135,\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass ControlPanel extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            run: false,\r\n            pause: false\r\n        }\r\n    }\r\n\r\n    handleRunPause = () =>{\r\n        this.setState(state => ({run: !this.state.run}));\r\n        console.log(this.state.run);\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props;\r\n\r\n        return(\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper} elevation={7}>\r\n                    <IconButton color=\"secondary\" >\r\n                        <ToolTip title = \"Previous\">\r\n                            <Previous/>\r\n                        </ToolTip>\r\n                    </IconButton>\r\n                    \r\n                    <IconButton color=\"secondary\" onClick={this.handleRunPause}>\r\n                        <ToolTip title = {(!this.state.run)? \"Run\": \"Pause\"}>\r\n                            {(!this.state.run)? <PlayArrow/>: <Pause/>}\r\n                        </ToolTip>\r\n                    </IconButton>\r\n\r\n                    <IconButton color=\"secondary\">\r\n                        <ToolTip title = \"Next\">\r\n                            <Next/>\r\n                        </ToolTip>\r\n                    </IconButton>\r\n\r\n                    <IconButton color=\"secondary\" className={classes.button}>\r\n                        <ToolTip title = \"Reset\">\r\n                            <Refresh/>\r\n                        </ToolTip>\r\n                    </IconButton>\r\n\r\n                    <ScriptsViewMenu/>\r\n                        {this.props.currentMode === \"Sorting\" ? \r\n                            <ArrayGenerationMenu\r\n                                data={this.state.data}\r\n                                dataSize={this.state.dataSize}\r\n                                handleShuffleData={this.props.handleShuffleData}/> : \"\"\r\n                            }\r\n                    \r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(ControlPanel) ","import React, { Fragment } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass SortD3 extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            light: this.props.light,\r\n        }\r\n        this.drawChart = this.drawChart.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.drawChart();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart(){\r\n        const variableSpacing = Math.floor(this.props.width / this.props.data.length);\r\n\r\n        const node = this.node;\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(this.props.data)])\r\n            .range([0, this.props.height - 10])\r\n        \r\n        d3.select(node)\r\n            .selectAll('rect')\r\n            .data(this.props.data)\r\n            .enter()\r\n            .append('rect')\r\n   \r\n        d3.select(node)\r\n            .selectAll('rect')\r\n            .data(this.props.data)\r\n            .exit()\r\n            .remove()\r\n        \r\n        d3.select(node)\r\n            .selectAll('rect')\r\n            .data(this.props.data)\r\n            .style('fill', 'pink')\r\n            .attr('x', (d,i) => i * variableSpacing)\r\n            .attr('y', d => this.props.height - yScale(d))\r\n            .attr('height', d => yScale(d))\r\n            .attr('width', 25)\r\n\r\n\r\n        d3.select(node)\r\n            .selectAll(\"rect\")\r\n            .append(\"svg:title\")\r\n                .text(function(d) {return \"Value: \" + d})\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <svg\r\n                    ref    = {node => this.node = node}\r\n                    width  = {this.props.width}\r\n                    height = {this.props.height}/>\r\n            </Fragment>\r\n\r\n        ) \r\n    }\r\n}\r\n\r\nexport default SortD3;","\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport SortD3 from './Simulations/Sorting/SortD3'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: 570,\r\n        height: 500,\r\n    }\r\n})\r\n\r\nclass SimView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            width: 550,\r\n            height: 480,\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {classes} = this.props\r\n        //console.log(this.props.match.url)\r\n        return(\r\n            \r\n            <Paper className={classes.root} elevation={7}>\r\n                <SortD3\r\n                className=\"test\"\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                data={this.props.data}/>\r\n                \r\n                <Divider/>\r\n            </Paper> \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(SimView)","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        minWidth: 500,\r\n        flexGrow: 1,\r\n        elevation7: true,\r\n        height: 100\r\n    }\r\n})\r\n\r\nclass AboutUs extends React.Component{\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n\r\n            <Grid\r\n                justify=\"center\"\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"center\" \r\n                >\r\n                <Grid item>\r\n                    <Paper className={classes.root}>\r\n                        <Typography>\r\n                            About Us\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(AboutUs)","import React from 'react';\r\n\r\n// Self-generated components\r\nimport AppDrawer from './AppDrawer/AppDrawer';\r\nimport CodePortal from './CodePortal/CodePortal';\r\nimport InfoCard from './temp/InfoCard/InfoCard';\r\nimport ControlPanel from './CodeControls/ControlPanel';\r\nimport SimView from './SimView/SimView';\r\nimport AboutUs from './AboutUs'\r\n\r\nimport * as d3 from 'd3'\r\n\r\n// Material UI Components\r\nimport { MuiThemeProvider, createMuiTheme, withStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\n\r\n// Base Theme settings\r\nimport {lightTheme, darkTheme} from './themes';\r\n\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nconst lTheme = createMuiTheme(lightTheme);\r\nconst dTheme = createMuiTheme(darkTheme);\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n})\r\n\r\nclass App extends React.Component {\r\n\r\n    // Constructor for the Base App\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // Prop for handling changes from Light theme to Dark theme, and vice versa\r\n            light: true,\r\n            // Prop for handling activation and deactivation of Helper mode\r\n            helper: false,\r\n            \r\n            data: [12, 5, 4, 8, 9, 16, 23, 12, 12, 5, 2, 8, 9, 16, 25, 12, 12, 1, 5],\r\n            // Prop for list of pages\r\n            modes: [\"Turing\", \"von Neumann\", \"Sorting\"],\r\n\r\n            currentMode: \"FYP18053\"\r\n\r\n        };\r\n\r\n        // Bind handlers to the App Component\r\n        this.handleLightChange = this.handleLightChange.bind(this);\r\n        this.handleHelperChange = this.handleHelperChange.bind(this);\r\n    }\r\n\r\n    // Handles change of theme from Light Mode to Dark Mode\r\n    handleLightChange = () =>{\r\n        this.setState(state => ({light: !this.state.light}));\r\n        console.log(\"Light: \" + this.state.light);\r\n    }\r\n\r\n    // Handles (de)activation of Helper Mode\r\n    handleHelperChange = () =>{\r\n        this.setState(state => ({helper: !this.state.helper}));\r\n        console.log(\"Helper: \" + this.state.helper);\r\n    }\r\n\r\n    // Leverage D3 library to handle shuffling of dataset\r\n    handleShuffleData = () => {\r\n        let newData = d3.shuffle(this.state.data);\r\n        this.setState(state => ({data: newData}));\r\n    }\r\n\r\n    handleNewData = (newData) => {\r\n        this.setState({data: newData})   \r\n    }\r\n\r\n    // Handle modification of the currentMode prop\r\n    handleCurrentMode = (text) => {\r\n        this.setState({currentMode: text})\r\n\r\n        // Save in local storage, so as to remember current page upon refresh\r\n        localStorage.setItem('currentMode', text)\r\n\r\n    }\r\n    \r\n    // Save Light/Dark theme, and Helper mode choice in local storage\r\n    componentWillMount(){\r\n        localStorage.getItem('light') && this.setState({\r\n            light: JSON.parse(localStorage.getItem('light')),\r\n            helper: JSON.parse(localStorage.getItem('helper')),\r\n            currentMode: localStorage.getItem('currentMode')\r\n        })\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('light', JSON.stringify(nextState.light))\r\n        localStorage.setItem('helper', JSON.stringify(nextState.helper))\r\n    }\r\n    \r\n    render() {\r\n        //TODO: FIX REDIRECT TO TAG: SET IT TO CURRENT PAGE\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className = {classes.root}>\r\n        \r\n                <MuiThemeProvider theme = {this.state.light ? lTheme : dTheme}>\r\n\r\n                    <AppDrawer\r\n                        handleCurrentMode={this.handleCurrentMode}\r\n                        handleHelperChange={this.handleHelperChange} \r\n                        handleLightChange={this.handleLightChange} \r\n                        currentMode={this.state.currentMode}\r\n                        helper={this.state.helper} \r\n                        light={this.state.light} \r\n                        modes={this.state.modes}\r\n                    />                    \r\n                    <div style={{marginTop: '90px'}}></div>\r\n\r\n                    {/* <Switch>\r\n                        <Route\r\n                            exact path={\r\n                                this.state.currentMode === \"FYP18053\" ? \"/\" : \r\n                                this.state.currentMode === \"Turing\" ? \"/turing\" :\r\n                                this.state.currentMode === \"von Neumann\" ? \"/von_neumann\": \r\n                                this.state.currentMode === \"Sorting\" ? \"/sorting\" :  \"/\"\r\n                                }\r\n                            render={ props => \r\n\r\n                                <Grid \r\n                                    container direction=\"row\" \r\n                                    justify=\"space-evenly\" \r\n                                    alignItems=\"center\" \r\n                                    spacing={24}>\r\n\r\n                                    <Grid item>\r\n                                        <SimView\r\n                                            light={this.state.light}\r\n                                            data={this.state.data}\r\n                                            currentMode={this.state.currentMode}/>\r\n                                    </Grid>\r\n\r\n                                    <Grid item >\r\n                                        <CodePortal \r\n                                            light={this.state.light}\r\n                                            currentMode={this.state.currentMode}/>\r\n                                            \r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item >\r\n                                        <ControlPanel\r\n                                            data={this.state.data}\r\n                                            handleShuffleData={this.handleShuffleData}\r\n                                            handleNewData={this.handleNewData}\r\n                                            currentMode={this.state.currentMode}/>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item>\r\n                                        <InfoCard/>\r\n                                    </Grid>\r\n                            \r\n                                </Grid>\r\n                            }>\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/about_us\" component={AboutUs}/>\r\n\r\n                        <Redirect to={\r\n                            \r\n                            this.state.currentMode === \"FYP18053\"? \"/\" : this.state.currentMode.replace(/\\s/g,'_').toLowerCase()}/>\r\n                    </Switch> */}\r\n\r\n                    <Grid \r\n                        container direction=\"row\" \r\n                        justify=\"space-evenly\" \r\n                        alignItems=\"center\" \r\n                        spacing={24}>\r\n\r\n                        <Grid item>\r\n                            <SimView\r\n                                light={this.state.light}\r\n                                data={this.state.data}\r\n                                currentMode={this.state.currentMode}/>\r\n                        </Grid>\r\n\r\n                        <Grid item >\r\n                            <CodePortal \r\n                                light={this.state.light}\r\n                                currentMode={this.state.currentMode}/>\r\n                                \r\n                        </Grid>\r\n                        \r\n                        <Grid item >\r\n                            <ControlPanel\r\n                                data={this.state.data}\r\n                                handleShuffleData={this.handleShuffleData}\r\n                                handleNewData={this.handleNewData}\r\n                                currentMode={this.state.currentMode}/>\r\n                        </Grid>\r\n                        \r\n                        <Grid item>\r\n                            <InfoCard/>\r\n                        </Grid>\r\n                \r\n                    </Grid>\r\n                </MuiThemeProvider>\r\n            </div>                \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);","const darkTheme = {\r\n    palette: {\r\n        type: 'dark',\r\n\r\n        primary: {\r\n            main: '#002f39',\r\n        },\r\n        secondary: {\r\n            main: \"#afe2f7\",\r\n        },\r\n        typography: {\r\n            useNextVariants: true,\r\n        }\r\n    },\r\n}\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            main: '#afe2f7',\r\n        },\r\n        secondary: {\r\n            main: '#002f39',\r\n        },\r\n    },\r\n\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n}\r\n\r\n\r\n\r\nexport {lightTheme, darkTheme};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {HashRouter, Redirect} from 'react-router-dom';\r\n\r\nReactDOM.\r\n    render(            \r\n    \r\n        <HashRouter basename=\"/\">\r\n            <App/>\r\n        </HashRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}